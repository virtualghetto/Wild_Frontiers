#textdomain wesnoth-Wild_Frontiers
# ------------------------------------------------------------------------
# ----- Project-specific macros ------------------------------------------
# ------------------------------------------------------------------------
# Each project is an event that will be called with the WF_CALL_FUNCTION macro
# This means that details about each project will be confined to the event,
# the relevant menu item, and cost/turn information in game_parameters.cfg.

# Each event will be called with three parameters: param.do, param.x, and
# param.y. Each event must be able to handle the following values for .do:
# "start"	= checks that there's enough gold and starts working
# "stop"	= returns gold and converts project terrain to dirt
# "build"	= constructs the building or replaces terrain at x,y
# In addition, buildings that can be burned should also accept
# "burn"	=  burn building that includes x,y

# General building macros are at the end of this file.

# ----- Project Types ----------------------------------------------------
#define SET_PROJECT_TYPES
    # ----- Armorer -----
    [event]
        name="armorer"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (armorer) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {ARMORER_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "armorer" {ARMORER_TURNS} {ARMORER_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the armorer's shop right-erway, milord."
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, an armorer requires a 2 x 2 open field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' an armorer requires {ARMORER_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Ya $param.x $param.y}
                #{VARIABLE_OP buildings.armorers add 1}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built an armorer."}
                {FIRE_EVENT built_armorer}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Ya "scenery/village-human-burned3.png"}
                #{VARIABLE_OP buildings.armorers sub 1}
                {RECRUIT_CHECK}
            [/case]
        [/switch]
    [/event]

    # ----- Blacksmith -----
    [event]
        name="blacksmith"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (blacksmith) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {FORGE_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "blacksmith" {FORGE_TURNS} {FORGE_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the blacksmith's forge right-erway, milord."
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, a blacksmith needs a 2 x 2 field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' a blacksmith requires {FORGE_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Yf $param.x $param.y}
                #{VARIABLE_OP buildings.blacksmiths add 1}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built a blacksmith's forge."}
                {FIRE_EVENT built_forge}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Yf "scenery/rubble.png"}
                #{VARIABLE_OP buildings.blacksmiths sub 1}
                {RECRUIT_CHECK}
            [/case]
        [/switch]
    [/event]

    # ----- Bowyer -----
    [event]
        name="bowyer"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (bowyer) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {BOWYER_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "bowyer" {BOWYER_TURNS} {BOWYER_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the bowyer's workshop right-erway, milord."
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, a bowyer requires a 2 x 2 open field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' a bowyer requires {BOWYER_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Yb $param.x $param.y}
                #{VARIABLE_OP buildings.bowyers add 1}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built a bowyer's workshop."}
                {FIRE_EVENT built_bowyer}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Yb "scenery/village-human-burned3.png"}
                #{VARIABLE_OP buildings.bowyers sub 1}
                {RECRUIT_CHECK}
            [/case]
        [/switch]
    [/event]

    # ----- Library -----
    [event]
        name="library"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {PROJECT_COUNT (library) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {LIBRARY_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "library" {LIBRARY_TURNS} {LIBRARY_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the library right-erway, milord. Better start buyin' some books to put in it!"
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, a library requires a 2 x 2 open field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' a library requires {LIBRARY_COST} gold for supplies and books, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Yu $param.x $param.y}
                #{VARIABLE_OP buildings.libraries add 1}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built a library."}
                {FIRE_EVENT built_library}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Yu "scenery/village-human-burned3.png"}
                #{VARIABLE_OP buildings.libraries sub 1}
                {RECRUIT_CHECK}
            [/case]
        [/switch]
    [/event]

    # ----- Stables -----
    [event]
        name="stables"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (stables) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {STABLE_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "stables" {STABLE_TURNS} {STABLE_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the 'orse stables right-erway, milord."
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, stables require a 2 x 2 open field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' stables requires {STABLE_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Ys $param.x $param.y}
                #{VARIABLE_OP buildings.stables add 1}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built horse stables."}
                {FIRE_EVENT built_stables}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Ys "scenery/village-human-burned1.png"}
                #{VARIABLE_OP buildings.stables sub 1}
                {RECRUIT_CHECK}
            [/case]
        [/switch]
    [/event]

    # ----- Tavern -----
    [event]
        name="tavern"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {PROJECT_COUNT (tavern) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {TAVERN_COST}}
                        [then]
                            [if]
                                {HAVE_2X2_SPACE $param.x $param.y}
                                [then]
                                    {MODIFY_2X2_SPACE Yw $param.x $param.y}
                                    {START_PROJECT "tavern" {TAVERN_TURNS} {TAVERN_COST} $param.x $param.y}
                                    [redraw][/redraw]
                                    [message]
                                        speaker=unit
                                        message=_"We'll begin buildin' the tavern right-erway, milord. Better start buyin' the first drinks!"
                                    [/message]
                                [/then]
                                [else]
                                    [message]
                                        speaker=unit
                                        message=_"Milord, a tavern requires a 2 x 2 open field, unblocked by trees, 'ills, or other projects."
                                    [/message]
                                [/else]
                            [/if]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' a tavern requires {TAVERN_COST} gold for supplies and booze, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_2X2_SPACE Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {PLACE_2X2_BUILDING Yt $param.x $param.y}
                [sound]
                    name=potion.ogg
                [/sound]
                #{VARIABLE_OP buildings.tavern add 1}
                [modify_side]
                    side=1
                    income=0
                [/modify_side]
                {NOTIFY $param.x $param.y _"Your workers have built a tavern."}
                {FIRE_EVENT built_tavern}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {BURN_2X2_BUILDING $param.x $param.y Yt "scenery/village-human-burned1.png"}
                #{VARIABLE_OP buildings.tavern sub 1}
                [if]
                    #{VARIABLE_CONDITIONAL buildings.tavern greater_than 0}
                    [have_location]
                        terrain=*^Yt
                        count=0
                    [/have_location]
                    [then]
                        [modify_side]
                            side=1
                            income=-2
                        [/modify_side]
                    [/then]
                [/if]
            [/case]
        [/switch]
    [/event]

    # ----- Farms -----
    [event]
        name="farm"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {FARM_COST}}
                    [then]
                        [if]
                            [and]
                                # check land area here and no other workers
                                # The location X,Y is buildable because that's required for the
                                # menu_item to appear in the first place
                                [have_location]
                                    x,y=$param.x,$param.y
                                    [filter_adjacent_location]
                                        terrain={BUILDABLE_TERRAIN}
                                        count=6
                                    [/filter_adjacent_location]
                                [/have_location]
#ifndef ENABLE_FARM_2X3
                                [have_location]
                                    x,y="$($param.x-2*{FARM_RADIUS})",$param.y
                                    terrain={BUILDABLE_TERRAIN}
                                [/have_location]
                                [have_location]
                                    x,y="$($param.x+2*{FARM_RADIUS})",$param.y
                                    terrain={BUILDABLE_TERRAIN}
                                [/have_location]
#endif
                            [/and]
                            [then]
                                {MODIFY_3X3_SPACE Yw $param.x $param.y}
                                {MODIFY_TERRAIN Yw $param.x $param.y}
                                {START_PROJECT "farm" {FARM_TURNS} {FARM_COST} $param.x $param.y}
                                [redraw][/redraw]
                                [message]
                                    speaker=unit
                                    message=_"We'll begin workin' on this farm right-erway, milord."
                                [/message]
                            [/then]
                            [else]
#ifndef ENABLE_FARM_2X3
                                [message]
                                    speaker=unit
                                    message=_"Milord, a farm requires an open field 3 x 3 in size, unblocked by trees, 'ills, or other projects."
                                [/message]
#endif
#ifdef ENABLE_FARM_2X3
                                [message]
                                    speaker=unit
                                    message=_"Milord, a farm requires an open field all 'round, unblocked by trees, 'ills, or other projects."
                                [/message]
#endif
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, buildin' a farm requires {FARM_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_3X3_SPACE Re $param.x $param.y}
                {MODIFY_TERRAIN "Re" $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_3X3_SPACE Rb^Gvs $param.x $param.y}
                {MODIFY_TERRAIN "Rb^Vh" $param.x $param.y}	# place the village
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a new farm."}
                {FIRE_EVENT built_farm}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                # A farm only burns if enemies step on the village, not if they walk
                # on the crops. Don't turn surrounding to dirt in the winter
                [store_locations]
                    variable=temp
                    [and]
                        x,y=$param.x,$param.y
                        radius=1
                    [/and]
                    [not]
                        x,y=$param.x,$param.y
                    [/not]
                [/store_locations]
                [foreach]
                    array=temp
                    [do]
                        {STOP_PROJECT $this_item.x $this_item.y}
                    [/do]
                [/foreach]
                {CLEAR_VARIABLE temp}
                [if]
                    [have_location]
                        terrain=Aa^*
                        x,y=$param.x,$param.y
                    [/have_location]
                    [then]
                        [terrain]
                            terrain=^
                            layer=overlay
                            [and]
                                terrain=*^Gvs,*^Ygy,*^Ymb,*^Ymc,*^Ymd
                                [filter_adjacent_location]
                                    #terrain=*^Vh,*^Vha,*^Vhr
                                    x,y=$param.x,$param.y
                                [/filter_adjacent_location]
                            [/and]
                        [/terrain]
                        {MODIFY_TERRAIN Rb $param.x $param.y}
                    [/then]
                    [else]
                        {MODIFY_TERRAIN Rb $param.x $param.y}
                        {MODIFY_3X3_SPACE Rb $param.x $param.y}
                    [/else]
                [/if]
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/village-human-burned2.png" $param.x $param.y}
                [for]
                    array=labels.map_labels
                    reverse=yes
                    [do]
                        [if]
                            [and]
                                {VARIABLE_CONDITIONAL labels.map_labels[$i].x numerical_equals $param.x}
                                {VARIABLE_CONDITIONAL labels.map_labels[$i].y numerical_equals $param.y}
                            [/and]
                            [then]
                                {CLEAR_VARIABLE labels.map_labels[$i]}
                            [/then]
                        [/if]
                    [/do]
                [/for]
                [label]
                    x,y=$param.x,$param.y
                    text=""
                [/label]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Restore Farm -----
    [event]
        name="restore farm"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "restore farm" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin restorin' this farm right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a restorin' the farm requires {PAVED_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                [terrain]
                    terrain=^Vh
                    layer=overlay
                    [and]
                        terrain=*^Vhr
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                {NOTIFY $param.x $param.y _"Your workers have restored a farm."}
            [/case]
            [case]
                value="burn","ruin"
            [/case]
        [/switch]
    [/event]

    # ----- Wooden Keep -----
    [event]
        name="wooden keep"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {CASTLE_COST}}
                    [then]
                        #{MODIFY_TERRAIN Ce $param.x $param.y}
                        {START_PROJECT "wooden keep" {CASTLE_TURNS} {CASTLE_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin puttin' the wooden keep up right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, puttin' up a wooden keep requires {CASTLE_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                #{MODIFY_TERRAIN Ce $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ket $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        fort=-5
                        great=yes
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a new wooden keep."}
                {FIRE_EVENT built_fort}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        fort=5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Wooden Encampment -----
    [event]
        name="fort"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {FORT_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "fort" {FORT_TURNS} {FORT_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin puttin' the encampment up right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, puttin' up an encampment requires {FORT_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ce $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        fort=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a new wooden encampment."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        fort=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Restore fort -----
    [event]
        name="restore fort"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "restore fort" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin restorin' this fort right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a restorin' the fort requires {PAVED_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                [terrain]
                    terrain=Ce
                    [and]
                        terrain=Cer
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                {NOTIFY $param.x $param.y _"Your workers have restored a fort."}
            [/case]
            [case]
                value="burn","ruin"
            [/case]
        [/switch]
    [/event]

    # ----- Stone Fortifications -----
    [event]
        name="castle"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "castle" $param.x $param.y {CASTLE_COST} {CASTLE_TURNS} (_"Making' this 'ere encampment into a proper stone buildin' will take {CASTLE_COST} gold and {CASTLE_TURNS} work shifts, milord. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
                # no need to modify terrain -- just leave as encampment
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {MODIFY_TERRAIN Ch $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        fort=-5
                        great=yes
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have added stone walls to your encampment."}
            [/case]
            # Castle can't be burned -- that's the point
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        fort=5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Restore castle -----
    [event]
        name="restore castle"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "restore castle" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin restorin' this castle right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a restorin' the castle requires {PAVED_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                [terrain]
                    terrain=Ch
                    [and]
                        terrain=Chr
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                {NOTIFY $param.x $param.y _"Your workers have restored a castle."}
            [/case]
            [case]
                value="burn","ruin"
            [/case]
        [/switch]
    [/event]

    # ----- Stone keep -----
    [event]
        name="stone keep"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "stone keep" $param.x $param.y {KEEP_COST} {KEEP_TURNS} (_"Buildin' up a proper stone keep is not as easy as puttin' up a few walls. It'll take my boys {KEEP_TURNS} work shifts, and we'll need {KEEP_COST} gold for supplies, milord. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
                # no need to modify terrain -- just leave as wooden keep
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {MODIFY_TERRAIN Kh^Yk $param.x $param.y}
                [fire_event]
                    name=action_fort
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        fort=-5
                        great=yes
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have added stone walls to your encampment."}
            [/case]
            # Stone keep can't be burned -- that's the point
        [/switch]
    [/event]

    # ----- Cut Forest -----
    [event]
        name="cut forest"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "cut forest" $param.x $param.y {FOREST_COST} {FOREST_TURNS} (_"Cuttin' down all the trees in this area will take {FOREST_COST} gold and {FOREST_TURNS} work shifts, milord. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                # Remove the forest, leaving the underlying terrain there
                # Also annoy the elves
                [if]
                    [have_location]	# great tree
                        x,y=$param.x,$param.y
                        terrain=*^Fet
                    [/have_location]
                    [then]	# REALLY annoy the elves
                        {VARIABLE_OP relations.trees add 5}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="burn"
                                trees=5
                                great=yes
                            [/primary_attack]
                        [/fire_event]
                    [/then]
                    [else]	# regular forest
                        {VARIABLE_OP relations.trees add 1}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="burn"
                                trees=1
                                great=no
                            [/primary_attack]
                        [/fire_event]
                    [/else]
                [/if]
                [terrain]
                    x,y=$param.x,$param.y
                    layer=overlay
                    terrain="^ "
                    replace_if_failed=yes
                [/terrain]
                [sound]
                    name="wose-die.ogg"
                [/sound]
                {NOTIFY $param.x $param.y _"Your workers have felled all the trees in this area."}
            [/case]
        [/switch]
    [/event]

    # ----- Plant trees -----
    [event]
        name="plant trees"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {FOREST_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "plant trees" {FOREST_TURNS} {FOREST_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {FOREST_COST} gold for seeds 'n tools, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=bite.ogg
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {RANDOM_VAR rnd_tree "Gg^Fp,Gg^Fet,Gg^Fms,Gg^Fds"}
                {MODIFY_TERRAIN $rnd_tree $param.x $param.y}
                {CLEAR_VARIABLE rnd_tree}
                [if]
                    [have_location]	# great tree
                        x,y=$param.x,$param.y
                        terrain=*^Fet
                    [/have_location]
                    [then]	# REALLY please the elves
                        {VARIABLE_OP relations.trees sub 5}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="build"
                                trees=-5
                                great=yes
                            [/primary_attack]
                        [/fire_event]
                    [/then]
                    [else]	# regular forest
                        {VARIABLE_OP relations.trees sub 1}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="build"
                                trees=-1
                                great=no
                            [/primary_attack]
                        [/fire_event]
                    [/else]
                [/if]
                {NOTIFY $param.x $param.y _"Your workers have planted trees in this area."}
            [/case]
        [/switch]
    [/event]

    # ----- Plant Hill trees -----
    [event]
        name="plant hill trees"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {FOREST_COST}}
                    [then]
                        {START_PROJECT "plant hill trees" {FOREST_TURNS} {FOREST_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {FOREST_COST} gold for seeds 'n tools, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=bite.ogg
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {RANDOM_VAR rnd_tree "^Fp,^Fet,^Fms,^Fds"}
                [terrain]
                    terrain=$rnd_tree
                    layer=overlay
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=H*,H*^E*
                    [/and]
                [/terrain]
                {CLEAR_VARIABLE rnd_tree}
                [if]
                    [have_location]	# great tree
                        x,y=$param.x,$param.y
                        terrain=*^Fet
                    [/have_location]
                    [then]	# REALLY please the elves
                        {VARIABLE_OP relations.trees sub 5}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="build"
                                trees=-5
                                great=yes
                            [/primary_attack]
                        [/fire_event]
                    [/then]
                    [else]	# regular forest
                        {VARIABLE_OP relations.trees sub 1}
                        [fire_event]
                            name=action_trees
                            [primary_unit]
                                x=$param.x
                                y=$param.y
                            [/primary_unit]
                            [primary_attack]
                                action="build"
                                trees=-1
                                great=no
                            [/primary_attack]
                        [/fire_event]
                    [/else]
                [/if]
                {NOTIFY $param.x $param.y _"Your workers have planted hill trees in this area."}
            [/case]
        [/switch]
    [/event]

    # ----- Flatten Hills -----
    [event]
        name="flatten hills"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "flatten hills" $param.x $param.y {HILL_COST} {HILL_TURNS} (_"Movin' enough dirt to flatten these 'ills enough for farms and buildings will take {HILL_COST} gold and {HILL_TURNS} work shifts. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=cave-in.ogg
                [/sound]
                {VARIABLE_OP relations.hills add 1}
                #{MODIFY_TERRAIN Gg^Es $param.x $param.y}
                [terrain]
                    terrain=Rb^Es
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=H*,H*^E*
                    [/and]
                [/terrain]

                {NOTIFY $param.x $param.y _"Your workers have finished flattening these hills."}
                [fire_event]
                    name=action_hills
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        hills=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Mound -----
    [event]
        name="mound"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {HILL_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "mound" {HILL_TURNS} {HILL_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {HILL_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=skeleton-die-2.ogg
                [/sound]
                {VARIABLE_OP relations.hills sub 1}
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Hhd^Es $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have finished piling dirt to create make a mound."}
                [fire_event]
                    name=action_hills
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        hills=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Raise Mountain -----
    [event]
        name="mountain"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "mountain" $param.x $param.y {HILL_COST} {HILL_TURNS} (_"Using my magick power to raise up a mountain will take {HILL_COST} gold and {HILL_TURNS} work shifts. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                {VARIABLE_OP relations.hills sub 5}
                {VARIABLE_OP random_sound rand (rumble.ogg,cave-in.ogg)}
                {QUAKE $random_sound}
                {CLEAR_VARIABLE random_sound}
                #{MODIFY_TERRAIN Mm $param.x $param.y}
                [terrain]
                    terrain=Ms^Es
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=Ha,Ha^E*
                    [/and]
                [/terrain]
                [terrain]
                    terrain=Mm^Es
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=H*,H*^E*
                    [/and]
                [/terrain]
                {NOTIFY $param.x $param.y _"Your mage have finished raising a mountain from these hills."}
                [fire_event]
                    name=action_hills
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        hills=-5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {VARIABLE_OP relations.hills add 5}
                {VARIABLE_OP random_sound rand (rumble.ogg,cave-in.ogg)}
                {QUAKE $random_sound}
                {CLEAR_VARIABLE random_sound}
                #{MODIFY_TERRAIN Hhd^Es $param.x $param.y}
                [terrain]
                    terrain=Ha^Es
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=Ms,Ms^E*
                    [/and]
                [/terrain]
                [terrain]
                    terrain=Hhd^Es
                    [and]
                        x=$param.x
                        y=$param.y
                        terrain=M*,M*^E*
                    [/and]
                [/terrain]
                {FIRE_ANIMATION $param.x $param.y}
                [fire_event]
                    name=action_hills
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        hills=5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Drain Swamp -----
    [event]
        name="drain swamp"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "drain swamp" $param.x $param.y {SWAMP_COST} {SWAMP_TURNS} (_"Drainin' this swamp and filling it with dirt will cost {SWAMP_COST} gold and take {SWAMP_TURNS} work shifts, milord. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mud-glob.ogg
                [/sound]
                {MODIFY_TERRAIN Ds $param.x $param.y}
                [fire_event]
                    name=action_moat
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        moat=1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have finished draining this swamp."}
            [/case]
        [/switch]
    [/event]

    # ----- Mud Moat -----
    [event]
        name="mud moat"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {NO_CHECK_AND_START "mud moat" $param.x $param.y {SWAMP_COST} {SWAMP_TURNS} (_"Drainin' out the water and fillin' in dirt will cost {SWAMP_COST} gold and take {SWAMP_TURNS} work shifts, milord. Do yer want us ta get started?")}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mud-glob-miss.ogg
                [/sound]
                {MODIFY_TERRAIN Sm $param.x $param.y}
                [fire_event]
                    name=action_moat
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        moat=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                [fire_event]
                    name=action_water
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        water=1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have finished making a mud moat."}
            [/case]
        [/switch]
    [/event]

    # ----- Divert stream -----
    [event]
        name="divert stream"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {STREAM_COST}}
                    [then]
                        {MODIFY_TERRAIN Yww $param.x $param.y}
                        {START_PROJECT "divert stream" {STREAM_TURNS} {STREAM_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {STREAM_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ww $param.x $param.y}
                [sound]
                    name=water-blast.wav
                [/sound]
                [fire_event]
                    name=action_water
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        water=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have successfully diverted the stream."}
            [/case]
        [/switch]
    [/event]

    # ----- Build Road -----
    [event]
        name="road"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                #{CHECK_AND_START "road" $param.x $param.y {PAVED_COST} {PAVED_TURNS} (_"Layin' a new road 'ere will cost {PAVED_COST} gold and take {PAVED_TURNS} work shifts, milord. Do yer want us ta get started?")}
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "road" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                        #[message]
                        #	speaker=unit
                        #	message=_"We'll begin layin' a new road 'ere right-erway, milord."
                        #[/message]
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Rrc $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have finished laying a road."}
            [/case]
            [case]
                value="burn","ruin"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Plow Snow -----
    [event]
        name="plow snow"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "plow snow" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=dagger-swish.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                [terrain]
                    terrain=Rb^Es
                    [and]
                        terrain=Aa,Aa^E*
                        x,y=$param.x,$param.y
                        [filter_adjacent_location]
                            terrain=*^Vh,*^Vha,*^Vhr
                            count=0
                        [/filter_adjacent_location]
                    [/and]
                [/terrain]
                [terrain]
                    terrain=Rb^Gvs
                    [and]
                        terrain=Aa,Aa^E*
                        x,y=$param.x,$param.y
                        [filter_adjacent_location]
                            terrain=*^Vh,*^Vha,*^Vhr
                        [/filter_adjacent_location]
                    [/and]
                [/terrain]
                {NOTIFY $param.x $param.y _"Your workers have finished plowing snow."}
            [/case]
        [/switch]
    [/event]

    # ----- Break Ice -----
    [event]
        name="break ice"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "break ice" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ww $param.x $param.y}
                [sound]
                    name=water-blast.wav
                [/sound]
                [fire_event]
                    name=action_water
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        water=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have successfully broken the ice."}
            [/case]
        [/switch]
    [/event]

    # ----- Slow Trap -----
    [event]
        name="slow trap"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "slow trap" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [store_locations]
                    x,y=$param.x,$param.y
                    variable=traps.slow
                    [or]
                        find_in=traps.slow
                    [/or]
                [/store_locations]
                [sound]
                    name=mace-miss.ogg
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ywt $param.x $param.y}
                {PLACE_IMAGE "projectiles/web.png" $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have finished laying a slow trap."}
            [/case]
            [case]
                value="burn","ruin"
                [store_locations]
                    variable=traps.slow
                    find_in=traps.slow
                    [not]
                        x,y=$param.x,$param.y
                    [/not]
                [/store_locations]
                [sound]
                    name=net.wav
                [/sound]
                [remove_item]
                    x,y=$param.x,$param.y
                    image="projectiles/web.png"
                [/remove_item]
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Spike Trap -----
    [event]
        name="spike trap"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "spike trap" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [store_locations]
                    x,y=$param.x,$param.y
                    variable=traps.spike
                    [or]
                        find_in=traps.spike
                    [/or]
                [/store_locations]
                [sound]
                    name=mace-miss.ogg
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ywt $param.x $param.y}
                {PLACE_IMAGE "items/burial.png" $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have finished laying a spike trap."}
            [/case]
            [case]
                value="burn","ruin"
                [store_locations]
                    variable=traps.spike
                    find_in=traps.spike
                    [not]
                        x,y=$param.x,$param.y
                    [/not]
                [/store_locations]
                [sound]
                    name=spear.wav
                [/sound]
                [remove_item]
                    x,y=$param.x,$param.y
                    image="items/burial.png"
                [/remove_item]
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Mushroom Grove -----
    [event]
        name="mushroom grove"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "mushroom grove" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                    [/then]
                    [else]
                        {UNIT_SAYS _"But milord, we need {PAVED_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=dagger-swish.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Gg^Em $param.x $param.y}
                [heal_unit]
                    [filter]
                        side=1
                        x,y=$param.x,$param.y
                    [/filter]
                    animate=yes
                    moves=full
                    restore_attacks=yes
                    restore_statuses=yes
                    amount=full
                [/heal_unit]
                {CLEAR_VARIABLE heal_amount}
                {NOTIFY $param.x $param.y _"Your workers have finished planting a mushroom grove."}
            [/case]
        [/switch]
    [/event]

    # ----- Build Bridge -----
    [event]
        name="bridge"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                #{CHECK_AND_START "bridge" $param.x $param.y {BRIDGE_COST} {BRIDGE_TURNS} (_"Constructin' a new bridge 'ere will cost {BRIDGE_COST} gold and take {BRIDGE_TURNS} work shifts. Do yer want us ta get started?")}
                [message]
                    speaker=unit
                    message=_"Constructin' a new bridge 'ere will cost {BRIDGE_COST} gold and take {BRIDGE_TURNS} work shifts. Do yer want us ta get started?"
                    [option]
                        label=_"Yes. <i>(Auto-directional)</i>"
                        image = "terrain/water/coast-tile.png~BLIT(terrain/bridge/wood-ne-s-nw.png)~SCALE(36,36)"
                        [command]
                            {STORE_GOLD}
                            [if]
                                {CHECK_GOLD {BRIDGE_COST}}
                                [then]
                                    {START_PROJECT "bridge" {BRIDGE_TURNS} {BRIDGE_COST} $param.x $param.y}
                                [/then]
                                [else]
                                    {UNIT_SAYS _"But milord, we need {BRIDGE_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                                [/else]
                            [/if]
                        [/command]
                    [/option]
                    [option]
                        label=_"N/S Bridge"
                        image = "terrain/water/coast-tile.png~BLIT(terrain/bridge/wood-n-s.png)~SCALE(36,36)"
                        [command]
                            {STORE_GOLD}
                            [if]
                                {CHECK_GOLD {BRIDGE_COST}}
                                [then]
                                    {START_PROJECT_CUSTOM "bridge" "^Bw|" {BRIDGE_TURNS} {BRIDGE_COST} $param.x $param.y}
                                [/then]
                                [else]
                                    {UNIT_SAYS _"But milord, we need {BRIDGE_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                                [/else]
                            [/if]
                        [/command]
                    [/option]
                    [option]
                        label=_"NE/SW Bridge"
                        image = "terrain/water/coast-tile.png~BLIT(terrain/bridge/wood-ne-sw.png)~SCALE(36,36)"
                        [command]
                            {STORE_GOLD}
                            [if]
                                {CHECK_GOLD {BRIDGE_COST}}
                                [then]
                                    {START_PROJECT_CUSTOM "bridge" "^Bw/" {BRIDGE_TURNS} {BRIDGE_COST} $param.x $param.y}
                                [/then]
                                [else]
                                    {UNIT_SAYS _"But milord, we need {BRIDGE_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                                [/else]
                            [/if]
                        [/command]
                    [/option]
                    [option]
                        label=_"SE/NW Bridge"
                        image = "terrain/water/coast-tile.png~BLIT(terrain/bridge/wood-se-nw.png)~SCALE(36,36)"
                        [command]
                            {STORE_GOLD}
                            [if]
                                {CHECK_GOLD {BRIDGE_COST}}
                                [then]
                                    {START_PROJECT_CUSTOM "bridge" "^Bw\" {BRIDGE_TURNS} {BRIDGE_COST} $param.x $param.y}
                                [/then]
                                [else]
                                    {UNIT_SAYS _"But milord, we need {BRIDGE_COST} gold for supplies, and yer treasury don't 'ave that much!"}
                                [/else]
                            [/if]
                        [/command]
                    [/option]
                    [option]
                        label=_"No"
                        image = "terrain/water/coast-tile.png~SCALE(36,36)"
                        [command] [/command]
                    [/option]
                [/message]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=net.wav
                [/sound]
                [if]
                    {VARIABLE_CONDITIONAL param.custom equals "none"}
                    [then]
                        # THIS ENDS UP ALWAYS WITH A N/S BRIDGE, NEEDS TO BE FIXED
                        [if]
                            {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "n,s" 2}
                            [then]
                                {TERRAIN_OVERLAY ^Bw| $param.x $param.y}
                            [/then]
                            [else]
                                [if]
                                    {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "ne,sw" 2}
                                    [then]
                                        {TERRAIN_OVERLAY ^Bw/ $param.x $param.y}
                                    [/then]
                                    [else]
                                        [if]
                                            {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "nw,se" 2}
                                            [then]
                                                {TERRAIN_OVERLAY ^Bw\ $param.x $param.y}
                                            [/then]
                                            [else]
                                                # begin else block {
                                                [if]
                                                    {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "n,s" 1-6}
                                                    [then]
                                                        {TERRAIN_OVERLAY ^Bw| $param.x $param.y}
                                                    [/then]
                                                    [else]
                                                        [if]
                                                            {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "ne,sw" 1-6}
                                                            [then]
                                                                {TERRAIN_OVERLAY ^Bw/ $param.x $param.y}
                                                            [/then]
                                                            [else]
                                                                [if]
                                                                    {ADJACENT_TO A*,A*^E*,Y*,*^V*,*^Y*,*^F*,*^Gvs,G*,G*^E*,R*,R*^E*,C*,K*^Yk,H*,H*^E*,M*,M*^E*,*^Bw* $param.x $param.y "nw,se" 1-6}
                                                                    [then]
                                                                        {TERRAIN_OVERLAY ^Bw\ $param.x $param.y}
                                                                    [/then]
                                                                    [else]
                                                                        # Must be a multiple-tile-wide stream
                                                                        # DEAL WITH THIS LATER
                                                                        # Don't know how you can get here
                                                                        {TERRAIN_OVERLAY ^Bw| $param.x $param.y}
                                                                    [/else]
                                                                [/if]
                                                            [/else]
                                                        [/if]
                                                    [/else]
                                                [/if]
                                                # end else block }
                                            [/else]
                                        [/if]
                                    [/else]
                                [/if]
                            [/else]
                        [/if]
                    [/then]
                    [else]
                        {TERRAIN_OVERLAY $param.custom $param.x $param.y}
                    [/else]
                [/if]
                [fire_event]
                    name=action_bridge
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        bridge=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have constructed a new bridge."}
            [/case]
            [case]
                value="burn","ruin"
                #{MODIFY_TERRAIN Ww $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                [fire_event]
                    name=action_bridge
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        bridge=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Water village -----
    [event]
        name="water village"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {VILLAGE_COST}}
                    [then]
                        {START_PROJECT "water village" {VILLAGE_TURNS} {VILLAGE_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin buildin' a water village right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a buildin' the water village requires {VILLAGE_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                [terrain]
                    terrain=^Vm
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a water village."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Swamp village -----
    [event]
        name="swamp village"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {VILLAGE_COST}}
                    [then]
                        {START_PROJECT "swamp village" {VILLAGE_TURNS} {VILLAGE_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin buildin' a swamp village right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a buildin' the swamp village requires {VILLAGE_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                [terrain]
                    terrain=^Vhs
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a swamp village."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Hill village -----
    [event]
        name="hill village"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {VILLAGE_COST}}
                    [then]
                        {START_PROJECT "hill village" {VILLAGE_TURNS} {VILLAGE_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin buildin' a hill village right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a buildin' the hill village requires {VILLAGE_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                [terrain]
                    terrain=^Vhh
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have built a hill village."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Restore Hill village -----
    [event]
        name="restore hill village"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {PAVED_COST}}
                    [then]
                        {START_PROJECT "restore hill village" {PAVED_TURNS} {PAVED_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin restorin' this hill village right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a restorin' the hill village requires {PAVED_COST} gold for tools 'n floaters, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                [terrain]
                    terrain=^Vhh
                    layer=overlay
                    [and]
                        terrain=*^Vhhr
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                {NOTIFY $param.x $param.y _"Your workers have restored a hill village."}
            [/case]
            [case]
                value="burn","ruin"
            [/case]
        [/switch]
    [/event]

    # ----- Build Lighthouse -----
    [event]
        name="lighthouse"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {LIGHTHOUSE_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "lighthouse" {LIGHTHOUSE_TURNS} {LIGHTHOUSE_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin buildin' the lighthouse right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, buildin' a lighthouse requires {LIGHTHOUSE_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Ywb $param.x $param.y}
                [store_unit]
                    [filter]
                        x,y=$param.x,$param.y
                    [/filter]
                    mode=always_clear
                    variable=builder_store
                    kill=yes
                [/store_unit]
                [unit]
                    name=_ "Lighthouse"
                    overwrite=yes
                    placement=map
                    random_traits=no
                    side=1
                    type=WF_Lighthouse
                    x,y=$param.x,$param.y
                    [modifications]
                        {TRAIT_LOYAL}
                    [/modifications]
                    {IS_LOYAL}
                [/unit]
                [unstore_unit]
                    variable=builder_store
                    find_vacant=yes
                    check_passability=yes
                    x,y=$param.x,$param.y
                [/unstore_unit]
                {CLEAR_VARIABLE builder_store}
                {NOTIFY $param.x $param.y _"Your workers have built a new lighthouse."}

                {FIRE_EVENT built_lighthouse}
            [/case]
            [case]
                value="burn","ruin"
                [kill]
                    side=1
                    x,y=$param.x,$param.y
                    fire_event=no
                    animate=no
                [/kill]
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Burn Lighthouse -----
    [event]
        name=die
        id=die_lighthouse
        first_time_only=no
        [filter]
            type=WF_Lighthouse,WF_Lighthouse_Off
        [/filter]

        {MODIFY_TERRAIN Rb $unit.x $unit.y}
        {FIRE_ANIMATION $unit.x $unit.y}
        {PLACE_IMAGE "scenery/rubble.png" $unit.x $unit.y}
    [/event]

    # ----- Build Windmill -----
    [event]
        name="windmill"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (windmill) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {WINDMILL_COST}}
                        [then]
                            {MODIFY_TERRAIN Yw $param.x $param.y}
                            {START_PROJECT "windmill" {WINDMILL_TURNS} {WINDMILL_COST} $param.x $param.y}
                            [redraw][/redraw]
                            [message]
                                speaker=unit
                                message=_"We'll begin buildin' the windmill right-erway, milord."
                            [/message]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, buildin' a windmill requires {WINDMILL_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Wm $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have built a new windmill."}
                {FIRE_EVENT built_windmill}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Well -----
    [event]
        name="well"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (well) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {WELL_COST}}
                        [then]
                            {MODIFY_TERRAIN Yw $param.x $param.y}
                            {START_PROJECT "well" {WELL_TURNS} {WELL_COST} $param.x $param.y}
                            [redraw][/redraw]
                            [message]
                                speaker=unit
                                message=_"We'll begin diggin' for the well right-erway, milord."
                            [/message]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, diggin' for a well requires {WELL_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Yws $param.x $param.y}
                {RECRUIT_CHECK}
                {NOTIFY $param.x $param.y _"Your workers have built a new well."}
                {FIRE_EVENT built_well}
                [fire_event]
                    name=action_water
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        water=-5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
                {RECRUIT_CHECK}
                [fire_event]
                    name=action_water
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        water=5
                        great=yes
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Build Altar -----
    [event]
        name="altar"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {PROJECT_COUNT (altar) (
                    {STORE_GOLD}
                    [if]
                        {CHECK_GOLD {ALTAR_COST}}
                        [then]
                            {MODIFY_TERRAIN Yw $param.x $param.y}
                            {START_PROJECT "altar" {ALTAR_TURNS} {ALTAR_COST} $param.x $param.y}
                            [redraw][/redraw]
                            [message]
                                speaker=unit
                                message=_"We'll consecrate this spot for a sacrificial altar, milord."
                            [/message]
                        [/then]
                        [else]
                            [message]
                                speaker=unit
                                message=_"But milord, a sacrificial altar requires {ALTAR_COST} gold for supplies, and yer treasury don't 'ave that much!"
                            [/message]
                        [/else]
                    [/if]
                )}
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Yga $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have built a new sacrificial altar."}
                [event]
                    name=side 9 turn end
                    id=taunt_9p
                    {FIRE_EVENT spawn_pilgrims}
                [/event]
                {FIRE_EVENT built_altar}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Tunnel Entrance -----
    [event]
        name="tunnel entrance"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {TUNNEL_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "tunnel entrance" {TUNNEL_TURNS} {TUNNEL_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin diggin' the tunnel entrance right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, diggin' the tunnel entrance requires {TUNNEL_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Yge $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have dug a tunnel entrance."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Tunnel Exit -----
    [event]
        name="tunnel exit"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {TUNNEL_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw $param.x $param.y}
                        {START_PROJECT "tunnel exit" {TUNNEL_TURNS} {TUNNEL_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin diggin' the tunnel exit right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, diggin' the tunnel exit requires {TUNNEL_COST} gold for supplies, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Re $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Ygx $param.x $param.y}
                {NOTIFY $param.x $param.y _"Your workers have dug a tunnel exit."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Farm Yield -----
    [event]
        name="yield"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {YIELD_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw^Ygb $param.x $param.y}
                        {START_PROJECT "yield" {YIELD_TURNS} {YIELD_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin collectin' the farm yield right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a collectin' the farm yield requires {YIELD_COST} gold for tools 'n seeds, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Rb^Gvs $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=mace-miss.ogg
                [/sound]
                [sound]
                    name=mace.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Ygy $param.x $param.y}
                [capture_village]
                    side=1
                    x,y=$param.x,$param.y
                [/capture_village]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have collected the farm yield."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                [sound]
                    name=torch.ogg
                [/sound]
                [terrain]
                    terrain=^Gvs
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Mushroom Farm -----
    [event]
        name="mushroom farm"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"

                {STORE_GOLD}
                [if]
                    {CHECK_GOLD {MUSHROOM_COST}}
                    [then]
                        {MODIFY_TERRAIN Yw^Yma $param.x $param.y}
                        {START_PROJECT "mushroom farm" {MUSHROOM_TURNS} {MUSHROOM_COST} $param.x $param.y}
                        [redraw][/redraw]
                        [message]
                            speaker=unit
                            message=_"We'll begin plantin' a mushroom farm right-erway, milord."
                        [/message]
                    [/then]
                    [else]
                        [message]
                            speaker=unit
                            message=_"But milord, a plantin' a mushroom farm requires {MUSHROOM_COST} gold for tools 'n seeds, and yer treasury don't 'ave that much!"
                        [/message]
                    [/else]
                [/if]
            [/case]
            [case]
                value="stop"
                {MODIFY_TERRAIN Rb^Gvs $param.x $param.y}
            [/case]
            [case]
                value="build"
                [sound]
                    name=dagger-swish.wav
                [/sound]
                {REMOVE_IMAGE_BURN $param.x $param.y}
                {MODIFY_TERRAIN Re^Ymb $param.x $param.y}
                [heal_unit]
                    [filter]
                        side=1
                        x,y=$param.x,$param.y
                    [/filter]
                    animate=yes
                    moves=full
                    restore_attacks=yes
                    restore_statuses=yes
                    amount=full
                [/heal_unit]
                {CLEAR_VARIABLE heal_amount}
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="build"
                        farm=-1
                        great=no
                    [/primary_attack]
                [/fire_event]
                {NOTIFY $param.x $param.y _"Your workers have planted a mushroom farm."}
            [/case]
            [case]
                value="burn","ruin"
                {SCROLL_TO $param.x $param.y}
                [sound]
                    name=torch.ogg
                [/sound]
                [terrain]
                    terrain=^Gvs
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
                [fire_event]
                    name=action_farm
                    [primary_unit]
                        x=$param.x
                        y=$param.y
                    [/primary_unit]
                    [primary_attack]
                        action="burn"
                        farm=1
                        great=no
                    [/primary_attack]
                [/fire_event]
            [/case]
        [/switch]
    [/event]

    # ----- Cast Rune -----
    [event]
        name="rune"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {VARIABLE i_this -1}
                [for]
                    array=runes.rune_list
                    reverse=yes
                    [do]
                        [if]
                            [and]
                                {VARIABLE_CONDITIONAL runes.rune_list[$i].x numerical_equals $param.x}
                                {VARIABLE_CONDITIONAL runes.rune_list[$i].y numerical_equals $param.y}
                            [/and]
                            [then]  # this *should* only happen once
                                {VARIABLE i_this $i}
                            [/then]
                        [/if]
                    [/do]
                [/for]

                [if]
                    {VARIABLE_CONDITIONAL i_this greater_than_equal_to 0}
                    [then]
                        [if]
                            [have_unit]
                                id=$runes.rune_list[$i_this].id
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {WF_SCROLL_UNIT	(id=$runes.rune_list[$i_this].id)}
                                [message]
                                    speaker=$runes.rune_list[$i_this].id
                                    message=_"Hey, that's my rune."
                                [/message]
                            [/then]
                        [/if]

                        [message]
                            speaker=unit
                            message=_"But milord, there is already a rune here. Do you want me to remove it?"
                            [option]
                                label=_"Yes"
                                [command]
                                    [store_locations]
                                        variable=traps.rune
                                        find_in=traps.rune
                                        [not]
                                            x,y=$param.x,$param.y
                                        [/not]
                                    [/store_locations]
                                    [sound]
                                        name=magic-dark-big.ogg
                                    [/sound]
                                    [item]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                        halo=halo/undead/dark-magic-[1~6].png:100
                                    [/item]
                                    [delay]
                                        time=400
                                    [/delay]
                                    [remove_item]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                        image=halo/undead/dark-magic-[1~6].png:100
                                    [/remove_item]

                                    # I don't trust remove_item image=
                                    [switch]
                                        variable=runes.rune_list[$i_this].image
                                        [case]
                                            value=1
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune1-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=2
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune2-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=3
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune3-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=4
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune4-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=5
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune5-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=6
                                            [remove_item]
                                                x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                                image=scenery/rune6-glow.png
                                            [/remove_item]
                                        [/case]
                                    [/switch]
                                    {CLEAR_VARIABLE runes.rune_list[$i_this]}
                                [/command]
                            [/option]
                            [option]
                                label=_"No"
                                default=yes
                                [command] [/command]
                            [/option]
                        [/message]
                    [/then]
                    [else]
                        {NO_CHECK_AND_START "rune" $param.x $param.y {RUNE_COST} {RUNE_TURNS} (_"Casting a rune here will cost {RUNE_COST} gold and take {RUNE_TURNS} work shifts, milord. Do you want me to cast the spell?")}
                    [/else]
                [/if]
                {CLEAR_VARIABLE i_this}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [store_locations]
                    x,y=$param.x,$param.y
                    variable=traps.rune
                    [or]
                        find_in=traps.rune
                    [/or]
                [/store_locations]
                [sound]
                    name=magicmissile.wav
                [/sound]
                [store_unit]
                    variable=caster_store
                    [filter]
                        x,y=$param.x,$param.y
                    [/filter]
                [/store_unit]

                # catch all
                {RANDOM_VAR rnd_rune (1,2,3,4,5,6)}

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=cold,arcane
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (1,2)}
                    [/then]
                [/if]

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=cold
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (3,4)}
                    [/then]
                [/if]

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=fire,arcane
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (5,6)}
                    [/then]
                [/if]

                [set_variables]
                    name=runes.rune_list
                    mode=append
                    [value]
                        x=$param.x
                        y=$param.y
                        id=$caster_store.id
                        side=$caster_store.side
                        image=$rnd_rune
                    [/value]
                [/set_variables]

                # I don't trust remove_item image=
                [switch]
                    variable=rnd_rune
                    [case]
                        value=1
                        {PLACE_IMAGE scenery/rune1-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=2
                        {PLACE_IMAGE scenery/rune2-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=3
                        {PLACE_IMAGE scenery/rune3-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=4
                        {PLACE_IMAGE scenery/rune4-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=5
                        {PLACE_IMAGE scenery/rune5-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=6
                        {PLACE_IMAGE scenery/rune6-glow.png $param.x $param.y}
                    [/case]
                [/switch]

                #[event]
                #    name=moveto
                #    first_time_only=yes
                #    delayed_variable_substitution=no
                #    [filter]
                #        x,y=$param.x,$param.y
                #        [filter_side]
                #            [enemy_of]
                #                side=$caster_store.side
                #            [/enemy_of]
                #        [/filter_side]
                #    [/filter]
                #    #{WF_CALL_FUNCTION "rune" do,x,y="burn",$param.x,$param.y}
                #    [set_variables]
                #        mode=insert
                #        name=param[0]
                #        [value]
                #            do="burn"
                #            x=$param.x
                #            y=$param.y
                #        [/value]
                #    [/set_variables]
                #    [fire_event]
                #        name=rune
                #        [primary_unit]
                #            x=$param.x
                #            y=$param.y
                #        [/primary_unit]
                #    [/fire_event]
                #    [clear_variable]
                #        name=param[0]
                #    [/clear_variable]
                #[/event]
                {NOTIFY $param.x $param.y _"$caster_store.name have finished casting a rune."}
                {CLEAR_VARIABLE rnd_rune}
                {CLEAR_VARIABLE caster_store}
            [/case]
            [case]
                value="burn","ruin"
                [store_locations]
                    variable=traps.rune
                    find_in=traps.rune
                    [not]
                        x,y=$param.x,$param.y
                    [/not]
                [/store_locations]
                {SCROLL_TO $param.x $param.y}
                {VARIABLE i_this -1}
                [for]
                    array=runes.rune_list
                    reverse=yes
                    [do]
                        [if]
                            [and]
                                {VARIABLE_CONDITIONAL runes.rune_list[$i].x numerical_equals $param.x}
                                {VARIABLE_CONDITIONAL runes.rune_list[$i].y numerical_equals $param.y}
                            [/and]
                            [then]  # this *should* only happen once
                                {VARIABLE i_this $i}
                            [/then]
                        [/if]
                    [/do]
                [/for]

                [if]
                    {VARIABLE_CONDITIONAL i_this greater_than_equal_to 0}
                    [then]
                        [set_variable]
                            name=random_dmg
                            rand="arcane,cold,fire"
                        [/set_variable]

                        [if]
                            [have_unit]
                                side=$runes.rune_list[$i_this].side
                                id=$runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=cold,arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                [set_variable]
                                    name=random_dmg
                                    rand="cold,arcane"
                                [/set_variable]
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$runes.rune_list[$i_this].side
                                id=$runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=fire
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg fire}
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$runes.rune_list[$i_this].side
                                id=$runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=cold
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg cold}
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$runes.rune_list[$i_this].side
                                id=$runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg arcane}
                            [/then]
                        [/if]

                        [sound]
                            name=magic-dark-big.ogg
                        [/sound]

                        [item]
                            x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                            halo=halo/undead/dark-magic-[1~6].png:100
                        [/item]
                        [delay]
                            time=400
                        [/delay]

                        [if]
                            [have_unit]
                                side=$runes.rune_list[$i_this].side
                                id=$runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=fire,cold,arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                #{WF_DEBUG "Rune Caster: $runes.rune_list[$i_this].id Attack: $random_dmg"}
                                [modify_unit]
                                    [filter]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    [/filter]
                                    [effect]
                                        apply_to=status
                                        add=uncovered
                                    [/effect]
                                [/modify_unit]
                                [harm_unit]
                                    [filter]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    [/filter]
                                    [filter_second]
                                        side=$runes.rune_list[$i_this].side
                                        id=$runes.rune_list[$i_this].id
                                    [/filter_second]
                                    [primary_attack]
                                        #Attacking unit
                                        type=$random_dmg
                                        range=ranged
                                    [/primary_attack]
                                    [secondary_attack]
                                        #Defending unit
                                    [/secondary_attack]
                                    amount=30
                                    damage_type=$random_dmg
                                    experience=yes
                                    fire_event=yes
                                    kill=yes
                                    animate=yes
                                [/harm_unit]
                            [/then]
                            [else]
                                #{WF_DEBUG "Rune Caster: N/A Attack: $random_dmg"}
                                [modify_unit]
                                    [filter]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    [/filter]
                                    [effect]
                                        apply_to=status
                                        add=uncovered
                                    [/effect]
                                [/modify_unit]
                                [harm_unit]
                                    [filter]
                                        x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    [/filter]
                                    amount=30
                                    damage_type=$random_dmg
                                    fire_event=yes
                                    kill=yes
                                    animate=yes
                                [/harm_unit]
                            [/else]
                        [/if]

                        [remove_item]
                            x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                            image=halo/undead/dark-magic-[1~6].png:100
                        [/remove_item]

                        # I don't trust remove_item image=
                        [switch]
                            variable=runes.rune_list[$i_this].image
                            [case]
                                value=1
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune1-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=2
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune2-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=3
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune3-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=4
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune4-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=5
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune5-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=6
                                [remove_item]
                                    x,y=$runes.rune_list[$i_this].x,$runes.rune_list[$i_this].y
                                    image=scenery/rune6-glow.png
                                [/remove_item]
                            [/case]
                        [/switch]

                        {CLEAR_VARIABLE random_dmg}
                        {CLEAR_VARIABLE runes.rune_list[$i_this]}
                    [/then]
                [/if]
                {CLEAR_VARIABLE i_this}
            [/case]
        [/switch]
    [/event]
#enddef

# ----- Fire animation ---------------------------------------------------
#define FIRE_ANIMATION X Y
    [if]
        {VARIABLE_CONDITIONAL param.do equals "ruin"}
        [then]
            [sound]
                name=cave-in.ogg
            [/sound]
            [terrain]
                x,y={X},{Y}
                terrain=^Es
                layer=overlay
            [/terrain]
        [/then]
        [else]
            [sound]
                name=torch.ogg
            [/sound]
            [terrain]
                x,y={X},{Y}
                terrain=^Ybb
                layer=overlay
            [/terrain]

            [event]
                #name=side 1 turn end
                name=put_out_fire
                id=put_out_fire
                first_time_only=yes
                {SWITCH_TERRAIN_OVERLAY "Ybb" "Es"}
            [/event]
        [/else]
    [/if]
#enddef

#define REMOVE_IMAGE_BURN X Y
    [remove_item]
        x,y={X},{Y}
        image="scenery/village-human-burned1.png"
    [/remove_item]
    [remove_item]
        x,y={X},{Y}
        image="scenery/village-human-burned2.png"
    [/remove_item]
    [remove_item]
        x,y={X},{Y}
        image="scenery/village-human-burned3.png"
    [/remove_item]
    [remove_item]
        x,y={X},{Y}
        image="scenery/rubble.png"
    [/remove_item]
#enddef

# ----- Macros for N x N buildings ---------------------------------------
#define HAVE_2X2_SPACE X Y
    [have_location]
        x,y={X},{Y}
        [filter_adjacent_location]
            count=3
            terrain={BUILDABLE_TERRAIN}
            adjacent=sw,s,se
        [/filter_adjacent_location]
    [/have_location]
#enddef

#define MODIFY_2X2_SPACE TERRAIN X Y
    {MODIFY_TERRAIN {TERRAIN} {X} {Y}}
    [terrain]
        terrain={TERRAIN}
        [filter_adjacent_location]
            x,y={X},{Y}
            adjacent=ne,n,nw
        [/filter_adjacent_location]
    [/terrain]
#enddef

#define PLACE_2X2_BUILDING TERRAIN X Y
    [sound]
        name=mace-miss.ogg
    [/sound]
    [sound]
        name=mace.wav
    [/sound]
    {MODIFY_TERRAIN Re^{TERRAIN} {X} {Y}}
    [terrain]
        terrain="Re^{TERRAIN}o"
        [filter_adjacent_location]
            x,y={X},{Y}
            adjacent=ne,n,nw
        [/filter_adjacent_location]
    [/terrain]
#enddef

#define BURN_2X2_BUILDING X Y TERRAIN IMAGE
    # Note that X and Y refer to any of the 4 building hexes, not necessariy
    # the "main" one.
    # The image will naturally go away at the start of the next season
    [if]
        [have_location]	# the "main" hex is at X, Y
            x,y={X},{Y}
            terrain=*^{TERRAIN}
        [/have_location]
        [then]
            {VARIABLE xb {X}}
            {VARIABLE yb {Y}}
        [/then]
        [else]			# the main hex is adjacent to X Y
            [store_locations]
                variable=main_location
                terrain=*^{TERRAIN}
                [filter_adjacent_location]
                    x,y={X},{Y}
                    adjacent=sw,s,se
                [/filter_adjacent_location]
            [/store_locations]
            {VARIABLE xb $main_location.x}
            {VARIABLE yb $main_location.y}
            {CLEAR_VARIABLE main_location}
        [/else]
    [/if]
    {MODIFY_2X2_SPACE Rb $xb $yb}
    {FIRE_ANIMATION $xb $yb}	# This places the "burning building" terrain at x,y
    {PLACE_IMAGE {IMAGE} $xb $yb}
    {CLEAR_VARIABLE xb}
    {CLEAR_VARIABLE yb}
#enddef

#define MODIFY_3X3_SPACE TERRAIN X Y
    # Change the terrain in a 3 x 3 region centered on X, Y
    # Does not change the terrain at X,Y itself
    [terrain]
        terrain={TERRAIN}
        [filter_adjacent_location]
            x,y={X},{Y}
        [/filter_adjacent_location]
    [/terrain]
#ifndef ENABLE_FARM_2X3
    {MODIFY_TERRAIN {TERRAIN} "$({X}-2)" {Y}}
    {MODIFY_TERRAIN {TERRAIN} "$({X}+2)" {Y}}
#endif
#enddef

#define ADJACENT_TO TERRAIN X Y ADJ COUNT
    # Used in building bridge event
    [have_location]
        x,y={X},{Y}
        [filter_adjacent_location]
            count={COUNT}
            terrain={TERRAIN}
            adjacent={ADJ}
        [/filter_adjacent_location]
    [/have_location]
#enddef

#define TERRAIN_OVERLAY TERRAIN X Y
    # Used in bridge-building event
    [terrain]
        x,y={X},{Y}
        layer=overlay
        terrain={TERRAIN}
    [/terrain]
#enddef

# ----- General project macros ---------------------------------------
#define START_PROJECT TYPE TURNS COST X Y
    # Generally starts the building process by adding the project to the
    # building queue
    {PAY_GOLD {COST}}
    [set_variables]
        name=projects.proj_list
        mode=append
        [value]
            x={X}
            y={Y}
            turns={TURNS}
            goal={TYPE}
            custom=none
            do=build
            cost={COST}
        [/value]
    [/set_variables]
    {START_WORKING {X} {Y}}
#enddef

#define START_PROJECT_CUSTOM TYPE CUSTOM TURNS COST X Y
    # Generally starts the building process by adding the project to the
    # building queue
    {PAY_GOLD {COST}}
    [set_variables]
        name=projects.proj_list
        mode=append
        [value]
            x={X}
            y={Y}
            turns={TURNS}
            goal={TYPE}
            custom={CUSTOM}
            do=build
            cost={COST}
        [/value]
    [/set_variables]
    {START_WORKING {X} {Y}}
#enddef

#define NO_CHECK_AND_START PROJ_NAME X Y COST TURNS QUESTION
    {STORE_GOLD}
    [if]
        {CHECK_GOLD {COST}}
        [then]
            {START_PROJECT {PROJ_NAME} {TURNS} {COST} {X} {Y}}
        [/then]
        [else]
            {UNIT_SAYS _"But milord, we need {COST} gold for supplies, and yer treasury don't 'ave that much!"}
        [/else]
    [/if]
#enddef

#define CHECK_AND_START PROJ_NAME X Y COST TURNS QUESTION
    [message]
        speaker=unit
        message={QUESTION}
        [option]
            label=_"Yes"
            [command]
                {NO_CHECK_AND_START {PROJ_NAME} {X} {Y} {COST} {TURNS} {QUESTION}}
            [/command]
        [/option]
        [option]
            label=_"No"
            [command] [/command]
        [/option]
    [/message]
#enddef

#define START_WORKING X Y
    # Changes workers status from regular unit to working by removing movement
    # points
    {MODIFY_UNIT x,y={X},{Y} moves 0}
    {MODIFY_UNIT x,y={X},{Y} resting no}
    {MODIFY_UNIT x,y={X},{Y} attacks_left 0}
    #{ASSIGN_UNIT_VARIABLE {X} {Y} worker yes}
    {ASSIGN_UNIT_STATUS {X} {Y} worker}
#enddef

#define NOTIFY X Y MESSAGE
    # Tell player that a project has been completed
    [redraw][/redraw]
    {SCROLL_TO {X} {Y}}
#ifdef ENABLE_BUILD_NOTIFY
    {NARRATOR_SAYS {MESSAGE}}
#else
    [floating_text]
        x={X}
        y={Y}
        text=_"Done"
    [/floating_text]
    [delay]
        time=500
    [/delay]
#endif
#enddef

# ----- Checking for recruit-able units ----------------------------------
#define SWITCH_PEASANTS ALLOWED NOT_ALLOWED
    {ALLOW_RECRUIT {ALLOWED}}
    {DISALLOW_RECRUIT {NOT_ALLOWED}}
    # The modify unit tag seems to reset experience if you change a unit type
    # transform_unit does not transform the recall list!
    #{TRANSFORM_UNIT (
    #	side=1
    #	type={NOT_ALLOWED}
    #) {ALLOWED}}

    # Grab the units on the recall list
    [store_unit]
        variable=old_units
        mode=always_clear
        kill=yes
        [filter]
            side=1
            type={NOT_ALLOWED}
            x,y=recall,recall
        [/filter]
    [/store_unit]

    # make sure recall list x,y is recall,recall
    [for]
        array=old_units
        reverse=yes
        [do]
            {VARIABLE old_units[$i].x recall}
            {VARIABLE old_units[$i].y recall}
        [/do]
    [/for]

    # Grab the units on the map
    [store_unit]
        variable=old_units
        mode=append
        kill=yes
        [filter]
            side=1
            type={NOT_ALLOWED}
            {X_AND_Y_ARE_ON_THE_MAP}
        [/filter]
    [/store_unit]

    # Create unit and reassign original modifications,variables,status,abilities
    [for]
        array=old_units
        reverse=yes
        [do]
            [unit]
                random_traits=no
                canrecruit=$old_units[$i].canrecruit
                facing=$old_units[$i].facing
                gender=$old_units[$i].gender
                goto_x=$old_units[$i].goto_x
                goto_y=$old_units[$i].goto_y
                name=$old_units[$i].name
                overlays=$old_units[$i].overlays
                role=$old_units[$i].role
                side=$old_units[$i].side
                type={ALLOWED}
                x,y=$old_units[$i].x,$old_units[$i].y
                to_variable=fresh_unit
            [/unit]
            [if]
                {VARIABLE_CONDITIONAL old_units[$i].experience less_than $fresh_unit.max_experience}
                [then]
                    {VARIABLE fresh_unit.experience $old_units[$i].experience}
                [/then]
                [else]
                    {VARIABLE fresh_unit.experience $fresh_unit.max_experience}
                    {VARIABLE_OP fresh_unit.experience sub 1}
                [/else]
            [/if]
            [if]
                {VARIABLE_CONDITIONAL old_units[$i].hitpoints less_than $fresh_unit.max_hitpoints}
                [then]
                    {VARIABLE fresh_unit.hitpoints $old_units[$i].hitpoints}
                [/then]
            [/if]
            [set_variables]
                name=fresh_unit.modifications
                mode=replace
                to_variable=old_units[$i].modifications
            [/set_variables]
            [set_variables]
                name=fresh_unit.variables
                mode=replace
                to_variable=old_units[$i].variables
            [/set_variables]
            [set_variables]
                name=fresh_unit.status
                mode=replace
                to_variable=old_units[$i].status
            [/set_variables]
            [set_variables]
                name=fresh_unit.abilities
                mode=replace
                to_variable=old_units[$i].abilities
            [/set_variables]
            [unstore_unit]
                variable=fresh_unit
                find_vacant=no
                animate=no
                x,y=$old_units[$i].x,$old_units[$i].y
            [/unstore_unit]
            {CLEAR_VARIABLE fresh_unit}
        [/do]
    [/for]
    {CLEAR_VARIABLE old_units}
#enddef

#define RECRUIT_CHECK
    # Adjusts side 1's recruit list based on the existing buildings. Called
    # whenever a building is created or destroyed.
    # The check on peasants only needs to be run in the blacksmith's section
    # because all sections are always run.
    [if]
        #{VARIABLE_CONDITIONAL buildings.blacksmiths greater_than 0}
        [have_location]
            terrain=*^Yf
            #count=1-99999
        [/have_location]
        [then]
            [if]
                #{VARIABLE_CONDITIONAL buildings.bowyers greater_than 0}
                [have_location]
                    terrain=*^Yb
                    #count=1-99999
                [/have_location]
                [then]
                    {SWITCH_PEASANTS Peasant Peasant_to_Spearman,Peasant_to_Bowman,Peasant_no_Advance}
                [/then]
                [else]
                    {SWITCH_PEASANTS Peasant_to_Spearman Peasant,Peasant_to_Bowman,Peasant_no_Advance}
                [/else]
            [/if]
            {ALLOW_RECRUIT "{BUILDING_BLACKSMITH_1}"}
        [/then]
        [else]
            [if]
                #{VARIABLE_CONDITIONAL buildings.bowyers greater_than 0}
                [have_location]
                    terrain=*^Yb
                    #count=1-99999
                [/have_location]
                [then]
                    {SWITCH_PEASANTS Peasant_to_Bowman Peasant_to_Spearman,Peasant,Peasant_no_Advance}
                [/then]
                [else]
                    {SWITCH_PEASANTS Peasant_no_Advance Peasant_to_Bowman,Peasant_to_Spearman,Peasant}
                [/else]
            [/if]
            {DISALLOW_RECRUIT "{BUILDING_BLACKSMITH_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.blacksmiths greater_than 1}
        [have_location]
            terrain=*^Yf
            count=2-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_BLACKSMITH_2}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_BLACKSMITH_2}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.bowyers greater_than 0}
        [have_location]
            terrain=*^Yb
            #count=1-99999
        [/have_location]
        [then]
            {SWITCH_PEASANTS Woodsman_to_Bowman Woodsman_no_Advance}
            {ALLOW_RECRUIT "{BUILDING_BOWYER_1}"}
        [/then]
        [else]
            {SWITCH_PEASANTS Woodsman_no_Advance Woodsman_to_Bowman}
            {DISALLOW_RECRUIT "{BUILDING_BOWYER_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.stables greater_than 0}
        [have_location]
            terrain=*^Ys
            #count=1-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_STABLES_1}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_STABLES_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.stables greater_than 1}
        [have_location]
            terrain=*^Ys
            count=2-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_STABLES_2}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_STABLES_2}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.libraries greater_than 0}
        [have_location]
            terrain=*^Yu
            #count=1-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_LIBRARY_1}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_LIBRARY_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.libraries greater_than 1}
        [have_location]
            terrain=*^Yu
            count=2-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_LIBRARY_2}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_LIBRARY_2}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.libraries greater_than 2}
        [have_location]
            terrain=*^Yu
            count=3-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_LIBRARY_3}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_LIBRARY_3}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.armorers greater_than 0}
        [have_location]
            terrain=*^Ya
            #count=1-99999
        [/have_location]
        [then]
            {SWITCH_PEASANTS Ruffian_to_Heavy_Infantryman Ruffian_no_Advance}
            {ALLOW_RECRUIT "{BUILDING_ARMORER_1}"}
        [/then]
        [else]
            {SWITCH_PEASANTS Ruffian_no_Advance Ruffian_to_Heavy_Infantryman}
            {DISALLOW_RECRUIT "{BUILDING_ARMORER_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.armorers greater_than 1}
        [have_location]
            terrain=*^Ya
            count=2-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_ARMORER_2}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_ARMORER_2}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.well greater_than 0}
        [have_location]
            terrain=*^Yws
            #count=1-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_WELL_1}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_WELL_1}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.well greater_than 1}
        [have_location]
            terrain=*^Yws
            count=2-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_WELL_2}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_WELL_2}"}
        [/else]
    [/if]
    [if]
        #{VARIABLE_CONDITIONAL buildings.well greater_than 2}
        [have_location]
            terrain=*^Yws
            count=3-99999
        [/have_location]
        [then]
            {ALLOW_RECRUIT "{BUILDING_WELL_3}"}
        [/then]
        [else]
            {DISALLOW_RECRUIT "{BUILDING_WELL_3}"}
        [/else]
    [/if]

    [if]
        [variable]
            name=recruit_array.list.length
            less_than=1
        [/variable]
        [then]
            [get_recruit_list]
                [filter_side]
                    side=1
                [/filter_side]
                variable=recruit_list
            [/get_recruit_list]
            {ALLOW_RECRUIT $recruit_list.recruit_list}
            {CLEAR_VARIABLE recruit_list}
        [/then]
    [/if]

#ifhave ~add-ons/Wild_Frontiers/custom/umc_player.cfg
    {ALLOW_RECRUIT {WF_UMC_PLAYER}}
#endif
#enddef
