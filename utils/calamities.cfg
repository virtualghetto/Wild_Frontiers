#textdomain wesnoth-Wild_Frontiers
# ----- Calamities! -----
# Calamities are intended to be once-a-year'ish challenges, timing still TBD
# There are several calamity types; which type is selected in the spring (see scenario .cfg file)

# Individual calamity types are separated into their own macros for ease of testing, not because they
# are actually re-used anywhere

#define CALAMITIES_MAY_OCCUR
    {WF_FETCH_NEXT_CALAMITY_EVENT}
    [event]	# this is an event to create the other events
        name=prestart

        [if]
            [and]
                # {VARIABLE_CONDITIONAL wf_vars.season greater_than 1}
                {VARIABLE_CONDITIONAL relations.calamity_type equals "none"}
                {VARIABLE_CONDITIONAL wf_vars.season_str equals "summer"}
            [/and]
            [then]
                # Choose a new calamity for this year
                {WF_FETCH_NEXT_CALAMITY}
            [/then]
        [/if]

        [switch]
            variable=relations.calamity_type
            [case] # ----- Lich ------------------------------------------
                value="lich"
                {CALAMITY_LICH 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Lich calamity are floating about."}
            [/case]
            [case] # ----- Gryphons --------------------------------------
                value="gryphons"
                {CALAMITY_GRYPHONS 9}
                # This is easier, eventually may add a winter calamity
                {RANDOM_VAR relations.calamity_type {ON_DIFFICULTY ("skip","yetis","yetis") ("yetis") ("yetis")}}
                {VARIABLE quota.calamity "Rumors of Gryphons calamity are floating around."}
            [/case]
            [case] # ----- Loyalists -------------------------------------
                value="loyalists"
                {CALAMITY_LOYALISTS 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Dishonrable Loyalists calamity are floating around."}
            [/case]
            [case] # ----- Saurians --------------------------------------
                value="saurians"
                {CALAMITY_SAURIANS 9}
                # This is easier, may eventually add a winter calamity
                {RANDOM_VAR relations.calamity_type {ON_DIFFICULTY ("skip","yetis") ("yetis") ("yetis")}}
                {VARIABLE quota.calamity "Rumors of Saurians calamity are floating around."}
            [/case]
            [case] # ----- Drakes ----------------------------------------
                value="drakes"
                {CALAMITY_DRAKES 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Drakes calamity are floating around."}
            [/case]
            [case] # ----- Dwarves ---------------------------------------
                value="dwarves"
                {CALAMITY_DWARVES 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Dwarves calamity are floating around."}
            [/case]
            [case] # ----- Elves ---------------------------------------
                value="elves"
                {CALAMITY_ELVES 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Elves calamity are floating around."}
            [/case]
            [case] # ----- Orcs ---------------------------------------
                value="orcs"
                {CALAMITY_ORCS 9}
                # This is hard, no calamity in the winter
                {VARIABLE relations.calamity_type "skip"}
                {VARIABLE quota.calamity "Rumors of Hordes calamity are floating around."}
            [/case]
            [case] # ----- Yetis -----------------------------------------
                value="yetis"
                {CALAMITY_YETIS 9}
                # This is easier, may eventually add a winter calamity
                {RANDOM_VAR relations.calamity_type {ON_DIFFICULTY ("skip","none","none") ("skip","none") ("none")}}
                {VARIABLE quota.calamity "Rumors of Yetis calamity are floating around."}
            [/case]
            [else] # ----- Skip ------------------------------------------
                [if]
                    {VARIABLE_CONDITIONAL wf_vars.season greater_than 1}
                    [then]
                        {VARIABLE relations.calamity_type "none"}
                    [/then]
                [/if]
                [event]
                    name=side 8 turn 9 end
                    id=calamity_skip
                    {WF_DEBUG "Skipping calamity"}
                [/event]
                {VARIABLE quota.calamity ""}
            [/else]
        [/switch]
    [/event]
#enddef

# ----- Lich w/ random undead --------------------------------------------
#define CALAMITY_LICH TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_lich
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a lich calamity n: $enemy.num_calamity"}
        {RANDOM_VAR rnd_dir 0,2,3}	# west or south edge, or east (swamp of dread)
        [store_locations]
            variable=undead_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]	# appears near the signpost
                x=$map_signs[$rnd_dir].x
                y=$map_signs[$rnd_dir].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {CLEAR_VARIABLE rnd_dir}
        {RANDOM_VAR rnd_i 0.."$($undead_places.length-1)"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="lich-die.ogg"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            role=lich
            side=8
            type="Lich"
            x=$undead_places[$rnd_i].x
            y=$undead_places[$rnd_i].y
            {IS_HERO}
            {IS_LEADER}
            {MOD_OBJECT_LOYAL}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {VARIABLE repeat_count $enemy.num_calamity}
        {VARIABLE_OP repeat_count multiply 2}
        #{VARIABLE_OP repeat_count sub $wf_vars.prisoner_bonus}
        {WF_REPEAT $repeat_count (
            {RANDOM_VAR rnd_type ("Death Knight","Nightgaunt","Spectre","Ghast","Draug","Banebow")}
            [unit]
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                side=8
                type=$rnd_type
                x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
                {MOD_OBJECT_LOYAL_OVERLAY}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        # Now he "recruits" his army
        {COUNT_VILLAGES num_villages}
        {VARIABLE undead_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {WF_DEBUG "Lich fake recruit gold set to $undead_gold"}
        [set_variables]
            name=undead_list
            mode=replace
            {VALUE2 type "Bone Shooter" cost 26}
            {VALUE2 type "Chocobone" cost 28}
            {VALUE2 type "Dark Sorcerer" cost 33}
            {VALUE2 type "Deathblade" cost 34}
            {VALUE2 type "Necrophage" cost 27}
            {VALUE2 type "Revenant" cost 31}
            {VALUE2 type "Shadow" cost 38}
            {VALUE2 type "Wraith" cost 38}
        [/set_variables]
        [while]
            {VARIABLE_CONDITIONAL undead_gold greater_than 0}	# will go *roughly* to zero
            {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
            [do]
                {RANDOM_VAR rnd_i2 0.."$($undead_list.length-1)"}
                [unit]
                    animate=yes
                    passable=yes
                    placement=map
                    random_traits=yes
                    side=8
                    type=$undead_list[$rnd_i2].type
                    x,y=$undead_places[$rnd_i].x,$undead_places[$rnd_i].y
                    {MOD_OBJECT_LOYAL}
                [/unit]
                {VARIABLE_OP REPEAT_b add 1}
                {VARIABLE_OP undead_gold sub $undead_list[$rnd_i2].cost}
                {CLEAR_VARIABLE rnd_i2}
            [/do]
        [/while]
        {CLEAR_VARIABLE rnd_type,rnd_i,undead_places,undead_gold,undead_list}
        [unhide_unit]
        [/unhide_unit]
        # Additional units provided by lich raising them every turn -- see event in enemies.cfg
        [modify_side]
            side=8
            team_name=calamity,calamity_undead
        [/modify_side]

        # ----- Lich Calamity sighting (first time) -----
        {FAKE_SIGHTED calamity_lich (
            side=8
            race=undead
            [and]
                [not]
                    role=lich
                [/not]
            [/and]
        )}
        [event]
            name=calamity_lich_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_LICH_A}
        [/event]

        # ----- Lich Calamity Boss sighting -----
        {FAKE_SIGHTED lich_boss (
            side=8
            role=lich
        )}
        [event]
            name=lich_boss_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_LICH_B}
        [/event]

        # ----- Lich raises dead -----
        [event]
            name=side 8 turn end
            id=lich_raise_dead
            first_time_only=no
            [if]
                [have_unit]
                    side=8	# undead, not calamity
                    role=lich
                [/have_unit]
                [then]
                    {REPEAT 3 (
                        # Raise dead randomly somewhere on the map
                        [store_locations]
                            variable=undead_places
                            {X_AND_Y_ARE_ON_THE_MAP}
                            {NOT_FILTER}
                            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
                            [and]
                                [filter]
                                    side=1
                                [/filter]
                                radius=10
                            [/and]
                        [/store_locations]
                        {RANDOM_VAR rnd_i 0.."$($undead_places.length-1)"}
                        # Type list has some doubled units so they appear more often
                        {RANDOM_VAR undead_type ("Dark Adept","Ghost","Ghoul","Skeleton","Skeleton","Skeleton Archer","Skeleton Archer","Walking Corpse","Walking Corpse","Soulless","Shadow","Wraith","Necrophage","Deathblade","Revenant","Bone Shooter")}
                        {WF_DEBUG "Lich is raising a random unit somewhere. $undead_type at $undead_places[$rnd_i].x $undead_places[$rnd_i].y"}
                        [animate_unit]
                            flag=attack
                            [filter]
                                side=8
                                role=lich
                            [/filter]
                            [primary_attack]
                                name=chill tempest
                            [/primary_attack]
                            with_bars=yes
                            hits=miss
                        [/animate_unit]
                        [unit]
                            animate=yes
                            passable=yes
                            placement=map
                            random_traits=yes
                            side=8
                            type=$undead_type
                            x=$undead_places[$rnd_i].x
                            y=$undead_places[$rnd_i].y
                            {MOD_OBJECT_LOYAL}
                        [/unit]
                        {VARIABLE_OP REPEAT_b add 1}
                        {CLEAR_VARIABLE rnd_i,undead_places,undead_type}
                        [unhide_unit]
                        [/unhide_unit]
                    )}
                [/then]
                [else]
                    [remove_event]
                        id=lich_raise_dead
                    [/remove_event]
                [/else]
            [/if]
        [/event]
        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

# ----- Gryphons nesting -------------------------------------------------
#define CALAMITY_GRYPHONS TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_gryphons
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a gryphon calamity"}
        # Gryphons now, wolves/goblins in the winter?

        [store_locations]
            variable=keep_loc
            terrain=*^Yk
        [/store_locations]
        {WF_DEBUG "Looking for a good place for a gryphon nest near your keep at $keep_loc.x,$keep_loc.y"}
        {FIND_NEAREST_HEX nest_loc "$($keep_loc.x+10)" "$($keep_loc.y+10)" (
            {NOT_FILTER}
            terrain=M*^*,H*^*
            #[filter_adjacent_location]
            #    terrain=M*^*,H*^*
            #    count=2-6
            #[/filter_adjacent_location]
            {NOT_MAP_SIGNS}
        )}
        {WF_DEBUG "Placing a gryphon's nest at $nest_loc.x,$nest_loc.y"}

        # Gryphons come from the southeast corner -- near to Gryphon Mt.
        # Gryphons are on the calamity side to avoid animal behavior changing
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="gryphon-shriek-1.ogg"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=no
            role=gryphon_king
            side=8
            type=Gryphon
            x="$({MAP_WIDTH}-2)"
            y="$({MAP_HEIGHT}-2)"
            {IS_HERO}
            {IS_LEADER}
            [modifications]
                {OBJECT_LOYAL}
                {TRAIT_STRONG}
                {TRAIT_INTELLIGENT}
            [/modifications]
            [status]
                guardian=yes
                nest=yes
            [/status]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [modify_side]
            side=8
            team_name=calamity,calamity_animals
        [/modify_side]
        #[modify_ai]
        #    side=8
        #    action=delete
        #    path=goal[target8]
        #[/modify_ai]
        #{SIDE_AI_GOAL_PROTECT_LOCATION 8 $nest_loc.x $nest_loc.y}
        {COUNT_VILLAGES num_villages}
        # wesnoth 1.14, gryphons cost 40
        # wesnoth 1.15, gryphons cost 29
        {VARIABLE gryphons_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {VARIABLE_OP gryphons_gold divide 2}
        {VARIABLE_OP gryphons_gold round floor}
        [set_variables]
            name=gryphons_list
            mode=replace
            {VALUE2 type "Gryphon" cost 29}
            {VALUE2 type "Gryphon" cost 40}
        [/set_variables]
        [while]
            {VARIABLE_CONDITIONAL gryphons_gold greater_than 0}	# will go *roughly* to zero
            {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
            [do]
                {RANDOM_VAR rnd_i2 0.."$($gryphons_list.length-1)"}
                [unit]
                    animate=yes
                    passable=yes
                    placement=map
                    random_traits=yes
                    side=8
                    type=$gryphons_list[$rnd_i2].type
                    x="$({MAP_WIDTH}-2)"
                    y="$({MAP_HEIGHT}-2)"
                    [status]
                        guardian=yes
                        nest=yes
                    [/status]
                    {MOD_OBJECT_LOYAL}
                [/unit]
                {VARIABLE_OP REPEAT_b add 1}
                {VARIABLE_OP gryphons_gold sub $gryphons_list[$rnd_i2].cost}
                {CLEAR_VARIABLE rnd_i2}
            [/do]
        [/while]
        {CLEAR_VARIABLE gryphons_list,gryphons_gold}
        [unhide_unit]
        [/unhide_unit]
        [move_unit]
            role=gryphon_king
            to_x=$nest_loc.x
            to_y=$nest_loc.y
        [/move_unit]
        {PLACE_IMAGE "scenery/nest-full.png" $nest_loc.x $nest_loc.y}

        {SIGHTED_CALAMITY_GRYPHONS_A}
        [move_unit]
            side=8
            type=Gryphon
            canrecruit=no
            to_x=$nest_loc.x
            to_y=$nest_loc.y
        [/move_unit]
        {CLEAR_VARIABLE keep_loc}
        {SIGHTED_CALAMITY_GRYPHONS_B}

        [event]
            name=moveto
            id=moveto_nest
            first_time_only=yes
            delayed_variable_substitution=no
            [filter]
                side=1
                [not]
                    type=Caravan
                [/not]
                x,y=$nest_loc.x,$nest_loc.y
            [/filter]
            [modify_unit]
                [filter]
                    side=8
                    type=Gryphon
                    status=nest
                [/filter]
                [effect]
                    apply_to=status
                    remove=nest
                [/effect]
            [/modify_unit]
            [message]
                speaker=unit
                message=_"The Gryphons were protecting this nest."
            [/message]
            [remove_item]
                x,y=$nest_loc.x,$nest_loc.y
                image="scenery/nest-full.png"
            [/remove_item]
            {PLACE_IMAGE "scenery/nest-empty.png" $nest_loc.x $nest_loc.y}
            [unit]
                side=1
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                type=Gryphon
                x,y=$nest_loc.x,$nest_loc.y
            [/unit]
            {VARIABLE gryphon_unit_id $|last_unit_id}
            [fire_event]
                name=amla_extra_event
                [primary_unit]
                    id=$|last_unit_id
                [/primary_unit]
            [/fire_event]
            [unhide_unit]
            [/unhide_unit]
            [redraw]
                side=1
                clear_shroud=yes
            [/redraw]
            {WF_SCROLL_UNIT (id=$|gryphon_unit_id)}
            [message]
                id=$|gryphon_unit_id
                message=_"Mama!"
            [/message]
            [message]
                speaker=unit
                message=_"Awe, how cute!!"
            [/message]
            {CLEAR_VARIABLE gryphon_unit_id}
        [/event]

        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

# ----- Evil Loyalists ---------------------------------------------------
#define CALAMITY_LOYALISTS TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_loyalists
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Starting the loyalist calamity south near $map_signs[3].x,$map_signs[3].y n: $enemy.num_calamity"}
        [store_locations]
            variable=loyalist_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]	# appears near the southern signpost
                x=$map_signs[3].x
                y=$map_signs[3].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {RANDOM_VAR rnd_l 0.."$($loyalist_places.length-1)"}
        {WF_DEBUG "Placing Loyalists at $loyalist_places[$rnd_l].x,$loyalist_places[$rnd_l].y"}
        {FIND_NEAREST_HEX goto_site $loyalist_places[$rnd_l].x $loyalist_places[$rnd_l].y (
            {NOT_FILTER}
            terrain={BUILDABLE_TERRAIN},Ker
            [filter_adjacent_location]
                terrain={BUILDABLE_TERRAIN},Cer
                adjacent=nw,n,ne,se
                count=4
            [/filter_adjacent_location]
            {NOT_MAP_SIGNS}
        )}
        {WF_DEBUG "Trying to have the loyalist build a castle at $goto_site.x,$goto_site.y"}

        # Evil loyalists always come from the south
        {DIFFICULTY_VAR unit_type1 "Horseman Commander" "Mounted General" "Mounted General"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="tail.ogg"
        [/sound]
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="horse-canter.wav"
        [/sound]
        [unit]
            #goto_x=$goto_site.x
            #goto_y=$goto_site.y
            animate=yes
            canrecruit=yes
            extra_recruit="Spearman","Pikeman","Bowman","Longbowman","Heavy Infantryman","Shock Trooper","Cavalryman","Dragoon","Fencer","Duelist","Lancer","Javelineer","Red Mage","Junior Commander","Infantry Private"
            passable=yes
            placement=map
            profile=portraits/deoran.png
            random_traits=no
            role=evil_loyalist
            side=8
            type=$unit_type1
            x=$loyalist_places[$rnd_l].x
            y=$loyalist_places[$rnd_l].y
            {IS_LEADER}
            [modifications]
                {TRAIT_STRONG}
                {TRAIT_RESILIENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {DIFFICULTY_VAR unit_type1 "Shock Trooper" "Iron Mauler" "Iron Mauler"}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            role=henchman
            side=8
            type=$unit_type1
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_QUICK}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {DIFFICULTY_VAR unit_type1 "Duelist" "Master at Arms" "Master at Arms"}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            side=8
            type=$unit_type1
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_STRONG}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {DIFFICULTY_VAR unit_type1 "Infantry Lieutenant" "Infantry Commander" "Infantry Commander"}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            side=8
            type=$unit_type1
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_RESILIENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {DIFFICULTY_VAR unit_type1 "Longbowman" "Master Bowman" "Master Bowman"}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            side=8
            type=$unit_type1
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_RESILIENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {VARIABLE repeat_count $enemy.num_calamity}
        {WF_REPEAT $repeat_count (
            {RANDOM_VAR unit_type1 ("Shock Trooper","Duelist","Swordsman","Pikeman","Lancer","Javelineer","Longbowman","Junior Commander")}
            [unit]
                animate=yes
                passable=yes
                placement=leader
                random_traits=yes
                side=8
                type=$unit_type1
                {MOD_OBJECT_LOYAL_OVERLAY}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        [unhide_unit]
        [/unhide_unit]
        [modify_unit]
            [filter]
                side=8
                canrecruit=yes
                role=evil_loyalist
            [/filter]
            goto_x=$goto_site.x
            goto_y=$goto_site.y
        [/modify_unit]
        [micro_ai]
            side=8
            ai_type=messenger_escort
            ca_id=messenger_escort_side8_evil_loyalist
            action=add
            [filter]
                side=8
                canrecruit=yes
                role=evil_loyalist
            [/filter]
            [filter_second]
                side=8
                [not]
                    status=guardian
                [/not]
            [/filter_second]
            waypoint_x=$goto_site.x
            waypoint_y=$goto_site.y
        [/micro_ai]
        {RESET_GOLD 8}
        {COUNT_VILLAGES num_villages}
        {VARIABLE loyalist_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold+$enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        [gold]
            side=8
            amount=$loyalist_gold
        [/gold]
        {WF_DEBUG "Giving evil loyalist $loyalist_gold gold"}
        {CLEAR_VARIABLE unit_type1,loyalist_gold}

        {FAKE_SIGHTED calamity_loyalists (
            side=8
            race=human
        )}
        [event]
            name=calamity_loyalists_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_LOYALISTS_A}
        [/event]

        #		[event]
        #			# Re-assign goto values each turn
        #			name=side 8 turn
        #			id=guide_loyalist_leader
        #			first_time_only=no
        #			delayed_variable_substitution=no
        #			[modify_unit]
        #				[filter]
        #					side=8
        #					role=evil_loyalist
        #					canrecruit=yes
        #				[/filter]
        #				goto_x=$goto_site.x
        #				goto_y=$goto_site.y
        #			[/modify_unit]
        #		[/event]
        # Build a castle when he gets there, or next turn if he's already there
        [event]
            name=moveto
            id=moveto_build_loyalist_camp
            first_time_only=yes
            delayed_variable_substitution=no	# so I can clear variables
            [filter]
                side=8
                role=evil_loyalist
                canrecruit=yes
                x=$goto_site.x
                y=$goto_site.y
            [/filter]
            {WF_DEBUG "event=moveto_build_loyalist_camp"}
            {BUILD_LOYALIST_CAMP $goto_site.x $goto_site.y}
        [/event]
        [if]
            [and]
                {VARIABLE_CONDITIONAL loyalist_places[$rnd_l].x equals $goto_site.x}
                {VARIABLE_CONDITIONAL loyalist_places[$rnd_l].y equals $goto_site.y}
            [/and]
            [then]
                [event]
                    name=side 8 turn
                    id=turn_build_loyalist_camp
                    first_time_only=yes
                    delayed_variable_substitution=no
                    [filter_condition]
                        [have_unit]
                            side=8
                            role=evil_loyalist
                            canrecruit=yes
                            x=$goto_site.x
                            y=$goto_site.y
                        [/have_unit]
                    [/filter_condition]
                    {WF_DEBUG "event=turn_build_loyalist_camp"}
                    {BUILD_LOYALIST_CAMP $goto_site.x $goto_site.y}
                [/event]
            [/then]
        [/if]
        {CLEAR_VARIABLE rnd_l,loyalist_places}
        [event]
            name=side 8 turn
            id=store_side8_gold
            first_time_only=no
            [store_gold]
                side=8
                variable=quota.side8_gold
            [/store_gold]
        [/event]
        [event]
            # Once the loyalists have run out of gold, they ditch their encampment
            # and come after you personally
            name=side 8 turn refresh
            id=ditch_keep
            first_time_only=yes
            delayed_variable_substitution=no
            [filter_condition]
                {VARIABLE_CONDITIONAL quota.side8_gold less_than 14}
            [/filter_condition]
            {WF_DEBUG "Loyalists are out of gold, having them tear down the camp $quota.side8_gold < 14"}
            [if]
                [have_unit]
                    side=8
                    role=evil_loyalist
                    canrecruit=yes
                [/have_unit]
                [then]
                    {SIGHTED_CALAMITY_LOYALISTS_B}
                    [if]
                        [have_unit]
                            side=8
                            role=evil_loyalist
                            canrecruit=yes
                            x=$goto_site.x
                            y=$goto_site.y
                        [/have_unit]
                        [then]
                            {SCROLL_TO $goto_site.x $goto_site.y}
                            [delay]
                                time=300
                            [/delay]
                            [terrain]
                                terrain=Rb
                                [and]
                                    terrain=Cer
                                    [filter_adjacent_location]
                                        #adjacent=se,s,sw,nw
                                        terrain=Ker
                                        x=$goto_site.x
                                        y=$goto_site.y
                                    [/filter_adjacent_location]
                                [/and]
                            [/terrain]
                            {MODIFY_TERRAIN Rb $goto_site.x $goto_site.y}
                            {FIRE_ANIMATION $goto_site.x $goto_site.y}
                            {PLACE_IMAGE "scenery/rubble.png" $goto_site.x $goto_site.y}
                        [/then]
                    [/if]
                    [modify_unit]
                        [filter]
                            side=8
                            canrecruit=yes
                            role=evil_loyalist
                        [/filter]
                        canrecruit=no
                        {IS_HERO}
                        [object]
                            [effect]
                                apply_to=loyal
                            [/effect]
                        [/object]
                        goto_x=0
                        goto_y=0
                    [/modify_unit]
                [/then]
            [/if]
            {CLEAR_VARIABLE quota.side8_gold}
            # it seems highly doubtful that it will ever take until
            # the autumn to run out of gold
            [remove_event]
                id=store_side8_gold
            [/remove_event]
        [/event]

        {CLEAR_VARIABLE goto_site}
        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

#define BUILD_LOYALIST_CAMP X Y
    [delay]
        time=300
    [/delay]
    [sound]
        name=mace-miss.ogg
    [/sound]
    {MODIFY_TERRAIN Ker {X} {Y}}
    [terrain]
        terrain=Cer
        [filter_adjacent_location]
            adjacent=se,s,sw,nw
            x={X}
            y={Y}
        [/filter_adjacent_location]
    [/terrain]
    [sound]
        name=mace.wav
    [/sound]
    # leader no longer needs to be guided to campsite
    [modify_unit]
        [filter]
            side=8
            canrecruit=yes
            role=evil_loyalist
            x,y={X},{Y}
        [/filter]
        goto_x=0
        goto_y=0
    [/modify_unit]
    [micro_ai]
        side=8
        ai_type=messenger_escort
        ca_id=messenger_escort_side8_evil_loyalist
        action=delete
    [/micro_ai]
    #	[event]
    #		id=guide_loyalist_leader
    #		remove=yes
    #	[/event]
    [remove_event]
        id=turn_build_loyalist_camp
    [/remove_event]
    [remove_event]
        id=moveto_build_loyalist_camp
    [/remove_event]
#enddef

# ----- Saurians ---------------------------------------------------------
#define CALAMITY_SAURIANS TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_saurians
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Starting the Saurian calamity n: $enemy.num_calamity"}
        [store_locations]
            variable=saurian_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]	# appears near the western signpost
                x=$map_signs[2].x
                y=$map_signs[2].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {RANDOM_VAR rnd_s 0.."$($saurian_places.length-1)"}
        {WF_DEBUG "Placing Saurians at $saurian_places[$rnd_s].x,$saurian_places[$rnd_s].y"}

        {FIND_NEAREST_HEX goto_site $saurian_places[$rnd_s].x $saurian_places[$rnd_s].y (
            {NOT_FILTER}
            terrain=!,*^V*,!,W*^*,S*^*,Khs
            [filter_adjacent_location]
                terrain=!,*^V*,!,W*^*,S*^*,G*,G*^E*,R*,R*^E*,Chs
                adjacent=n,se,ne
                count=3
            [/filter_adjacent_location]
            {NOT_MAP_SIGNS}
        )}
        # Saurians come from the west, not for any good reason, just to avoid orcs/necro
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="hiss-die.wav"
        [/sound]
        [unit]
            #goto_x=$goto_site.x
            #goto_y=$goto_site.y
            animate=yes
            canrecruit=yes
            extra_recruit=Saurian Augur,Saurian Skirmisher
            passable=yes
            placement=map
            random_traits=no
            role=saurian_leader
            side=8
            type="Saurian Flanker"
            x=$saurian_places[$rnd_s].x
            y=$saurian_places[$rnd_s].y
            {IS_LEADER}
            [modifications]
                {TRAIT_RESILIENT}
                {TRAIT_INTELLIGENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            role=henchsaur
            side=8
            type="Saurian Oracle"
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_RESILIENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            side=8
            type="Saurian Ambusher"
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_STRONG}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [unit]
            animate=yes
            overlays="misc/loyal-icon.png"
            passable=yes
            placement=leader
            random_traits=no
            side=8
            type="Saurian Soothsayer"
            [modifications]
                {TRAIT_LOYAL}
                {TRAIT_INTELLIGENT}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}

        {VARIABLE repeat_count $enemy.num_calamity}
        {WF_REPEAT $repeat_count (
            [unit]
                animate=yes
                passable=yes
                placement=leader
                random_traits=yes
                side=8
                type="Saurian Skirmisher"
                {MOD_OBJECT_LOYAL}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        {CLEAR_VARIABLE rnd_s,saurian_places}
        [unhide_unit]
        [/unhide_unit]

        {SIGHTED_CALAMITY_SAURIANS_A}

        {WF_DEBUG "Saurian leader trying to *find* a castle at $goto_site.x,$goto_site.y"}
        #		[modify_side]
        #			side=8
        #			[ai]
        #				#[leader_goal]
        #				#	x=$goto_site.x
        #				#	y=$goto_site.y
        #				#	auto_remove=yes
        #				#	id=0
        #				#[/leader_goal]
        #				[goal]
        #					id=protect_unit
        #					name=protect_unit
        #					[criteria]
        #						canrecruit=yes
        #						role=saurian_leader
        #						side=8
        #					[/criteria]
        #					protect_radius=6
        #					value=20
        #				[/goal]
        #			[/ai]
        #		[/modify_side]
        [modify_unit]
            [filter]
                side=8
                canrecruit=yes
                role=saurian_leader
            [/filter]
            goto_x=$goto_site.x
            goto_y=$goto_site.y
        [/modify_unit]
        [micro_ai]
            side=8
            ai_type=messenger_escort
            ca_id=messenger_escort_side8_saurian_leader
            action=add
            [filter]
                side=8
                canrecruit=yes
                role=saurian_leader
            [/filter]
            [filter_second]
                side=8
                [not]
                    status=guardian
                [/not]
            [/filter_second]
            waypoint_x=$goto_site.x
            waypoint_y=$goto_site.y
        [/micro_ai]

        # Provide gold to recruit units
        {RESET_GOLD 8}
        {COUNT_VILLAGES num_villages}
        # Saurians recruits are level 1.
        {VARIABLE saurian_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {VARIABLE_OP saurian_gold divide 2}
        {VARIABLE_OP saurian_gold round floor}
        [gold]
            side=8
            amount=$saurian_gold
        [/gold]
        {WF_DEBUG "Giving saurian $saurian_gold gold"}
        {CLEAR_VARIABLE saurian_gold}

        # Move the leader to the site
        #		[event]
        #			name=side 8 turn
        #			id=guide_saurian_leader
        #			first_time_only=no
        #			delayed_variable_substitution=no
        #			[modify_unit]
        #				[filter]
        #					side=8
        #					canrecruit=yes
        #					role=saurian_leader
        #				[/filter]
        #				goto_x=$goto_site.x
        #				goto_y=$goto_site.y
        #			[/modify_unit]
        #		[/event]
        # "Build" a castle when he gets there (no need to worry about already there)
        [event]
            name=moveto
            id=moveto_build_saurian_camp
            first_time_only=yes
            delayed_variable_substitution=no	# so I can clear variables
            [filter]
                side=8
                canrecruit=yes
                role=saurian_leader
                x=$goto_site.x
                y=$goto_site.y
            [/filter]
            [delay]
                time=300
            [/delay]
            [sound]
                name=mace-miss.ogg
            [/sound]
            {MODIFY_TERRAIN Khs $goto_site.x $goto_site.y}
            [terrain]
                terrain=Chs
                [filter_adjacent_location]
                    x=$goto_site.x
                    y=$goto_site.y
                    adjacent=s,nw,sw
                [/filter_adjacent_location]
            [/terrain]
            [sound]
                name=water-blast.wav
            [/sound]

            [if]
                [have_location]
                    x=$goto_site.x
                    y=$goto_site.y
                    [filter_vision]
                        side=1
                        visible=yes
                        respect_fog=no
                    [/filter_vision]
                [/have_location]
                [then]
                    {SCROLL_TO $goto_site.x $goto_site.y}
                    [delay]
                        time=300
                    [/delay]
                    {SIGHTED_CALAMITY_SAURIANS_B}
                [/then]
            [/if]

            # leader no longer needs to be guided to campside
            [modify_unit]
                [filter]
                    side=8
                    canrecruit=yes
                    role=saurian_leader
                    x,y=$goto_site.x,$goto_site.y
                [/filter]
                goto_x=0
                goto_y=0
            [/modify_unit]
            [micro_ai]
                side=8
                ai_type=messenger_escort
                ca_id=messenger_escort_side8_saurian_leader
                action=delete
            [/micro_ai]
            #			[modify_ai]
            #				side=8
            #				action=delete
            #				path=goal[protect_unit]
            #			[/modify_ai]
            #			[event]
            #				id=guide_saurian_leader
            #				remove=yes
            #			[/event]
        [/event]
        {CLEAR_VARIABLE goto_site}
        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

# ----- Winter Yetis -------------------------------------------------
#define CALAMITY_YETIS TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_yetis
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a yeti calamity"}

        [store_locations]
            variable=yeti_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]	# appears near the northern signpost
                x=$map_signs[1].x
                y=$map_signs[1].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {RANDOM_VAR rnd_i 0.."$($yeti_places.length-1)"}
        {WF_DEBUG "Placing Yetis at $yeti_places[$rnd_i].x,$yeti_places[$rnd_i].y"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="yeti-die.ogg"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=no
            role=yeti_leader
            side=8
            type=Yeti
            x=$yeti_places[$rnd_i].x
            y=$yeti_places[$rnd_i].y
            {IS_HERO}
            {IS_LEADER}
            [modifications]
                {OBJECT_LOYAL}
                {TRAIT_RESILIENT}
                {TRAIT_STRONG}
            [/modifications]
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            role=yeti_buddy
            side=8
            type=Yeti
            x=$yeti_places[$rnd_i].x
            y=$yeti_places[$rnd_i].y
            {MOD_OBJECT_LOYAL}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        [unhide_unit]
        [/unhide_unit]

        [modify_side]
            side=8
            team_name=calamity,calamity_animals
        [/modify_side]
        {SIGHTED_CALAMITY_YETI_A}
        {CLEAR_VARIABLE rnd_i,yeti_places}

        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

#define CALAMITY_DRAKES TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_drakes
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a drake calamity n: $enemy.num_calamity"}

        {RANDOM_VAR rnd_dir 0,1,2,3}	# 0=east, 1=north, 2=west, 3=south
        [store_locations]
            variable=drake_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]
                x=$map_signs[$rnd_dir].x
                y=$map_signs[$rnd_dir].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {CLEAR_VARIABLE rnd_dir}
        {RANDOM_VAR rnd_i 0.."$($drake_places.length-1)"}
        {RANDOM_VAR rnd_type "Inferno Drake","Drake Flameheart","Hurricane Drake","Drake Enforcer","Drake Blademaster","Drake Warden"}
        {WF_DEBUG "Placing $rnd_type at $drake_places[$rnd_i].x,$drake_places[$rnd_i].y"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="drake-die.ogg"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            role=drake_leader
            side=8
            type=$rnd_type
            x=$drake_places[$rnd_i].x
            y=$drake_places[$rnd_i].y
            {IS_HERO}
            {IS_LEADER}
            {MOD_OBJECT_LOYAL}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {VARIABLE repeat_count $enemy.num_calamity}
        {WF_REPEAT $repeat_count (
            {RANDOM_VAR rnd_type ("Drake Fighter","Drake Burner","Drake Glider","Drake Clasher")}
            [unit]
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                side=8
                type=$rnd_type
                x,y=$drake_places[$rnd_i].x,$drake_places[$rnd_i].y
                {MOD_OBJECT_LOYAL_OVERLAY}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        # Now he "recruits" his army
        {COUNT_VILLAGES num_villages}
        {VARIABLE drake_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {WF_DEBUG "Drake fake recruit gold set to $drake_gold"}
        [set_variables]
            name=drake_list
            mode=replace
            {VALUE2 type "Drake Arbiter" cost 32}
            {VALUE2 type "Drake Flare" cost 33}
            {VALUE2 type "Drake Thrasher" cost 32}
            {VALUE2 type "Drake Warrior" cost 32}
            {VALUE2 type "Fire Drake" cost 35}
            {VALUE2 type "Sky Drake" cost 28}
        [/set_variables]
        [while]
            {VARIABLE_CONDITIONAL drake_gold greater_than 0}	# will go *roughly* to zero
            {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
            [do]
                {RANDOM_VAR rnd_i2 0.."$($drake_list.length-1)"}
                [unit]
                    animate=yes
                    passable=yes
                    placement=map
                    random_traits=yes
                    side=8
                    type=$drake_list[$rnd_i2].type
                    x,y=$drake_places[$rnd_i].x,$drake_places[$rnd_i].y
                    {MOD_OBJECT_LOYAL}
                [/unit]
                {VARIABLE_OP REPEAT_b add 1}
                {VARIABLE_OP drake_gold sub $drake_list[$rnd_i2].cost}
                {CLEAR_VARIABLE rnd_i2}
            [/do]
        [/while]
        {CLEAR_VARIABLE drake_places,rnd_i,rnd_type,drake_list,drake_gold}
        [unhide_unit]
        [/unhide_unit]

        {FAKE_SIGHTED calamity_drakes (
            side=8
            race=drake
        )}
        [event]
            name=calamity_drakes_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_DRAKES_A}
        [/event]

        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

#define CALAMITY_DWARVES TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_dwarves

        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a dwarf calamity n: $enemy.num_calamity"}

        {RANDOM_VAR rnd_dir 0,1,2,3}	# 0=east, 1=north, 2=west, 3=south
        [store_locations]
            variable=dwarf_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]
                x=$map_signs[$rnd_dir].x
                y=$map_signs[$rnd_dir].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {CLEAR_VARIABLE rnd_dir}
        {RANDOM_VAR rnd_i 0.."$($dwarf_places.length-1)"}
        {RANDOM_VAR rnd_type "Dwarvish Dragonguard","Dwarvish Lord","Dwarvish Sentinel","Dwarvish Explorer","Dwarvish Runemaster"}
        {WF_DEBUG "Placing $rnd_type at $dwarf_places[$rnd_i].x,$dwarf_places[$rnd_i].y"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="dwarf-laugh.wav"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            role=dwarf_calamity_leader
            side=8
            type=$rnd_type
            x=$dwarf_places[$rnd_i].x
            y=$dwarf_places[$rnd_i].y
            {IS_HERO}
            {IS_LEADER}
            {MOD_OBJECT_LOYAL}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {VARIABLE repeat_count $enemy.num_calamity}
        {WF_REPEAT $repeat_count (
            {RANDOM_VAR rnd_type ("Dwarvish Thunderer","Dwarvish Fighter","Dwarvish Guardsman","Dwarvish Ulfserker","Dwarvish Scout")}
            [unit]
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                side=8
                type=$rnd_type
                x,y=$dwarf_places[$rnd_i].x,$dwarf_places[$rnd_i].y
                {MOD_OBJECT_LOYAL_OVERLAY}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        # Now he "recruits" his army
        {COUNT_VILLAGES num_villages}
        {VARIABLE dwarf_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {WF_DEBUG "Dwarf fake recruit gold set to $dwarf_gold"}
        [set_variables]
            name=dwarf_list
            mode=replace
            {VALUE2 type "Dwarvish Berserker" cost 30}
            {VALUE2 type "Dwarvish Pathfinder" cost 30}
            {VALUE2 type "Dwarvish Runesmith" cost 30}
            {VALUE2 type "Dwarvish Stalwart" cost 30}
            {VALUE2 type "Dwarvish Steelclad" cost 36}
            {VALUE2 type "Dwarvish Thunderguard" cost 27}
        [/set_variables]
        [while]
            {VARIABLE_CONDITIONAL dwarf_gold greater_than 0}	# will go *roughly* to zero
            {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
            [do]
                {RANDOM_VAR rnd_i2 0.."$($dwarf_list.length-1)"}
                [unit]
                    animate=yes
                    passable=yes
                    placement=map
                    random_traits=yes
                    side=8
                    type=$dwarf_list[$rnd_i2].type
                    x,y=$dwarf_places[$rnd_i].x,$dwarf_places[$rnd_i].y
                    {MOD_OBJECT_LOYAL}
                [/unit]
                {VARIABLE_OP REPEAT_b add 1}
                {VARIABLE_OP dwarf_gold sub $dwarf_list[$rnd_i2].cost}
                {CLEAR_VARIABLE rnd_i2}
            [/do]
        [/while]
        {CLEAR_VARIABLE dwarf_places,rnd_i,rnd_type,dwarf_list,dwarf_gold}
        [unhide_unit]
        [/unhide_unit]

        {FAKE_SIGHTED calamity_dwarves (
            side=8
            race=dwarf
        )}
        [event]
            name=calamity_dwarves_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_DWARVES_A}
        [/event]

        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

#define CALAMITY_ELVES TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_elves
        {VARIABLE REPEAT_b 0}
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a elf calamity n: $enemy.num_calamity"}

        {RANDOM_VAR rnd_dir 0,1,2,3}	# 0=east, 1=north, 2=west, 3=south
        [store_locations]
            variable=elf_places
            terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
            {X_AND_Y_ARE_ON_THE_MAP}
            {NOT_FILTER}
            [and]
                x=$map_signs[$rnd_dir].x
                y=$map_signs[$rnd_dir].y
                radius={BORDER}
            [/and]
        [/store_locations]
        {CLEAR_VARIABLE rnd_dir}
        {RANDOM_VAR rnd_i 0.."$($elf_places.length-1)"}
        {RANDOM_VAR rnd_type "Elvish Enchantress,Elvish Shyde"}
        {WF_DEBUG "Placing $rnd_type at $elf_places[$rnd_i].x,$elf_places[$rnd_i].y"}
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="magic-faeriefire-miss.ogg"
        [/sound]
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            role=elf_calamity_leader
            side=8
            type=$rnd_type
            x=$elf_places[$rnd_i].x
            y=$elf_places[$rnd_i].y
            {IS_HERO}
            {IS_LEADER}
            {MOD_OBJECT_LOYAL}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
        {VARIABLE repeat_count $enemy.num_calamity}
        {WF_REPEAT $repeat_count (
            {RANDOM_VAR rnd_type ("Wose","Elvish Scout","Elvish Shaman")}
            [unit]
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                side=8
                type=$rnd_type
                x,y=$elf_places[$rnd_i].x,$elf_places[$rnd_i].y
                {MOD_OBJECT_LOYAL_OVERLAY}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
        )}
        {CLEAR_VARIABLE repeat_count}
        # Now he "recruits" his army
        {COUNT_VILLAGES num_villages}
        {VARIABLE elf_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
        {CLEAR_VARIABLE num_villages}
        {WF_DEBUG "Elves fake recruit gold set to $elf_gold"}
        [set_variables]
            name=elf_list
            mode=replace
            {VALUE2 type "Elder Wose" cost 27}
            {VALUE2 type "Ancient Wose" cost 48}
#ifver WESNOTH_VERSION >= 1.15.0
            {VALUE2 type "Wose Shaman" cost 40}
#endif
        [/set_variables]
        [while]
            {VARIABLE_CONDITIONAL elf_gold greater_than 0}	# will go *roughly* to zero
            {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
            [do]
                {RANDOM_VAR rnd_i2 0.."$($elf_list.length-1)"}
                [unit]
                    animate=yes
                    passable=yes
                    placement=map
                    random_traits=yes
                    side=8
                    type=$elf_list[$rnd_i2].type
                    x,y=$elf_places[$rnd_i].x,$elf_places[$rnd_i].y
                    {MOD_OBJECT_LOYAL}
                [/unit]
                {VARIABLE_OP REPEAT_b add 1}
                {VARIABLE_OP elf_gold sub $elf_list[$rnd_i2].cost}
                {CLEAR_VARIABLE rnd_i2}
            [/do]
        [/while]
        {CLEAR_VARIABLE elf_places,rnd_i,rnd_type,elf_list,elf_gold}
        [unhide_unit]
        [/unhide_unit]

        {FAKE_SIGHTED calamity_elves (
            side=8
            race=elf,wose
        )}
        [event]
            name=calamity_elves_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_ELVES_A}
        [/event]

        {CLEAR_VARIABLE REPEAT_b}
    [/event]
#enddef

#define CALAMITY_ORCS TURN
    [event]
        name=side 8 turn {TURN} end
        id=calamity_orcs
        {VARIABLE quota.calamity ""}
        {WF_DEBUG "Creating a orcs calamity n: $enemy.num_calamity"}
        [sound]
            name="troll-die-1.ogg"
        [/sound]
        [sound]	# warn the player who is paying attention (and has the sound on)
            name="ambient/wardrums.ogg"
            repeat=4
        [/sound]
        {CALAMITY_ORCS_DIR 0}
        {CALAMITY_ORCS_DIR 1}
        {CALAMITY_ORCS_DIR 2}
        {CALAMITY_ORCS_DIR 3}

        {FAKE_SIGHTED calamity_orcs (
            side=8
            race=orc,troll,goblin,wolf
        )}
        [event]
            name=calamity_orcs_sighted
            first_time_only=yes
            {SIGHTED_CALAMITY_ORCS_A}
        [/event]
    [/event]
#enddef

#define CALAMITY_ORCS_DIR DIR
    {VARIABLE REPEAT_b 0}
    {VARIABLE rnd_dir {DIR}}
    #{RANDOM_VAR rnd_dir 0,1,2,3}	# 0=east, 1=north, 2=west, 3=south
    [store_locations]
        variable=orc_calamity_places
        terrain=!,W*^*,*^Y*,*^V*,K*^*,C*^*
        {X_AND_Y_ARE_ON_THE_MAP}
        {NOT_FILTER}
        [and]
            x=$map_signs[$rnd_dir].x
            y=$map_signs[$rnd_dir].y
            radius={BORDER}
        [/and]
    [/store_locations]
    {CLEAR_VARIABLE rnd_dir}
    {RANDOM_VAR rnd_i 0.."$($orc_calamity_places.length-1)"}
    {RANDOM_VAR rnd_type ("Orcish Slurbow,Orcish Warlord,Great Troll,Troll Warrior,Orcish Sovereign,Orcish Nightblade,Direwolf Rider")}
    {WF_DEBUG "Placing $rnd_type at $orc_calamity_places[$rnd_i].x,$orc_calamity_places[$rnd_i].y"}
    #[sound]	# warn the player who is paying attention (and has the sound on)
    #	name="ambient/wardrums.ogg"
    #[/sound]
    [unit]
        animate=yes
        passable=yes
        placement=map
        random_traits=yes
        role=orc_calamity_leader
        side=8
        type=$rnd_type
        x=$orc_calamity_places[$rnd_i].x
        y=$orc_calamity_places[$rnd_i].y
        {IS_HERO}
        {IS_LEADER}
        {MOD_OBJECT_LOYAL}
    [/unit]
    {VARIABLE_OP REPEAT_b add 1}
    {VARIABLE repeat_count $enemy.num_calamity}
    {WF_REPEAT $repeat_count (
        {RANDOM_VAR rnd_type "Orcish Archer,Orcish Assassin,Orcish Grunt,Orcish Leader,Troll Whelp,Goblin Spearman,Goblin Impaler,Goblin Rouser,Wolf Rider"}
        [unit]
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            side=8
            type=$rnd_type
            x,y=$orc_calamity_places[$rnd_i].x,$orc_calamity_places[$rnd_i].y
            {MOD_OBJECT_LOYAL_OVERLAY}
        [/unit]
        {VARIABLE_OP REPEAT_b add 1}
    )}
    {CLEAR_VARIABLE repeat_count}
    # Now he "recruits" his army
    {COUNT_VILLAGES num_villages}
    {VARIABLE orc_calamity_gold "$(ceil($enemy.calamity_mult * ($enemy.raid_mult * ($enemy.raid_base_gold + $enemy.raid_gold_mult*$num_villages))))"}
    {CLEAR_VARIABLE num_villages}
    # Orcs spawn on four sides.
    {VARIABLE_OP orc_calamity_gold divide 4}
    {VARIABLE_OP orc_calamity_gold round floor}
    {WF_DEBUG "Orcs calamity fake recruit gold set to $orc_calamity_gold"}
    [set_variables]
        name=orc_calamity_list
        mode=replace
        {VALUE2 type "Goblin Knight" cost 28}
        {VALUE2 type "Goblin Pillager" cost 28}
        {VALUE2 type "Orcish Crossbowman" cost 21}
        {VALUE2 type "Orcish Ruler" cost 35}
        {VALUE2 type "Orcish Slayer" cost 26}
        {VALUE2 type "Orcish Warrior" cost 26}
        {VALUE2 type "Troll Hero" cost 30}
        {VALUE2 type "Troll Rocklobber" cost 25}
        {VALUE2 type "Troll Shaman" cost 32}
        {VALUE2 type "Troll" cost 27}
    [/set_variables]
    [while]
        {VARIABLE_CONDITIONAL orc_calamity_gold greater_than 0}	# will go *roughly* to zero
        {VARIABLE_CONDITIONAL REPEAT_b less_than {BLOB_LIMIT}}
        [do]
            {RANDOM_VAR rnd_i2 0.."$($orc_calamity_list.length-1)"}
            [unit]
                animate=yes
                passable=yes
                placement=map
                random_traits=yes
                side=8
                type=$orc_calamity_list[$rnd_i2].type
                x,y=$orc_calamity_places[$rnd_i].x,$orc_calamity_places[$rnd_i].y
                {MOD_OBJECT_LOYAL}
            [/unit]
            {VARIABLE_OP REPEAT_b add 1}
            {VARIABLE_OP orc_calamity_gold sub $orc_calamity_list[$rnd_i2].cost}
            {CLEAR_VARIABLE rnd_i2}
        [/do]
    [/while]
    {CLEAR_VARIABLE orc_calamity_places,rnd_i,rnd_type,orc_calamity_list,orc_calamity_gold}
    [unhide_unit]
    [/unhide_unit]
    {CLEAR_VARIABLE REPEAT_b}
#enddef
