#textdomain wesnoth-Wild_Frontiers

#define ALLOW_SUBSCENE_PROJECTS
    [event]
        name=stop_sub_projects

        {VARIABLE ii "$($sub_projects.proj_list.length-1)"}
        [while]
            {VARIABLE_CONDITIONAL ii greater_than_equal_to 0}
            [do]
                {SCROLL_TO $sub_projects.proj_list[$ii].x $sub_projects.proj_list[$ii].y}
                {STOP_SUB_PROJECT $sub_projects.proj_list[$ii].x $sub_projects.proj_list[$ii].y}
                {VARIABLE_OP ii sub 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE ii}

        {CLEAR_VARIABLE sub_projects}
        {CLEAR_VARIABLE sub_runes}
        {CLEAR_VARIABLE sub_traps}
        [clear_menu_item]
            id=build_menu
        [/clear_menu_item]
    [/event]

    [event]
        name=side 1 turn
        first_time_only=no

        {FIRE_EVENT project_queue}
    [/event]
    [event]
        name=side 1 turn refresh
        first_time_only=no

        {FIRE_EVENT refresh_workers}
    [/event]

    [event]
        name=prestart
        [set_menu_item]
            id=build_menu
            description=_ "Get to work..."
            image="build_icon.png"
            [show_if]
                # Project status
                [have_unit]
                    x,y=$x1,$y1
                    side=1
                    {FILTER_FOR_WORKER}
                [/have_unit]
                [or]
                    # Mages
                    {HAVE_IDLE_CASTERS $x1 $y1}
                [/or]
            [/show_if]
            [command]
                # Project status start {
                [if]
                    [have_unit]
                        x,y=$x1,$y1
                        side=1
                        {FILTER_FOR_WORKER}
                    [/have_unit]
                    [then]
                        [for]
                            array=sub_projects.proj_list
                            reverse=yes
                            [do]
                                [if]
                                    [and]
                                        {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].x numerical_equals $x1}
                                        {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].y numerical_equals $y1}
                                    [/and]
                                    [then]	# this *should* only happen once
                                        {VARIABLE i_this $i}
                                    [/then]
                                [/if]
                            [/do]
                        [/for]
                        [message]
                            speaker=unit
                            message=_"We've got $sub_projects.proj_list[$i_this].turns work shifts left until this $sub_projects.proj_list[$i_this].do $sub_projects.proj_list[$i_this].goal project is complete, milord."
                            [option]
                                label=_"Okay."
                                [command][/command]
                            [/option]
                            [option]
                                label=_"Stop working on this project."
                                [command]
                                    {STOP_SUB_PROJECT $x1 $y1}
                                    {UNIT_SAYS _"'ave it your way, milord. We should be able ta recover most of the materials."}
                                    {UNIT_SAYS _"Time ta pack it up, boys!."}
                                [/command]
                            [/option]
                        [/message]
                        {CLEAR_VARIABLE i_this}
                    [/then]
                [/if]
                # Project status end }
                [if]
                    {HAVE_IDLE_CASTERS $x1 $y1}
                    [then]
                        [message]
                            speaker=unit
                            message=_"What would you like me to do, milord?"
                            [option]
                                label=_"Cast rune - {RUNE_COST} gold, {RUNE_TURNS} work shifts"
                                image = "terrain/void/void.png~BLIT(scenery/rune5.png)~SCALE(36,36)"
                                [command]
                                    {WF_CALL_FUNCTION "rune" do,x,y="start",$x1,$y1}
                                [/command]
                            [/option]
                            [option]
                                label=_"Nevermind"
                                image = "terrain/void/void.png~SCALE(36,36)"
                                [command] [/command]
                            [/option]
                        [/message]
                    [/then]
                [/if]
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=moveto
        id=moveto_rune_trap
        first_time_only=no
        [filter]
            [filter_side]
                [enemy_of]
                    side=1
                [/enemy_of]
            [/filter_side]
            [filter_location]
                find_in=sub_traps.rune
            [/filter_location]
        [/filter]
        [set_variables]
            mode=insert
            name=param[0]
            [value]
                do="burn"
                x=$x1
                y=$y1
            [/value]
        [/set_variables]
        [fire_event]
            name=rune
            [primary_unit]
                x=$x1
                y=$y1
            [/primary_unit]
        [/fire_event]
        [clear_variable]
            name=param[0]
        [/clear_variable]
    [/event]

    [event]
        #name=side 1 turn refresh
        name=refresh_workers
        id=refresh_workers
        first_time_only=no
        {MODIFY_UNIT ({FILTER_FOR_WORKER}) moves 0}
        {MODIFY_UNIT ({FILTER_FOR_WORKER}) resting no}
        {MODIFY_UNIT ({FILTER_FOR_WORKER}) attacks_left 0}
    [/event]

    # Create event to update project progress each turn
    [event]
        #name="side 1 turn"
        name=project_queue
        id=project_queue
        first_time_only=no
        # First decrement the number of turns for each project, then check if
        # any project is done.
        {VARIABLE x1_bak $x1}
        {VARIABLE y1_bak $y1}
        [for]
            array=sub_projects.proj_list
            reverse=yes
            [do]
                {VARIABLE_OP sub_projects.proj_list[$i].turns add -1}
                [if]
                    {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].turns less_than_equal_to 0}
                    [then]	# workers are now idle, build
                        #{REMOVE_UNIT_VARIABLE $sub_projects.proj_list[$i].x $sub_projects.proj_list[$i].y worker}
                        {REMOVE_UNIT_STATUS $sub_projects.proj_list[$i].x $sub_projects.proj_list[$i].y worker}
                        {VARIABLE x1 $sub_projects.proj_list[$i].x}
                        {VARIABLE y1 $sub_projects.proj_list[$i].y}
                        {WF_CALL_FUNCTION $sub_projects.proj_list[$i].goal do,custom,x,y=$sub_projects.proj_list[$i].do,$sub_projects.proj_list[$i].custom,$sub_projects.proj_list[$i].x,$sub_projects.proj_list[$i].y}
                    [/then]
                    [else]
                        {SCROLL_TO $sub_projects.proj_list[$i].x $sub_projects.proj_list[$i].y}
                        [floating_text]
                            x=$sub_projects.proj_list[$i].x
                            y=$sub_projects.proj_list[$i].y
                            text=_"$sub_projects.proj_list[$i].turns left"
                        [/floating_text]
                        #[delay]
                        #	time=500
                        #[/delay]
                    [/else]
                [/if]
            [/do]
        [/for]
        {VARIABLE x1 $x1_bak}
        {VARIABLE y1 $y1_bak}
        {CLEAR_VARIABLE x1_bak}
        {CLEAR_VARIABLE y1_bak}

        # Delete finished items in the project queue. This loop is down
        # backwards from the FOREACH macro to avoid un-checked sub_projects
        # shifting as finished ones are deleted. Some unfinished sub_projects
        # may be checked twice, but that's okay. Since this is a separate loop
        # from that above the turns remaining are not decremented twice.
        {VARIABLE i $sub_projects.proj_list.length}
        {VARIABLE_OP i sub 1}	# last element in array has index length-1
        [while]
            {VARIABLE_CONDITIONAL i greater_than_equal_to 0}
            [do]
                [if]
                    # hopefully <= should kill any sub_projects that seem to randomly sneak through
                    # from time to time
                    {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].turns less_than_equal_to 0}
                    [then]
                        {CLEAR_VARIABLE sub_projects.proj_list[$i]}
                    [/then]
                [/if]
                {VARIABLE_OP i sub 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE i}
    [/event]

    # Create event to stop sub_projects if workers are attacked
    [event]
        name=attack
        id=worker_attacked
        first_time_only=no
        [filter_second]
            #side=1
            {FILTER_FOR_WORKER}
        [/filter_second]
        {SCROLL_TO $x2 $y2}
        {STOP_SUB_PROJECT $x2 $y2 VAR=disrupt_goal}
        {NARRATOR_SAYS _"The project $disrupt_goal| was disrupted."}
        {CLEAR_VARIABLE disrupt_goal}
    [/event]

    [event]
        name="rune"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="start"
                {VARIABLE i_this -1}
                [for]
                    array=sub_runes.rune_list
                    reverse=yes
                    [do]
                        [if]
                            [and]
                                {VARIABLE_CONDITIONAL sub_runes.rune_list[$i].x numerical_equals $param.x}
                                {VARIABLE_CONDITIONAL sub_runes.rune_list[$i].y numerical_equals $param.y}
                            [/and]
                            [then]  # this *should* only happen once
                                {VARIABLE i_this $i}
                            [/then]
                        [/if]
                    [/do]
                [/for]

                [if]
                    {VARIABLE_CONDITIONAL i_this greater_than_equal_to 0}
                    [then]
                        [if]
                            [have_unit]
                                id=$sub_runes.rune_list[$i_this].id
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {WF_SCROLL_UNIT	(id=$sub_runes.rune_list[$i_this].id)}
                                [message]
                                    speaker=$sub_runes.rune_list[$i_this].id
                                    message=_"Hey, that's my rune."
                                [/message]
                            [/then]
                        [/if]

                        [message]
                            speaker=unit
                            message=_"But milord, there is already a rune here. Do you want me to remove it?"
                            [option]
                                label=_"Yes"
                                [command]
                                    [store_locations]
                                        variable=sub_traps.rune
                                        find_in=sub_traps.rune
                                        [not]
                                            x,y=$param.x,$param.y
                                        [/not]
                                    [/store_locations]
                                    [sound]
                                        name=magic-dark-big.ogg
                                    [/sound]
                                    [item]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                        halo=halo/undead/dark-magic-[1~6].png:100
                                    [/item]
                                    [delay]
                                        time=400
                                    [/delay]
                                    [remove_item]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                        image=halo/undead/dark-magic-[1~6].png:100
                                    [/remove_item]

                                    # I don't trust remove_item image=
                                    [switch]
                                        variable=sub_runes.rune_list[$i_this].image
                                        [case]
                                            value=1
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune1-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=2
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune2-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=3
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune3-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=4
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune4-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=5
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune5-glow.png
                                            [/remove_item]
                                        [/case]
                                        [case]
                                            value=6
                                            [remove_item]
                                                x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                                image=scenery/rune6-glow.png
                                            [/remove_item]
                                        [/case]
                                    [/switch]
                                    {CLEAR_VARIABLE sub_runes.rune_list[$i_this]}
                                [/command]
                            [/option]
                            [option]
                                label=_"No"
                                default=yes
                                [command] [/command]
                            [/option]
                        [/message]
                    [/then]
                    [else]
                        {NO_CHECK_AND_START_SUB "rune" $param.x $param.y {RUNE_COST} {RUNE_TURNS} (_"Casting a rune here will cost {RUNE_COST} gold and take {RUNE_TURNS} work shifts, milord. Do you want me to cast the spell?")}
                    [/else]
                [/if]
                {CLEAR_VARIABLE i_this}
            [/case]
            [case]
                value="stop"
            [/case]
            [case]
                value="build"
                [store_locations]
                    x,y=$param.x,$param.y
                    variable=sub_traps.rune
                    [or]
                        find_in=sub_traps.rune
                    [/or]
                [/store_locations]
                [sound]
                    name=magicmissile.wav
                [/sound]
                [store_unit]
                    variable=caster_store
                    [filter]
                        x,y=$param.x,$param.y
                    [/filter]
                [/store_unit]

                # catch all
                {RANDOM_VAR rnd_rune (1,2,3,4,5,6)}

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=cold,arcane
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (1,2)}
                    [/then]
                [/if]

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=cold
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (3,4)}
                    [/then]
                [/if]

                [if]
                    [have_unit]
                        id=$caster_store.id
                        [has_attack]
                            range=ranged
                            type=fire,arcane
                        [/has_attack]
                    [/have_unit]
                    [then]
                        {RANDOM_VAR rnd_rune (5,6)}
                    [/then]
                [/if]

                [set_variables]
                    name=sub_runes.rune_list
                    mode=append
                    [value]
                        x=$param.x
                        y=$param.y
                        id=$caster_store.id
                        side=$caster_store.side
                        image=$rnd_rune
                    [/value]
                [/set_variables]

                # I don't trust remove_item image=
                [switch]
                    variable=rnd_rune
                    [case]
                        value=1
                        {PLACE_IMAGE scenery/rune1-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=2
                        {PLACE_IMAGE scenery/rune2-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=3
                        {PLACE_IMAGE scenery/rune3-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=4
                        {PLACE_IMAGE scenery/rune4-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=5
                        {PLACE_IMAGE scenery/rune5-glow.png $param.x $param.y}
                    [/case]
                    [case]
                        value=6
                        {PLACE_IMAGE scenery/rune6-glow.png $param.x $param.y}
                    [/case]
                [/switch]

                {NOTIFY $param.x $param.y _"$caster_store.name have finished casting a rune."}
                {CLEAR_VARIABLE rnd_rune}
                {CLEAR_VARIABLE caster_store}
            [/case]
            [case]
                value="burn"
                [store_locations]
                    variable=sub_traps.rune
                    find_in=sub_traps.rune
                    [not]
                        x,y=$param.x,$param.y
                    [/not]
                [/store_locations]
                {SCROLL_TO $param.x $param.y}
                {VARIABLE i_this -1}
                [for]
                    array=sub_runes.rune_list
                    reverse=yes
                    [do]
                        [if]
                            [and]
                                {VARIABLE_CONDITIONAL sub_runes.rune_list[$i].x numerical_equals $param.x}
                                {VARIABLE_CONDITIONAL sub_runes.rune_list[$i].y numerical_equals $param.y}
                            [/and]
                            [then]  # this *should* only happen once
                                {VARIABLE i_this $i}
                            [/then]
                        [/if]
                    [/do]
                [/for]

                [if]
                    {VARIABLE_CONDITIONAL i_this greater_than_equal_to 0}
                    [then]
                        [set_variable]
                            name=random_dmg
                            rand="arcane,cold,fire"
                        [/set_variable]

                        [if]
                            [have_unit]
                                side=$sub_runes.rune_list[$i_this].side
                                id=$sub_runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=cold,arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                [set_variable]
                                    name=random_dmg
                                    rand="cold,arcane"
                                [/set_variable]
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$sub_runes.rune_list[$i_this].side
                                id=$sub_runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=fire
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg fire}
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$sub_runes.rune_list[$i_this].side
                                id=$sub_runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=cold
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg cold}
                            [/then]
                        [/if]

                        [if]
                            [have_unit]
                                side=$sub_runes.rune_list[$i_this].side
                                id=$sub_runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                {VARIABLE random_dmg arcane}
                            [/then]
                        [/if]

                        [sound]
                            name=magic-dark-big.ogg
                        [/sound]

                        [item]
                            x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                            halo=halo/undead/dark-magic-[1~6].png:100
                        [/item]
                        [delay]
                            time=400
                        [/delay]

                        [if]
                            [have_unit]
                                side=$sub_runes.rune_list[$i_this].side
                                id=$sub_runes.rune_list[$i_this].id
                                [has_attack]
                                    range=ranged
                                    type=fire,cold,arcane
                                [/has_attack]
                                search_recall_list=no
                            [/have_unit]
                            [then]
                                #{WF_DEBUG "Rune Caster: $sub_runes.rune_list[$i_this].id Attack: $random_dmg"}
                                [modify_unit]
                                    [filter]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    [/filter]
                                    [effect]
                                        apply_to=status
                                        add=uncovered
                                    [/effect]
                                [/modify_unit]
                                [harm_unit]
                                    [filter]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    [/filter]
                                    [filter_second]
                                        side=$sub_runes.rune_list[$i_this].side
                                        id=$sub_runes.rune_list[$i_this].id
                                    [/filter_second]
                                    [primary_attack]
                                        #Attacking unit
                                        type=$random_dmg
                                        range=ranged
                                    [/primary_attack]
                                    [secondary_attack]
                                        #Defending unit
                                    [/secondary_attack]
                                    amount=30
                                    damage_type=$random_dmg
                                    experience=yes
                                    fire_event=yes
                                    kill=yes
                                    animate=yes
                                [/harm_unit]
                            [/then]
                            [else]
                                #{WF_DEBUG "Rune Caster: N/A Attack: $random_dmg"}
                                [modify_unit]
                                    [filter]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    [/filter]
                                    [effect]
                                        apply_to=status
                                        add=uncovered
                                    [/effect]
                                [/modify_unit]
                                [harm_unit]
                                    [filter]
                                        x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    [/filter]
                                    amount=30
                                    damage_type=$random_dmg
                                    fire_event=yes
                                    kill=yes
                                    animate=yes
                                [/harm_unit]
                            [/else]
                        [/if]

                        [remove_item]
                            x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                            image=halo/undead/dark-magic-[1~6].png:100
                        [/remove_item]

                        # I don't trust remove_item image=
                        [switch]
                            variable=sub_runes.rune_list[$i_this].image
                            [case]
                                value=1
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune1-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=2
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune2-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=3
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune3-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=4
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune4-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=5
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune5-glow.png
                                [/remove_item]
                            [/case]
                            [case]
                                value=6
                                [remove_item]
                                    x,y=$sub_runes.rune_list[$i_this].x,$sub_runes.rune_list[$i_this].y
                                    image=scenery/rune6-glow.png
                                [/remove_item]
                            [/case]
                        [/switch]

                        {CLEAR_VARIABLE random_dmg}
                        {CLEAR_VARIABLE sub_runes.rune_list[$i_this]}
                    [/then]
                [/if]
                {CLEAR_VARIABLE i_this}
            [/case]
        [/switch]
    [/event]
#enddef

#define STOP_SUB_PROJECT X Y
#arg VAR
dummy_var#endarg
    # Stop the project occurring at X,Y
    {VARIABLE x1_bak $x1}
    {VARIABLE y1_bak $y1}
    [for]
        array=sub_projects.proj_list
        reverse=yes
        [do]
            [if]
                [and]
                    {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].x numerical_equals {X}}
                    {VARIABLE_CONDITIONAL sub_projects.proj_list[$i].y numerical_equals {Y}}
                [/and]
                [then]
                    {VARIABLE {VAR} $sub_projects.proj_list[$i].goal}
                    {VARIABLE x1 {X}}
                    {VARIABLE y1 {Y}}
                    {REFUND_GOLD $sub_projects.proj_list[$i].cost}
                    {WF_CALL_FUNCTION $sub_projects.proj_list[$i].goal do,x,y="stop",{X},{Y}}
                    #{REMOVE_UNIT_VARIABLE {X} {Y} worker}
                    {REMOVE_UNIT_STATUS {X} {Y} worker}
                    {CLEAR_VARIABLE sub_projects.proj_list[$i]}
                    #[break]
                    #[/break]
                    # The shifting this causes is irrelevant since there *should*
                    # be only one project stopped per complete loop iteration
                [/then]
            [/if]
        [/do]
    [/for]
    {VARIABLE x1 $x1_bak}
    {VARIABLE y1 $y1_bak}
    {CLEAR_VARIABLE x1_bak}
    {CLEAR_VARIABLE y1_bak}
    {CLEAR_VARIABLE dummy_var}
#enddef

#define NO_CHECK_AND_START_SUB PROJ_NAME X Y COST TURNS QUESTION
    {STORE_GOLD}
    [if]
        {CHECK_GOLD {COST}}
        [then]
            {START_SUB_PROJECT {PROJ_NAME} {TURNS} {COST} {X} {Y}}
        [/then]
        [else]
            {UNIT_SAYS _"But milord, we need {COST} gold for supplies, and yer treasury don't 'ave that much!"}
        [/else]
    [/if]
#enddef

#define START_SUB_PROJECT TYPE TURNS COST X Y
    # Generally starts the building process by adding the project to the
    # building queue
    {PAY_GOLD {COST}}
    [set_variables]
        name=sub_projects.proj_list
        mode=append
        [value]
            x={X}
            y={Y}
            turns={TURNS}
            goal={TYPE}
            custom=none
            do=build
            cost={COST}
        [/value]
    [/set_variables]
    {START_WORKING {X} {Y}}
#enddef

#define SHARED_FIEF_BURN_EVENTS
    # ----- Armorer -----
    [event]
        name="armorer"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Ya "scenery/village-human-burned3.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Blacksmith -----
    [event]
        name="blacksmith"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Yf "scenery/rubble.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Bowyer -----
    [event]
        name="bowyer"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Yb "scenery/village-human-burned3.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Library -----
    [event]
        name="library"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Yu "scenery/village-human-burned3.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Stables -----
    [event]
        name="stables"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Ys "scenery/village-human-burned1.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Tavern -----
    [event]
        name="tavern"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {BURN_2X2_BUILDING $param.x $param.y Yt "scenery/village-human-burned1.png"}
            [/case]
        [/switch]
    [/event]

    # ----- Farms -----
    [event]
        name="farm"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {MODIFY_3X3_SPACE Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/village-human-burned2.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Wooden Keep -----
    [event]
        name="wooden keep"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Wooden Fortifications -----
    [event]
        name="fort"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Windmill -----
    [event]
        name="windmill"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Well -----
    [event]
        name="well"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Build Altar -----
    [event]
        name="altar"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                {MODIFY_TERRAIN Rb $param.x $param.y}
                {FIRE_ANIMATION $param.x $param.y}
                {PLACE_IMAGE "scenery/rubble.png" $param.x $param.y}
            [/case]
        [/switch]
    [/event]

    # ----- Farm Yield -----
    [event]
        name="yield"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                [sound]
                    name=torch.ogg
                [/sound]
                [terrain]
                    terrain=^Gvs
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
            [/case]
        [/switch]
    [/event]

    # ----- Mushroom Farm -----
    [event]
        name="mushroom farm"
        first_time_only=no
        [switch]
            variable=param.do
            [case]
                value="burn"
                [sound]
                    name=torch.ogg
                [/sound]
                [terrain]
                    terrain=^Gvs
                    layer=overlay
                    [and]
                        x,y=$param.x,$param.y
                    [/and]
                [/terrain]
            [/case]
        [/switch]
    [/event]

    [event]
        name=side 1 turn refresh
        first_time_only=no
        {FIRE_EVENT put_out_fire}
    [/event]

    [event]
        name=moveto
        #id=burn_buildings
        first_time_only=no
        [filter]
            side=1
            x,y=$x1,$y1
            [filter_location]
                terrain=*^Wm,*^Yf,*^Yfo,*^Yb,*^Ybo,*^Ys,*^Yso,*^Yu,*^Yuo,*^Yt,*^Yto,*^Ya,*^Yao,*^Yws,*^Yga,*^Ygy,*^Ymb,*^Ymc,*^Ymd,Ce,Ket
                x,y=$x1,$y1
            [/filter_location]
        [/filter]
        [store_locations]	# This has base and overlay in it
            variable=burn_location_full
            x,y=$x1,$y1
        [/store_locations]
        # This is kind of an ugly hack, but I'm not sure how to make it cleaner
        [set_variables]
            name=burn_location
            mode=replace
            [split]
                list=$burn_location_full.terrain
                key=layer
                separator="^"
            [/split]
        [/set_variables]
        [switch]	# switch on base terrain
            variable=burn_location[0].layer
            [case]	# Wooden encampments
                value=Ce
                {WF_CALL_FUNCTION "fort" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Wooden keeps
                value=Ket
                {WF_CALL_FUNCTION "wooden keep" do,x,y="burn",$x1,$y1}
            [/case]
        [/switch]
        [switch]	# switch on overlay terrain
            # I'd like to make this more building type-agnostic, but that's difficult
            variable=burn_location[1].layer
            [case]	# Armorer
                value=Ya,Yao
                {WF_CALL_FUNCTION "armorer" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Blacksmith
                value=Yf,Yfo
                {WF_CALL_FUNCTION "blacksmith" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Bowyer
                value=Yb,Ybo
                {WF_CALL_FUNCTION "bowyer" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Library
                value=Yu,Yuo
                {WF_CALL_FUNCTION "library" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Stables
                value=Ys,Yso
                {WF_CALL_FUNCTION "stables" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Tavern
                value=Yt,Yto
                {WF_CALL_FUNCTION "tavern" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Windmill
                value=Wm
                {WF_CALL_FUNCTION "windmill" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Well
                value=Yws
                {WF_CALL_FUNCTION "well" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Sacrifical Altar
                value=Yga
                {WF_CALL_FUNCTION "altar" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Farm yield
                value=Ygy
                {WF_CALL_FUNCTION "yield" do,x,y="burn",$x1,$y1}
            [/case]
            [case]	# Mushroom farm
                value=Ymb,Ymc,Ymd
                {WF_CALL_FUNCTION "mushroom farm" do,x,y="burn",$x1,$y1}
            [/case]
        [/switch]
        {CLEAR_VARIABLE burn_location_full}
        {CLEAR_VARIABLE burn_location}
    [/event]

    [event]
        name=moveto
        #id=burn_farms
        first_time_only=no
        [filter]
            side=1
            x,y=$x1,$y1

            [filter_location]
                terrain=*^Vh
                x,y=$x1,$y1
                [filter_adjacent_location]
                    terrain=*^Gvs,*^Ygy,*^Ymb,*^Ymc,*^Ymd
                [/filter_adjacent_location]
            [/filter_location]
        [/filter]

        {WF_CALL_FUNCTION "farm" do,x,y="burn",$x1,$y1}
    [/event]
#enddef
