#textdomain wesnoth-Wild_Frontiers

#define WF_CARRYOVER
    bonus=no
    carryover_percentage=100
#enddef

#define WF_MIN_GOLD
{ON_DIFFICULTY 150 140 130}#enddef

#define FIEF_GOLD_REWARD
    [set_variable]
        name=random_gold
        rand=75..100
    [/set_variable]
    [gold]
        side=1
        amount=$random_gold
    [/gold]
    [sound]
        name="gold.ogg"
    [/sound]
    {CLEAR_VARIABLE random_gold}
#enddef

#define STASH_GOLD
    {VARIABLE quota.outlaws 1} # Needed for victory

    # Side 1 stuff
    [modify_side]
        side=1
        income=0
    [/modify_side]

    # Side gold
    [store_gold]
        side=1
        variable=stash_gold
    [/store_gold]
    {VARIABLE_OP stash_gold multiply -1}
    [gold]
        side=1
        amount=$stash_gold
    [/gold]
    {VARIABLE_OP stash_gold multiply -1}
#enddef

#define SUB_SIDES YES_NO_FOG YES_NO_SHROUD
    # defeat_condition:
    #     no_leader_left: (default) no units with canrecruit=yes
    #     no_units_left: The side is defeated as soon as it has no units left.
    #     never: The side is never considered defeated.
    #     always: The side is always considered defeated.

    [side]
        side=1
        controller=human
        team_name=settlers
        user_team_name=_"Settlers"
        fog={YES_NO_FOG}
        shroud={YES_NO_SHROUD}
        {FLAG_VARIANT loyalist}
        recruit= #Peasant_no_Advance,Woodsman_no_Advance,Ruffian_no_Advance,Peasant Workers
        gold=0					# side gold set in first scenario
        income=-2				# cancel out the base_income
        save_id=Hero
        persistent=yes
        no_leader=yes
        defeat_condition=no_leader_left
    [/side]

    [side]
        side=2
        controller=ai
        recruit=
        team_name=Rioters
        user_team_name=_"Rioters"
        gold=0
        income={ENEMY_INCOME}
        no_leader=yes
        hidden=yes
        # This was set for guardian type scenarios
        #defeat_condition=no_units_left
    [/side]

    [side]
        side=3
        controller=ai
        recruit=
        team_name=Rioters
        user_team_name=_"Rioters"
        gold=0
        income={ENEMY_INCOME}
        no_leader=yes
        hidden=yes
        #defeat_condition=no_units_left
    [/side]

    [side]
        side=4
        controller=ai
        recruit=
        team_name=settlers,Rioters
        user_team_name=_"Peaceful"
        gold=0
        income={ENEMY_INCOME}
        no_leader=yes
        hidden=yes
    [/side]
#enddef

#define SIDE_DEFEAT SIDE DEFEAT
    [event]
        name=prestart

        [modify_side]
            side={SIDE}
            defeat_condition={DEFEAT}
        [/modify_side]
    [/event]
#enddef

#define KILL_LEADERS_OBJECTIVES
    [store_unit]
        [filter]
            canrecruit=yes
            [filter_side]
                [enemy_of]
                    side=1
                [/enemy_of]
            [/filter_side]
        [/filter]
        variable=store_enemies
    [/store_unit]

    [foreach]
        array=store_enemies
        [do]
            [if]
                {VARIABLE_CONDITIONAL this_item.name equals ""}
                [then]
                    {VARIABLE this_item.name "Nameless"}
                [/then]
            [/if]
            [set_variables]
                name=objective_arr
                mode=append
                [value]
                    condition=win
                    description= _ "Defeat enemy leader: $this_item.name|."
                    [show_if]
                        [have_unit]
                            id=$this_item.id
                        [/have_unit]
                    [/show_if]
                [/value]
            [/set_variables]
        [/do]
    [/foreach]

    [objectives]
        side=1
        [insert_tag]
            name=objective
            variable=objective_arr
        [/insert_tag]
        [objective]
            description= _ "Kill all enemy units"
            condition=win
        [/objective]
        [objective]
            description= _ "Loot the chest"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Hero"
            condition=lose
        [/objective]

        {TURNS_RUN_OUT}

        [gold_carryover]
            {WF_CARRYOVER}
        [/gold_carryover]
    [/objectives]
    {CLEAR_VARIABLE store_enemies}
    {CLEAR_VARIABLE objective_arr}
#enddef

#define FIEF_UNIT TYPE
    #[store_map_dimensions]
    #    variable=store_map_dim
    #[/store_map_dimensions]
    [set_variable]
        name=random_type
        rand={TYPE}
    [/set_variable]
    [if]
        [have_unit]
            side=1
            role="Fief $random_type"
            x,y=recall,recall
            #[not]
            #    x=1-$store_map_dim.width
            #    y=1-$store_map_dim.height
            #[/not]
            search_recall_list=yes
        [/have_unit]
        [then]
            [recall]
                side=1
                role="Fief $random_type"
                check_passability=yes
            [/recall]
        [/then]
        [else]
            [role]
                role="Fief $random_type"
                [auto_recall][/auto_recall]
                search_recall_list=only

                side=1
                [and]
                    role="Fief $random_type"
                [/and]

                [else]
                    [unit]
                        animate=yes
                        passable=yes
                        placement=leader
                        random_traits=yes
                        side=1
                        type=$random_type
                        role="Fief $random_type"
                        [modifications]
                            {TRAIT_LOYAL}
                        [/modifications]
                        {IS_LOYAL}
                    [/unit]
                [/else]
            [/role]
        [/else]
    [/if]
    {CLEAR_VARIABLE random_type}
    #{CLEAR_VARIABLE store_map_dim}
#enddef

#define WF_SPAWN_SIDE SIDE KEEPS YES_NO_COST YES_NO_CHEST
    # keep_locs defined elsewhere
    [if]
        {VARIABLE_CONDITIONAL {KEEPS}.length greater_than 0}
        [then]
            {RANDOM_VAR rnd_i 0.."$(${KEEPS}.length-1)"}

            {RANDOM_VAR boss_type $rnd_leader}

            [unit]
                canrecruit=yes
                passable=yes
                placement=map
                random_traits=no
                side={SIDE}
                type=$boss_type
                x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                [modifications]
                    # Dragon can't fly over chasms
                    [object]
                        #silent=yes
                        #duration=forever
                        #[filter]
                        #    side={SIDE}
                        #    canrecruit=yes
                        #[/filter]
                        [effect]
                            apply_to=movement_costs
                            replace=yes
                            [movement_costs]
                                unwalkable={UNREACHABLE}
                            [/movement_costs]
                        [/effect]
                    [/object]
                [/modifications]
            [/unit]

            [modify_side]
                side={SIDE}
                hidden=no
                recruit=$rnd_recruit
                user_team_name=$rnd_team
                #defeat_condition=no_leader_left
            [/modify_side]

            # Recruit Cost {
            {VARIABLE do_recruit_cost {YES_NO_COST}}
            [if]
                {VARIABLE_CONDITIONAL do_recruit_cost boolean_equals yes}
                [then]
                    {VARIABLE recruit_cost 0}
                    {VARIABLE recruit_count 0}
                    # Get Leader cost
                    [store_unit_type]
                        type=$boss_type
                        variable=recruit_store
                        mode=always_clear
                    [/store_unit_type]

                    [foreach]
                        array=recruit_store
                        [do]
                            {VARIABLE_OP recruit_cost add $this_item.cost}
                            {VARIABLE_OP recruit_count add 1}
                        [/do]
                    [/foreach]
                    {CLEAR_VARIABLE recruit_store}

                    # Get Recruit cost
                    [store_unit_type]
                        type=$rnd_recruit
                        variable=recruit_store
                        mode=always_clear
                    [/store_unit_type]
                    [foreach]
                        array=recruit_store
                        [do]
                            {VARIABLE_OP recruit_cost add $this_item.cost}
                            {VARIABLE_OP recruit_count add 1}
                        [/do]
                    [/foreach]
                    {CLEAR_VARIABLE recruit_store}

                    # Get average recruit cost
                    [if]
                        {VARIABLE_CONDITIONAL recruit_count greater_than 0}
                        [then]
                            {VARIABLE_OP recruit_cost divide $recruit_count}
                            {VARIABLE_OP recruit_cost round floor}
                        [/then]
                    [/if]
                    {VARIABLE_OP recruit_cost multiply $enemy.num_outlaws}

                    [gold]
                        side={SIDE}
                        amount=$recruit_cost
                    [/gold]

                    # Increase gold by 20 per year
                    {VARIABLE quest_cost 20}
                    {VARIABLE_OP quest_cost multiply $wf_vars.year}
                    [gold]
                        side={SIDE}
                        amount=$quest_cost
                    [/gold]

                    {VARIABLE recruit_cost "$($recruit_cost + (20 * ($enemy.num_outlaws/2)))"}
                    [if]
                        {VARIABLE_CONDITIONAL recruit_cost less_than {WF_MIN_GOLD}}
                        [then]
                            {VARIABLE recruit_cost {WF_MIN_GOLD}}
                        [/then]
                    [/if]
                    [gold]
                        side=1
                        amount=$recruit_cost
                    [/gold]
                    {CLEAR_VARIABLE quest_cost}
                    {CLEAR_VARIABLE recruit_cost}
                    {CLEAR_VARIABLE recruit_count}
                [/then]
            [/if]
            {CLEAR_VARIABLE do_recruit_cost}
            # End Recruit Cost }

            {CLEAR_VARIABLE boss_type}

            # Place Gold Chest {
            {VARIABLE do_place_chest {YES_NO_CHEST}}
            [if]
                {VARIABLE_CONDITIONAL do_place_chest boolean_equals yes}
                [then]
                    [store_locations]
                        terrain=!,*^V*,W*^*,M*^*,Q*^*,X*^*,*^Q*,*^X*
                        [and]
                            [not]
                                x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                            [/not]
                        [/and]
                        [and]
                            x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                            radius=5
                        [/and]
                        {NOT_IN_LOC item_xy}
                        [and]
                            [not]
                                [filter]
                                [/filter]
                            [/not]
                        [/and]
                        include_borders=no
                        variable=gold_chest_locations
                    [/store_locations]
                    [if]
                        {VARIABLE_CONDITIONAL gold_chest_locations.length greater_than 0}
                        [then]
                            {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
                            {PLACE_GOLD_CHEST $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
                            {CLEAR_VARIABLE rnd_c}
                        [/then]
                    [/if]

                    {CLEAR_VARIABLE gold_chest_locations}
                [/then]
            [/if]
            {CLEAR_VARIABLE do_place_chest}
            # End Place Gold Chest }

            #{CAPTURE_VILLAGES {SIDE} ${KEEPS}[$rnd_i].x ${KEEPS}[$rnd_i].y 8}

            # Remove keep. Prepare keeps for next side
            [store_locations]
                variable={KEEPS}
                find_in={KEEPS}
                [not]
                    x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                [/not]
            [/store_locations]
            {CLEAR_VARIABLE rnd_i}
        [/then]
    [/if]
#enddef

#define SELECT_FIEF_FACTION
    [if]
        {VARIABLE_CONDITIONAL relations.fief_factions equals ""}
        #[or]
        #    {VARIABLE_CONDITIONAL relations.fief_factions equals $null}
        #[/or]
        [then]
            {VARIABLE relations.fief_factions "Drakes,Knalgans,Loyalists,Rebels,Northerners,Undead,custom_drakes,custom_dwarves,custom_elves,custom_orcs,custom_trolls,custom_undead,custom_wolves,custom_ogres,custom_zombies,custom_loyalists,custom_cotf"}
#ifhave ~add-ons/Wild_Frontiers/custom/umc_subscene.cfg
            {VARIABLE relations.fief_factions "{WF_UMC_SUBSCENE},$relations.fief_factions"}
#endif
        [/then]
    [/if]
    {WF_RAND_CHOICE $relations.fief_factions}
    {VARIABLE rnd_faction $random_choice}
    {CLEAR_VARIABLE random_choice}
    {WF_RAND_JOIN relations.fief_factions}
    {CLEAR_VARIABLE random_choice_arr}
    [switch]
        variable=rnd_faction
        {WF_FACTION_SWITCH}
#ifhave ~add-ons/Wild_Frontiers/custom/umc_subscene.cfg
        {WF_UMC_SUBSCENE_CASE}
#endif
        [else]
            #value=cotf
            {VARIABLE rnd_leader "Bandit,Trapper"}
            {VARIABLE rnd_recruit "Poacher,Thug"}
            {VARIABLE rnd_sound "ambient/birds2.ogg"}
            {VARIABLE rnd_team "Cotf"}
        [/else]
    [/switch]

    {RANDOM_VAR rnd_play $rnd_sound}
    [sound]	# warn the player who is paying attention (and has the sound on)
        name="$rnd_play"
    [/sound]
    {CLEAR_VARIABLE rnd_play,rnd_sound}

    #{WF_RESTATE_CHOICE relations.fief_factions $rnd_faction}
    #{CLEAR_VARIABLE rnd_faction}
#enddef

#define DIRECTION_CONE X1 Y1 X2 Y2 VAR
    [store_relative_direction]
        [source]
            x,y={X1},{Y1}
        [/source]
        [destination]
            x,y={X2},{Y2}
        [/destination]
        mode=1
        variable=direction
    [/store_relative_direction]
    #{VARIABLE direction "n"}
    [if]
        {VARIABLE_CONDITIONAL direction equals "n"}
        [or]
            {VARIABLE_CONDITIONAL direction equals "s"}
        [/or]
        [then]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub 2}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/then]
        [else]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub $farthest_radius}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]

            [while]
                {VARIABLE_CONDITIONAL farthest_radius greater_than 2}
                [do]
                    {VARIABLE_OP farthest_radius sub 1}
                    {VARIABLE_OP nearest_radius add 1}
                    [store_locations]
                        [and]
                            x,y={X1},{Y1}
                            radius=$nearest_radius
                        [/and]
                        include_borders=no
                        variable=src_locations
                    [/store_locations]
                    [store_locations]
                        [and]
                            [and]
                                x,y={X2},{Y2}
                                radius=$farthest_radius
                            [/and]
                            [and]
                                find_in=src_locations
                            [/and]
                        [/and]
                        [or]
                            find_in={VAR}
                        [/or]
                        variable={VAR}
                    [/store_locations]
                [/do]
            [/while]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/else]
    [/if]
    {CLEAR_VARIABLE direction}
    #[foreach]
    #    array={VAR}
    #    [do]
    #        [terrain]
    #            terrain=Rr
    #            [and]
    #                x,y=$this_item.x,$this_item.y
    #            [/and]
    #        [/terrain]
    #    [/do]
    #[/foreach]
#enddef

#define SPAWN_UNITS SIDE TYPES VAR NUM
    {VARIABLE fief_spawn_num {NUM}}
    # Add one more unit per year
    {VARIABLE_OP fief_spawn_num add $wf_vars.year}
    [random_placement]
        num_items=$fief_spawn_num
        variable=random_placement_location
        allow_less=yes
        min_distance=1
        [filter_location]
            find_in={VAR}
            include_borders=no
        [/filter_location]
        [command]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$random_placement_location.x
                y=$random_placement_location.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
                [modifications]
                    # Dragon can't fly over chasms
                    [object]
                        #silent=yes
                        #duration=forever
                        #[filter]
                        #    side={SIDE}
                        #    canrecruit=yes
                        #[/filter]
                        [effect]
                            apply_to=movement_costs
                            replace=yes
                            [movement_costs]
                                unwalkable={UNREACHABLE}
                            [/movement_costs]
                        [/effect]
                    [/object]
                [/modifications]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/command]
    [/random_placement]
    {CLEAR_VARIABLE random_placement_location}
    {CLEAR_VARIABLE fief_spawn_num}
#enddef

#define SPAWN_LOCATION SIDE TYPES VAR
    [foreach]
        array={VAR}
        [do]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$this_item.x
                y=$this_item.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
                [modifications]
                    # Dragon can't fly over chasms
                    [object]
                        #silent=yes
                        #duration=forever
                        #[filter]
                        #    side={SIDE}
                        #    canrecruit=yes
                        #[/filter]
                        [effect]
                            apply_to=movement_costs
                            replace=yes
                            [movement_costs]
                                unwalkable={UNREACHABLE}
                            [/movement_costs]
                        [/effect]
                    [/object]
                [/modifications]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/do]
    [/foreach]
#enddef

#define SPAWN_CIRCLE SIDE TYPES X Y
    [store_locations]
        [not]
            x,y={X},{Y}
        [/not]
        [and]
            x,y={X},{Y}
            radius=1
        [/and]
        variable=circle_locations
    [/store_locations]
    {REPEAT {ON_DIFFICULTY 3 2 1} (
        {VARIABLE clen $circle_locations.length}
        {VARIABLE_OP clen sub 1}
        {CLEAR_VARIABLE circle_locations[$clen]}
        {CLEAR_VARIABLE clen}
    )}
    {SPAWN_LOCATION {SIDE} {TYPES} circle_locations}
    {CLEAR_VARIABLE circle_locations}
#enddef

#define PLACE_HOSTAGE TYPES X Y
    {WF_LOC_ADD item_xy {X} {Y} ()}
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_types
        rand={TYPES}
    [/set_variable]
    [store_unit_type]
        type=$random_types
    [/store_unit_type]
    {CLEAR_VARIABLE random_types}
    {PLACE_IMAGE "$unit_type.image|~RC(magenta>red)" {X} {Y}}
    {PLACE_IMAGE items/cage.png {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [remove_item]
            x,y={X},{Y}
            image="$unit_type.image|~RC(magenta>red)"
        [/remove_item]
        [unit]
            side=1
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            type=$unit_type.id
            role=friend
            x,y={X},{Y}
        [/unit]
        [fire_event]
            name=amla_extra_event
            [primary_unit]
                role=friend
            [/primary_unit]
        [/fire_event]
        [unhide_unit]
        [/unhide_unit]
        [message]
            role=friend
            message=_"About time."
        [/message]
        [message]
            speaker=unit
            message=_"YOU CAN TALK?!"
        [/message]
        [modify_unit]
            [filter]
                role=friend
            [/filter]
            role=""
        [/modify_unit]
        [remove_item]
            x,y={X},{Y}
            image=items/cage.png
        [/remove_item]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE unit_type}
#enddef

#define PLACE_KEEP_CHEST KEEPS YES_NO_GOLD_CHEST
    [if]
        {VARIABLE_CONDITIONAL {KEEPS}.length greater_than 0}
        [then]
            {RANDOM_VAR rnd_i 0.."$(${KEEPS}.length-1)"}
            [store_locations]
                terrain=!,*^V*,W*^*,M*^*,Q*^*,X*^*,*^Q*,*^X*
                [and]
                    [not]
                        x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                    [/not]
                [/and]
                [and]
                    x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                    radius=5
                [/and]
                {NOT_IN_LOC item_xy}
                [and]
                    [not]
                        [filter]
                        [/filter]
                    [/not]
                [/and]
                include_borders=no
                variable=gold_chest_locations
            [/store_locations]
            [if]
                {VARIABLE_CONDITIONAL gold_chest_locations.length greater_than 0}
                [then]
                    {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
                    {VARIABLE do_gold_chest {YES_NO_GOLD_CHEST}}
                    [if]
                        {VARIABLE_CONDITIONAL do_gold_chest boolean_equals yes}
                        [then]
                            {PLACE_GOLD_CHEST $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
                        [/then]
                        [else]
                            {PLACE_WOOD_CHEST $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
                        [/else]
                    [/if]
                    {CLEAR_VARIABLE do_gold_chest}
                    {CLEAR_VARIABLE rnd_c}
                [/then]
            [/if]

            {CLEAR_VARIABLE gold_chest_locations}
            {CLEAR_VARIABLE rnd_i}
        [/then]
    [/if]
#enddef

#define PLACE_CHEST X Y AMOUNT CLOSED OPEN
    {WF_LOC_ADD item_xy {X} {Y} ()}
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_gold
        rand={AMOUNT}
    [/set_variable]
    {PLACE_IMAGE (items/{CLOSED}.png) {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [sound]
            name=open-chest.wav
        [/sound]
        [remove_item]
            x,y={X},{Y}
            image=items/{CLOSED}.png
        [/remove_item]
        {PLACE_IMAGE (items/{OPEN}.png) {X} {Y}}
        [floating_text]
            x,y={X},{Y}
            text= "<span color='#cccc33'>$random_gold|</span>"
        [/floating_text]
        [delay]
            time=400
        [/delay]
        [wf_gold]
            side=1
            amount=0
            reset=yes
        [/wf_gold]
        [gold]
            side=1
            amount=$random_gold
        [/gold]
        [sound]
            name=gold.ogg
        [/sound]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE random_gold}
#enddef

#define PLACE_GOLD_CHEST X Y
    {PLACE_CHEST {X} {Y} (40..50) (chest) (chest-open)}
#enddef

#define PLACE_WOOD_CHEST X Y
    {PLACE_CHEST {X} {Y} (30..40) (chest-plain-closed) (chest-plain-open)}
#enddef

#define PLACE_GOLD_PILE X Y
    {WF_LOC_ADD item_xy {X} {Y} ()}
    #{VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_gold
        rand=30..40
    [/set_variable]
    {PLACE_IMAGE (items/gold-coins-small.png) {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [remove_item]
            x,y={X},{Y}
            image=items/gold-coins-small.png
        [/remove_item]
        [floating_text]
            x,y={X},{Y}
            text= "<span color='#cccc33'>$random_gold|</span>"
        [/floating_text]
        [delay]
            time=400
        [/delay]
        [wf_gold]
            side=1
            amount=0
            reset=yes
        [/wf_gold]
        [gold]
            side=1
            amount=$random_gold
        [/gold]
        [sound]
            name=gold.ogg
        [/sound]
        #{VARIABLE_OP objective_goal sub 1}
        #[fire_event]
        #    name=check_objectives
        #[/fire_event]
    [/event]
    {CLEAR_VARIABLE random_gold}
#enddef

#define PLACE_GOLD_PILE_ANYWHERE
    [store_locations]
        terrain=!,*^V*,W*^*,M*^*,Q*^*,X*^*,*^Q*,*^X*
        {NOT_IN_LOC item_xy}
        [and]
            [not]
                [filter]
                [/filter]
            [/not]
        [/and]
        include_borders=no
        variable=gold_chest_locations
    [/store_locations]
    [if]
        {VARIABLE_CONDITIONAL gold_chest_locations.length greater_than 0}
        [then]
            {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
            {PLACE_GOLD_PILE $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
            {CLEAR_VARIABLE rnd_c}
        [/then]
    [/if]
    {CLEAR_VARIABLE gold_chest_locations}
#enddef

#define SETUP_NEXT_URM
#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
    [if]
        {VARIABLE_CONDITIONAL wf_maps equals $null}
        [or]
            {VARIABLE_CONDITIONAL wf_maps equals ""}
        [/or]
        [then]
            {VARIABLE wf_maps "Archipelago,Barren,Cave,Citadel,Desert,Flood,Forest,Frozen,Island,Jungle,Lava,Marsh,Mountains,Ocean,River,Vale,Volcano,Wastes,Winter"}
        [/then]
    [/if]
    {WF_RAND_CHOICE $wf_maps}
    {VARIABLE quota.next_urm $random_choice}
    {CLEAR_VARIABLE random_choice}
    {WF_RAND_JOIN wf_maps}
    {CLEAR_VARIABLE random_choice_arr}
#endif
#enddef

#define CHAIN_VICTORY
    {CLEAR_VARIABLE objective_goal}

    {ASSIGN_VAR_IF_NULL chain_quest no}
    {ASSIGN_VAR_IF_NULL cave_quest no}
    {ASSIGN_VAR_IF_NULL fief_quest 0}
    {VARIABLE_OP fief_quest add 1}

    {VARIABLE append_hero no}
    [if]
        {VARIABLE_CONDITIONAL chain_quest boolean_equals yes}
        [then]
            [if]
                {VARIABLE_CONDITIONAL cave_quest boolean_equals yes}
                [then]
                    {VARIABLE rnd_fief "Hidden_Cave"}
                [/then]
                [else]
                    {VARIABLE rnd_fief "Underground"}
                    [if]
                        {VARIABLE_CONDITIONAL wf_vars.season_str equals "summer"}
                        [then]
                            {VARIABLE rnd_fief "$rnd_fief,Fief_Uprising"}
                            {VARIABLE rnd_fief "$rnd_fief,Spring_Guardians"}
                            {VARIABLE rnd_fief "$rnd_fief,Spring_Guardians"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Spring"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Spring"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Spring"}
                        [/then]
                    [/if]
                    [if]
                        {VARIABLE_CONDITIONAL wf_vars.season_str equals "autumn"}
                        [then]
                            {VARIABLE rnd_fief "$rnd_fief,Fief_Fall"}
                            {VARIABLE rnd_fief "$rnd_fief,Fall_Guardians"}
                            {VARIABLE rnd_fief "$rnd_fief,Fall_Guardians"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Fall"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Fall"}
                            {VARIABLE rnd_fief "$rnd_fief,Raid_Fall"}
                        [/then]
                    [/if]
                    {RANDOM_VAR rnd_fief $rnd_fief}
                [/else]
            [/if]
        [/then]
        [else]
            # Go back home
            {VARIABLE append_hero yes}
            {VARIABLE rnd_fief $wf_vars.next_scenario}
            {CLEAR_VARIABLE fief_quest}
        [/else]
    [/if]

    {CLEAR_VARIABLE chain_quest}
    {CLEAR_VARIABLE cave_quest}

    [fire_event]
        name=chain_victory_debug
    [/fire_event]

    [event]
        name=chain_victory
        id=chain_victory
        first_time_only=yes
        delayed_variable_substitution=no

        [endlevel]
            result=victory
            {WF_CARRYOVER}
            linger_mode=no
            next_scenario=$rnd_fief
        [/endlevel]
    [/event]
    {CLEAR_VARIABLE rnd_fief}

    [fire_event]
        name=wf_victory
    [/fire_event]

    [fire_event]
        name=chain_victory
    [/fire_event]
#enddef

#define WF_TRUNCATE_CASTLE
    # Truncate enemy castle
    [set_variables]
        name=adj_arr
        mode=replace
        #adjacent="n,ne,se,s,sw,nw"
        [value]
            adjacent=n,sw,se
        [/value]
        [value]
            adjacent=s,nw,ne
        [/value]
        #[value]
        #    adjacent=n,nw,ne
        #[/value]
        #[value]
        #    adjacent=s,sw,se
        #[/value]
        #[value]
        #    adjacent=n,ne,se
        #[/value]
        #[value]
        #    adjacent=n,nw,sw
        #[/value]
        #[value]
        #    adjacent=s,se,ne
        #[/value]
        #[value]
        #    adjacent=s,sw,nw
        #[/value]
    [/set_variables]
    {RANDOM_VAR rnd_adj 0.."$($adj_arr.length-1)"}

    [store_locations]
        [and]
            terrain=K*
        [/and]
        variable=castle_terrain
        mode=always_clear
    [/store_locations]

    [foreach]
        array=castle_terrain
        [do]
            [terrain]
                terrain=Rp
                [and]
                    [filter_adjacent_location]
                        x=$this_item.x
                        y=$this_item.y
                        terrain=K*
                        adjacent=$adj_arr[$rnd_adj].adjacent
                        [filter]
                            [filter_side]
                                [enemy_of]
                                    side=1
                                [/enemy_of]
                            [/filter_side]
                        [/filter]
                    [/filter_adjacent_location]
                [/and]
            [/terrain]
        [/do]
    [/foreach]
    {CLEAR_VARIABLE castle_terrain}
    {CLEAR_VARIABLE adj_arr}
    {CLEAR_VARIABLE rnd_adj}
#enddef

#define VICTORY_MESSAGE
    [event]
        name=victory_message

        [message]
            speaker=Hero
            message= _ "I'm done here. Let's move on."
        [/message]
    [/event]
#enddef

#define DEFEAT_MESSAGE
    [event]
        name=defeat_message

        [message]
            speaker=Hero
            message= _ "Oh, crap..."
        [/message]
    [/event]
#enddef

#define TIME_OVER_MESSAGE
    [event]
        name=time_over_message

        [message]
            speaker=Hero
            message= _ "Too late..."
        [/message]
    [/event]
#enddef
