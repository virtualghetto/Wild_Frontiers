#textdomain wesnoth-Wild_Frontiers

#define FIEF_GOLD_REWARD
    [set_variable]
        name=random_gold
        rand=75..100
    [/set_variable]
    [gold]
        side=1
        amount=$random_gold
    [/gold]
    [sound]
        name="gold.ogg"
    [/sound]
    {CLEAR_VARIABLE random_gold}
#enddef

#define KILL_LEADERS_OBJECTIVES
    [store_unit]
        [filter]
            canrecruit=yes
            [filter_side]
                [enemy_of]
                    side=1
                [/enemy_of]
            [/filter_side]
        [/filter]
        variable=store_enemies
    [/store_unit]

    [foreach]
        array=store_enemies
        [do]
            [if]
                {VARIABLE_CONDITIONAL this_item.name equals ""}
                [then]
                    {VARIABLE this_item.name "Nameless"}
                [/then]
            [/if]
            [set_variables]
                name=objective_arr
                mode=append
                [value]
                    condition=win
                    description= _ "Defeat enemy leader: $this_item.name|."
                    [show_if]
                        [have_unit]
                            id=$this_item.id
                        [/have_unit]
                    [/show_if]
                [/value]
            [/set_variables]
        [/do]
    [/foreach]

    [objectives]
        side=1
        [insert_tag]
            name=objective
            variable=objective_arr
        [/insert_tag]
        [objective]
            description= _ "Kill all enemy units"
            condition=win
        [/objective]
        [objective]
            description= _ "Loot the chest"
            condition=win
        [/objective]
        [objective]
            description= _ "Death of Hero"
            condition=lose
        [/objective]

        {TURNS_RUN_OUT}

        [gold_carryover]
            bonus=no
            carryover_percentage=100
        [/gold_carryover]
    [/objectives]
    {CLEAR_VARIABLE store_enemies}
    {CLEAR_VARIABLE objective_arr}
#enddef

#define FIEF_UNIT TYPE
    #[store_map_dimensions]
    #    variable=store_map_dim
    #[/store_map_dimensions]
    [set_variable]
        name=random_type
        rand={TYPE}
    [/set_variable]
    [if]
        [have_unit]
            side=1
            role="Fief $random_type"
            x,y=recall,recall
            #[not]
            #    x=1-$store_map_dim.width
            #    y=1-$store_map_dim.height
            #[/not]
            search_recall_list=yes
        [/have_unit]
        [then]
            [recall]
                side=1
                role="Fief $random_type"
                check_passability=yes
            [/recall]
        [/then]
        [else]
            [role]
                role="Fief $random_type"
                [auto_recall][/auto_recall]
                search_recall_list=only

                side=1
                [and]
                    role="Fief $random_type"
                [/and]

                [else]
                    [unit]
                        animate=yes
                        passable=yes
                        placement=leader
                        random_traits=yes
                        side=1
                        type=$random_type
                        role="Fief $random_type"
                        [modifications]
                            {TRAIT_LOYAL}
                        [/modifications]
                        {IS_LOYAL}
                    [/unit]
                [/else]
            [/role]
        [/else]
    [/if]
    {CLEAR_VARIABLE random_type}
    #{CLEAR_VARIABLE store_map_dim}
#enddef

#define SHARED_GUARDIAN_EVENTS
    [event]
        name=prestart

        {VARIABLE quota.outlaws 1} # Needed for victory

        # Side 1 stuff
        [modify_side]
            side=1
            income=0
        [/modify_side]

        # Side gold
        [store_gold]
            side=1
            variable=stash_gold
        [/store_gold]
        {VARIABLE_OP stash_gold multiply -1}
        [gold]
            side=1
            amount=$stash_gold
        [/gold]
        {VARIABLE_OP stash_gold multiply -1}

        # Unstore the hero
        [store_starting_location]
            side=1
            variable=starting_one
        [/store_starting_location]

        [unstore_unit]
            variable=old_hero_store
            x,y=$starting_one.x,$starting_one.y
        [/unstore_unit]

        #{CAPTURE_VILLAGES 1 $starting_one.x $starting_one.y 5}
        {CLEAR_VARIABLE starting_one}

        # Enemy sides stuff
        # Side 2
        {SELECT_FIEF_FACTION}

        [modify_side]
            side=2
            hidden=no
            recruit=$recruit_type
            user_team_name=$rnd_team
        [/modify_side]

        [store_starting_location]
            side=1
            variable=side1_location
        [/store_starting_location]
        [store_starting_location]
            side=2
            variable=side2_location
        [/store_starting_location]

        {DIRECTION_CONE $side1_location.x $side1_location.y $side2_location.x $side2_location.y side2_locations}
        {SPAWN_UNITS 2 $recruit_type side2_locations {ON_DIFFICULTY 6 7 8}}
        {CLEAR_VARIABLE side2_locations}
        {SPAWN_CIRCLE 2 $leader_type $side2_location.x $side2_location.y}
        {CLEAR_VARIABLE leader_type}
        {CLEAR_VARIABLE recruit_type}
        {CLEAR_VARIABLE rnd_team}

        {PLACE_HOSTAGE {ANIMALS_HOSTAGE_LIST} $side2_location.x $side2_location.y}
        # Place Gold Chest {
        #[store_locations]
        #    terrain=!,W*^*,M*^*,Q*^*,X*^*
        #    [and]
        #        [not]
        #            x,y=$side2_location.x,$side2_location.y
        #        [/not]
        #    [/and]
        #    [and]
        #        x,y=$side2_location.x,$side2_location.y
        #        radius=5
        #    [/and]
        #    [and]
        #        [not]
        #            [filter]
        #            [/filter]
        #        [/not]
        #    [/and]
        #    include_borders=no
        #    variable=side2_locations
        #[/store_locations]
        #{RANDOM_VAR rnd_i 0.."$($side2_locations.length-1)"}
        #[if]
        #    {VARIABLE_CONDITIONAL rnd_i less_than 0}
        #    [then]
        #        [store_locations]
        #            terrain=!,W*^*,M*^*,Q*^*,X*^*
        #            [and]
        #                [not]
        #                    x,y=$side2_location.x,$side2_location.y
        #                [/not]
        #            [/and]
        #            [and]
        #                [not]
        #                    [filter]
        #                    [/filter]
        #                [/not]
        #            [/and]
        #            include_borders=no
        #            variable=side2_locations
        #        [/store_locations]
        #        {RANDOM_VAR rnd_i 0.."$($side2_locations.length-1)"}
        #    [/then]
        #[/if]
        #{PLACE_GOLD_CHEST $side2_locations[$rnd_i].x $side2_locations[$rnd_i].y}
        #{CLEAR_VARIABLE rnd_i}
        #{CLEAR_VARIABLE side2_locations}
        # End Place Gold Chest }
        {CLEAR_VARIABLE side1_location}
        {CLEAR_VARIABLE side2_location}

        {VARIABLE recruit_cost 0}
        {VARIABLE recruit_count 0}
        [store_unit]
            [filter]
                side=2
            [/filter]
            variable=enemy_units
            mode=always_clear
            kill=no
        [/store_unit]

        [foreach]
            array=enemy_units
            [do]
                [store_unit_type]
                    type=$this_item.type
                    variable=recruit_store
                    mode=always_clear
                [/store_unit_type]
                {VARIABLE_OP recruit_cost add $recruit_store.cost}
                {VARIABLE_OP recruit_count add 1}
                {CLEAR_VARIABLE recruit_store}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE enemy_units}
        # Get average recruit cost
        [if]
            {VARIABLE_CONDITIONAL recruit_count greater_than 0}
            [then]
                {VARIABLE_OP recruit_cost divide $recruit_count}
                {VARIABLE_OP recruit_cost round floor}
            [/then]
        [/if]
        {VARIABLE_OP recruit_cost multiply $enemy.num_outlaws}
        [gold]
            side=1
            amount="$($recruit_cost + (20 * ($enemy.num_outlaws/2)))"
        [/gold]
        {CLEAR_VARIABLE recruit_cost}
        {CLEAR_VARIABLE recruit_count}
    [/event]

    [event]
        name=time over
        [message]
            speaker=Hero
            message= _ "Aaah! They have unleashed the wild beast upon us!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=start

        [store_starting_location]
            side=2
            variable=side2_location
        [/store_starting_location]

        # Remove the enemy keep
        [terrain]
            terrain=Rb
            [and]
                x,y=$side2_location.x,$side2_location.y
                radius=1
            [/and]
        [/terrain]
        {CLEAR_VARIABLE side2_location}

        {FIEF_UNIT (Elvish Fighter,Elvish Archer,Elvish Scout)}

#ifdef EASY
        {FIEF_UNIT (Elvish Archer)}
        {FIEF_UNIT (Elvish Scout)}
        {FIEF_UNIT (Elvish Fighter)}
#endif

        [unhide_unit]
        [/unhide_unit]

        [message]
            side=1
            [not]
                id=Hero
            [/not]
            message=_"These criminals want to unleash some wild beast on us."
        [/message]

        [message]
            id=Hero
            message=_"Lay down your arms and hand over the beast."
        [/message]

        [message]
            side=2
            message=_"Never!"
        [/message]

        [objectives]
            side=1
            [objective]
                description= _ "Kill all enemy units"
                condition=win
            [/objective]
            [objective]
                description= _ "Free the wild beast"
                condition=win
            [/objective]
            #[objective]
            #    description= _ "Loot the chest"
            #    condition=win
            #[/objective]
            [objective]
                description= _ "Death of Hero"
                condition=lose
            [/objective]

            {TURNS_RUN_OUT}

            [gold_carryover]
                bonus=no
                carryover_percentage=100
            [/gold_carryover]
        [/objectives]
        {CLEAR_VARIABLE store_enemies}
        {CLEAR_VARIABLE objective_arr}
    [/event]
#enddef

#define SHARED_TREK_EVENTS
    [event]
        name=prestart

        {VARIABLE quota.outlaws 1} # Needed for victory

        # Side 1 stuff
        [modify_side]
            side=1
            income=0
        [/modify_side]

        # Side gold
        [store_gold]
            side=1
            variable=stash_gold
        [/store_gold]
        {VARIABLE_OP stash_gold multiply -1}
        [gold]
            side=1
            amount=$stash_gold
        [/gold]
        {VARIABLE_OP stash_gold multiply -1}

        # Remove all keeps
        [terrain]
            terrain=Gg
            [and]
                terrain=K*^*,C*^*
            [/and]
        [/terrain]

        [store_map_dimensions]
            variable=store_map_dim
        [/store_map_dimensions]

        [if]
            {VARIABLE_CONDITIONAL store_map_dim.width less_than $store_map_dim.height}
            [then]
                #Vertical map
                [set_variable]
                    name=axis
                    ipart="$($store_map_dim.width/2.0)"
                [/set_variable]

                # Down-Up
                {RANDOM_VAR rnd_dir "0,1"}
                [switch]
                    variable=rnd_dir
                    [case]
                        value=0
                        # Starting down, going up.
                        [store_locations]
                            [and]
                                x=$axis
                                y="$($store_map_dim.height-1)"
                            [/and]
                            variable=side1_location
                        [/store_locations]
                        [store_locations]
                            [and]
                                x=$axis
                                y=1
                            [/and]
                            variable=side2_location
                        [/store_locations]
                    [/case]
                    [case]
                        value=1
                        # Starting up, going down.
                        [store_locations]
                            [and]
                                x=$axis
                                y=2
                            [/and]
                            variable=side1_location
                        [/store_locations]
                        [store_locations]
                            [and]
                                x=$axis
                                y="$($store_map_dim.height-0)"
                            [/and]
                            variable=side2_location
                        [/store_locations]
                    [/case]
                [/switch]
                {CLEAR_VARIABLE rnd_dir}

                [store_locations]
                    terrain=!,W*^*,M*^*,Q*^*,X*^*
                    [and]
                        x=$axis
                        y=1-$store_map_dim.height
                        radius=3
                    [/and]
                    [and]
                        [not]
                            x,y=$side1_location.x,$side1_location.y
                            radius=4
                        [/not]
                    [/and]
                    [and]
                        [not]
                            x,y=$side2_location.x,$side2_location.y
                            radius=1
                        [/not]
                    [/and]
                    [and]
                        [not]
                            [filter]
                            [/filter]
                        [/not]
                    [/and]
                    include_borders=no
                    variable=side2_locations
                [/store_locations]
                {CLEAR_VARIABLE axis}
            [/then]
            [else]
                #Horizontal map
                [set_variable]
                    name=axis
                    ipart="$($store_map_dim.height/2.0)"
                [/set_variable]
                # Left-Right
                {RANDOM_VAR rnd_dir "0,1"}
                [switch]
                    variable=rnd_dir
                    [case]
                        value=0
                        # Starting left, going right.
                        [store_locations]
                            [and]
                                x=2
                                y=$axis
                            [/and]
                            variable=side1_location
                        [/store_locations]
                        [store_locations]
                            [and]
                                x="$($store_map_dim.width-0)"
                                y=$axis
                            [/and]
                            variable=side2_location
                        [/store_locations]
                    [/case]
                    [case]
                        value=1
                        # Starting right, going left.
                        [store_locations]
                            [and]
                                x="$($store_map_dim.width-1)"
                                y=$axis
                            [/and]
                            variable=side1_location
                        [/store_locations]
                        [store_locations]
                            [and]
                                x=1
                                y=$axis
                            [/and]
                            variable=side2_location
                        [/store_locations]
                    [/case]
                [/switch]
                {CLEAR_VARIABLE rnd_dir}
                [store_locations]
                    terrain=!,W*^*,M*^*,Q*^*,X*^*
                    [and]
                        x=1-$store_map_dim.width
                        y=$axis
                        radius=3
                    [/and]
                    [and]
                        [not]
                            x,y=$side1_location.x,$side1_location.y
                            radius=4
                        [/not]
                    [/and]
                    [and]
                        [not]
                            x,y=$side2_location.x,$side2_location.y
                            radius=1
                        [/not]
                    [/and]
                    [and]
                        [not]
                            [filter]
                            [/filter]
                        [/not]
                    [/and]
                    include_borders=no
                    variable=side2_locations
                [/store_locations]
                {CLEAR_VARIABLE axis}
            [/else]
        [/if]
        {CLEAR_VARIABLE store_map_dim}

        # Clear important areas
        [terrain]
            terrain=Gg
            [and]
                x,y=$side1_location.x $side1_location.y
                radius=2
            [/and]
        [/terrain]

        [terrain]
            terrain=Gg
            [and]
                x,y=$side2_location.x $side2_location.y
                radius=2
            [/and]
        [/terrain]

        {PLACE_IMAGE "scenery/signpost.png" $side2_location.x $side2_location.y}
        {MODIFY_TERRAIN Ker $side1_location.x $side1_location.y}
        [terrain]
            terrain=Cer
            [and]
                [not]
                    terrain=C*
                [/not]
                [filter_adjacent_location]
                    terrain=K*
                [/filter_adjacent_location]
            [/and]
        [/terrain]
        # Unstore the hero
        [unstore_unit]
            variable=old_hero_store
            x,y=$side1_location.x,$side1_location.y
        [/unstore_unit]

        #{CAPTURE_VILLAGES 1 $side1_location.x $side1_location.y 5}

        # Enemy sides stuff
        # Side 2
        {SELECT_FIEF_FACTION}

        [modify_side]
            side=2
            hidden=no
            recruit=$recruit_type
            user_team_name=$rnd_team
        [/modify_side]

        {SPAWN_UNITS 2 $recruit_type side2_locations {ON_DIFFICULTY 9 10 11}}
        {CLEAR_VARIABLE side2_locations}
        {CLEAR_VARIABLE leader_type}
        {CLEAR_VARIABLE recruit_type}
        {CLEAR_VARIABLE rnd_team}

        [store_locations]
            terrain=!,W*^*,M*^*,Q*^*,X*^*
            [and]
                x,y=$side2_location.x,$side2_location.y
                radius=2
            [/and]
            [and]
                [not]
                    x,y=$side2_location.x,$side2_location.y
                [/not]
            [/and]
            include_borders=no
            variable=gold_chest_locations
        [/store_locations]
        {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
        {PLACE_GOLD_CHEST $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
        {CLEAR_VARIABLE rnd_c}
        {CLEAR_VARIABLE gold_chest_locations}

        {VARIABLE recruit_cost 0}
        {VARIABLE recruit_count 0}
        [store_unit]
            [filter]
                side=2
            [/filter]
            variable=enemy_units
            mode=always_clear
            kill=no
        [/store_unit]

        [foreach]
            array=enemy_units
            [do]
                [store_unit_type]
                    type=$this_item.type
                    variable=recruit_store
                    mode=always_clear
                [/store_unit_type]
                {VARIABLE_OP recruit_cost add $recruit_store.cost}
                {VARIABLE_OP recruit_count add 1}
                {CLEAR_VARIABLE recruit_store}
            [/do]
        [/foreach]
        {CLEAR_VARIABLE enemy_units}
        # Get average recruit cost
        [if]
            {VARIABLE_CONDITIONAL recruit_count greater_than 0}
            [then]
                {VARIABLE_OP recruit_cost divide $recruit_count}
                {VARIABLE_OP recruit_cost round floor}
            [/then]
        [/if]
        {VARIABLE_OP recruit_cost multiply $enemy.num_outlaws}
        [gold]
            side=1
            amount="$($recruit_cost + (20 * ($enemy.num_outlaws/2)))"
        [/gold]
        {CLEAR_VARIABLE recruit_cost}
        {CLEAR_VARIABLE recruit_count}

        {VARIABLE_OP objective_goal add 1}
        [event]
            name=moveto
            first_time_only=yes
            delayed_variable_substitution=no

            [filter]
                side=1
                id=Hero
                [filter_location]
                    x,y=$side2_location.x,$side2_location.y
                [/filter_location]
            [/filter]
            {VARIABLE_OP objective_goal sub 1}
            [fire_event]
                name=check_objectives
            [/fire_event]
        [/event]
        {CLEAR_VARIABLE side1_location}
        {CLEAR_VARIABLE side2_location}
    [/event]

    [event]
        name=time over
        [message]
            speaker=Hero
            message= _ "Aaah! They are descending on us from all sides!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=start

        {FIEF_UNIT (Elvish Fighter,Elvish Archer,Elvish Scout)}

#ifdef EASY
        {FIEF_UNIT (Elvish Archer)}
        {FIEF_UNIT (Elvish Scout)}
        {FIEF_UNIT (Elvish Fighter)}
#endif

        [unhide_unit]
        [/unhide_unit]

        [message]
            side=1
            [not]
                id=Hero
            [/not]
            message=_"Careful me lord. This road is trecherous."
        [/message]

        [objectives]
            side=1
            [objective]
                description= _ "Kill all enemy units"
                condition=win
            [/objective]
            [objective]
                description= _ "Hero must reach the signpost"
                condition=win
            [/objective]
            [objective]
                description= _ "Loot the chest"
                condition=win
            [/objective]
            [objective]
                description= _ "Death of Hero"
                condition=lose
            [/objective]

            {TURNS_RUN_OUT}

            [gold_carryover]
                bonus=no
                carryover_percentage=100
            [/gold_carryover]
        [/objectives]
        {CLEAR_VARIABLE store_enemies}
        {CLEAR_VARIABLE objective_arr}
    [/event]
#enddef

#define SHARED_FIEF_EVENTS
    [event]
        name=recruit
        first_time_only=no
        [filter]
            [not]
                side=1
            [/not]
        [/filter]

        [object]
            #silent=yes
            #duration=forever
            #[filter]
            #    side={SIDE}
            #    canrecruit=yes
            #[/filter]
            [effect]
                apply_to=movement_costs
                replace=yes
                [movement_costs]
                    unwalkable={UNREACHABLE}
                [/movement_costs]
            [/effect]
        [/object]

#ifdef EASY
        {RANDOM_VAR autoadv (no,no,no,no,no,no,no,no,no,no,no,no,no,no,no,no,no,no,no,yes)}
#endif
#ifdef NORMAL
        {RANDOM_VAR autoadv (no,no,no,no,no,no,no,no,no,yes)}
#endif
#ifdef HARD
        {RANDOM_VAR autoadv (no,no,no,no,yes)}
#endif
        [if]
            [and]
                {VARIABLE_CONDITIONAL autoadv boolean_equals yes}
                {VARIABLE_CONDITIONAL unit.level less_than 2}
                {VARIABLE_CONDITIONAL wf_vars.season greater_than_equal_to 4}
            [/and]
            [then]
                [modify_unit]
                    [filter]
                        id=$unit.id
                    [/filter]
                    experience = "$($this_unit.max_experience)"
                [/modify_unit]
            [/then]
        [/if]
        {CLEAR_VARIABLE autoadv}
    [/event]
#enddef

#define SHARED_SUB_EVENTS
    {WF_RAND_CHOICE_EVENT}
    {ALLOW_SUBSCENE_PROJECTS}

    [event]
        name=die,check_objectives,turn end,enemies defeated
        first_time_only=no

        [if]
            [not]
                [have_unit]
                    [filter_side]
                        [enemy_of]
                            side=1
                        [/enemy_of]
                    [/filter_side]
                [/have_unit]
            [/not]
            [and]
                {VARIABLE_CONDITIONAL objective_goal numerical_equals 0}
            [/and]
            [then]
                #{FIEF_GOLD_REWARD}

                [message]
                    speaker=Hero
                    message= _ "We are done here. Let's move on."
                [/message]

                {CHAIN_VICTORY}
            [/then]
        [/if]
    [/event]

    [event]
        name=last breath
        [filter]
            id=Hero
        [/filter]
        [message]
            speaker=Hero
            message= _ "Oh, crap..."
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]

    [event]
        name=wf_victory

        [fire_event]
            name=stop_sub_projects
        [/fire_event]

        # restore gold
        [gold]
            side=1
            amount=$stash_gold
        [/gold]
        {CLEAR_VARIABLE stash_gold}

        # heal/unpoison side 1
        [heal_unit]
            [filter]
                side=1
            [/filter]
            amount=full
            moves=full
            restore_attacks=yes
            restore_statuses=yes
            animate=no
        [/heal_unit]
        [clear_variable]
            name=heal_amount
        [/clear_variable]

        {VARIABLE hero_x $old_hero_store.x}
        {VARIABLE hero_y $old_hero_store.y}

        # So not to lose the original recall list
        [modify_side]
            side=1
            defeat_condition=never
        [/modify_side]

        # Save the upgraded hero
        [store_unit]
            variable=old_hero_store
            mode=always_clear
            kill=no
            [filter]
                id=Hero
            [/filter]
        [/store_unit]
        {VARIABLE old_hero_store.x $hero_x}
        {VARIABLE old_hero_store.y $hero_y}
        #{CLEAR_VARIABLE old_hero_store.status.poisoned}
        #{CLEAR_VARIABLE old_hero_store.status.slowed}
        #{CLEAR_VARIABLE old_hero_store.status.uncovered}
        {CLEAR_VARIABLE hero_x}
        {CLEAR_VARIABLE hero_y}

        [if]
            {VARIABLE_CONDITIONAL append_hero boolean_equals no}
            [then]
                # Going to another sub-scenario

                # Save the recruited units
                [store_unit]
                    variable=crew_store
                    mode=always_clear
                    kill=yes # otherwise they will also appear on recall list
                    [filter]
                        side=1
                        [not]
                            id=Hero
                        [/not]
                    [/filter]
                [/store_unit]
                [for]
                    array=crew_store
                    reverse=yes
                    [do]
                        {VARIABLE crew_store[$i].x recall}
                        {VARIABLE crew_store[$i].y recall}
                        #{CLEAR_VARIABLE crew_store[$i].status.poisoned}
                        #{CLEAR_VARIABLE crew_store[$i].status.slowed}
                        #{CLEAR_VARIABLE crew_store[$i].status.uncovered}
                        [unstore_unit]
                            variable=crew_store[$i]
                            x,y=recall,recall
                        [/unstore_unit]
                    [/do]
                [/for]

                {CLEAR_VARIABLE crew_store}
                # Remove hero so he won't get added to the recall list
                [kill]
                    id=Hero
                    animate=no
                    fire_event=no
                [/kill]
            [/then]
            [else]
                # Going back to the main map

                # Save the recruited units
                [store_unit]
                    variable=crew_store
                    mode=always_clear
                    kill=yes # otherwise they will also appear on recall list
                    [filter]
                        side=1
                        [not]
                            id=Hero
                        [/not]
                    [/filter]
                [/store_unit]
                [for]
                    array=crew_store
                    reverse=yes
                    [do]
                        {VARIABLE crew_store[$i].x recall}
                        {VARIABLE crew_store[$i].y recall}
                        #{CLEAR_VARIABLE crew_store[$i].status.poisoned}
                        #{CLEAR_VARIABLE crew_store[$i].status.slowed}
                        #{CLEAR_VARIABLE crew_store[$i].status.uncovered}
                        [set_variables]
                            name=unit_store
                            mode=append
                            to_variable=crew_store[$i]
                        [/set_variables]
                    [/do]
                [/for]

                {CLEAR_VARIABLE crew_store}

                # Remove hero so he won't get added to the recall list
                [kill]
                    id=Hero
                    animate=no
                    fire_event=no
                [/kill]
                # Append new hero to original map units
                [set_variables]
                    name=unit_store
                    mode=append
                    to_variable=old_hero_store
                [/set_variables]

                {CLEAR_VARIABLE old_hero_store}
            [/else]
        [/if]
        {CLEAR_VARIABLE append_hero}

        {CLEAR_VARIABLE quota}
        {CLEAR_VARIABLE uncovered_woses}
        [clear_menu_item]
            id=eat_mushrooms
        [/clear_menu_item]
    [/event]

    [event]
        # Event added just in case of :n in debug mode.
        name=victory

        # This variable gets cleared in wf_victory.
        # This way we know if this victory was fired because of :n
        [if]
            {VARIABLE_CONDITIONAL quota.outlaws not_equals $null}
            [then]
                {NARRATOR_SAYS _"Debug mode :n"}
                {VARIABLE append_hero yes}
                [fire_event]
                    name=wf_victory
                [/fire_event]
                [endlevel]
                    result=victory
                    bonus=no
                    carryover_percentage=100
                    linger_mode=no
                    next_scenario=$wf_vars.next_scenario
                [/endlevel]
            [/then]
        [/if]
    [/event]

    [event]
        name=last breath
        id=enemy_cost
        first_time_only=no

        [gold]
            side=$second_unit.side
            amount="$(floor($unit.cost * 13 / 100.0))"
        [/gold]
    [/event]

    {AMLA_EXTRA}
    {HEAL_RECALL}
    [event]
        name=prestart
        # ----- Eat mushrooms Sub-scenario -----
        [set_menu_item]
            id=eat_mushrooms
            description=_ "Eat mushrooms"
            [show_if]
                [have_unit]
                    side=1
                    x,y=$x1,$y1
                [/have_unit]
                [have_location]
                    x,y=$x1,$y1
                    terrain=*^Em
                [/have_location]
            [/show_if]
            [command]
                [sound]
                    name=dagger-swish.wav
                [/sound]
                [terrain]
                    terrain=^
                    layer=overlay
                    [and]
                        terrain=*^Em
                        x,y=$x1,$y1
                    [/and]
                [/terrain]
                [if]
                    {VARIABLE_CONDITIONAL wf_vars.fungi_book greater_than 0}
                    [then]
                        [heal_unit]
                            [filter]
                                side=1
                                x,y=$x1,$y1
                            [/filter]
                            animate=yes
                            moves=full
                            restore_attacks=yes
                            restore_statuses=yes
                            amount="$(($wf_vars.fungi_book + $unit.level + 1) * 2)"
                        [/heal_unit]
                    [/then]
                    [else]
                        [heal_unit]
                            [filter]
                                side=1
                                x,y=$x1,$y1
                            [/filter]
                            animate=yes
                            restore_statuses=no
                            amount="$(($unit.level + 1) * 2)"
                        [/heal_unit]
                    [/else]
                [/if]
                {CLEAR_VARIABLE heal_amount}
            [/command]
        [/set_menu_item]
    [/event]
    [event]
        name=side 1 turn refresh
        first_time_only=no

        {FIRE_EVENT heal_recall_list}
        {FIRE_EVENT uncover_woses}
    [/event]
    [event]
        name=side 1 turn end
        first_time_only=no
        {FIRE_EVENT cover_woses}
    [/event]
    [event]
        name=uncover_woses
        first_time_only=no
        [if]
            [have_unit]
                side=1
                status=wose_sense
                search_recall_list=no
            [/have_unit]
            [then]
                [store_unit]
                    [filter]
                        [not]
                            side=1
                        [/not]
                        race=wose
                        [not]
                            status=uncovered
                        [/not]
                    [/filter]
                    variable=uncovered_woses
                    mode=append
                [/store_unit]
                [foreach]
                    array=uncovered_woses
                    [do]
                        [modify_unit]
                            [filter]
                                id=$this_item.id
                            [/filter]
                            [effect]
                                apply_to=status
                                add=uncovered
                            [/effect]
                        [/modify_unit]
                    [/do]
                [/foreach]
            [/then]
        [/if]
    [/event]
    [event]
        name=cover_woses
        first_time_only=no

        [foreach]
            array=uncovered_woses
            [do]
                [modify_unit]
                    [filter]
                        id=$this_item.id
                    [/filter]
                    [effect]
                        apply_to=status
                        remove=uncovered
                    [/effect]
                [/modify_unit]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE uncovered_woses}
    [/event]
#enddef

#define WF_SPAWN_SIDE SIDE KEEPS YES_NO_COST YES_NO_CHEST
    # keep_locs defined elsewhere
    {RANDOM_VAR rnd_i 0.."$(${KEEPS}.length-1)"}

    {RANDOM_VAR rnd_leader_type $leader_type}

    [unit]
        canrecruit=yes
        passable=yes
        placement=map
        random_traits=no
        side={SIDE}
        type=$rnd_leader_type
        x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
        [modifications]
            # Dragon can't fly over chasms
            [object]
                #silent=yes
                #duration=forever
                #[filter]
                #    side={SIDE}
                #    canrecruit=yes
                #[/filter]
                [effect]
                    apply_to=movement_costs
                    replace=yes
                    [movement_costs]
                        unwalkable={UNREACHABLE}
                    [/movement_costs]
                [/effect]
            [/object]
        [/modifications]
    [/unit]

    [modify_side]
        side={SIDE}
        hidden=no
        recruit=$recruit_type
        user_team_name=$rnd_team
    [/modify_side]

    {ASSIGN_VAR_IF_NULL fief_quest 0}
    # Recruit Cost {
    {VARIABLE do_recruit_cost {YES_NO_COST}}
    [if]
        {VARIABLE_CONDITIONAL do_recruit_cost boolean_equals yes}
        [then]
            {VARIABLE recruit_cost 0}
            {VARIABLE recruit_count 0}
            # Get Leader cost
            [store_unit_type]
                type=$rnd_leader_type
                variable=recruit_store
                mode=always_clear
            [/store_unit_type]

            [foreach]
                array=recruit_store
                [do]
                    {VARIABLE_OP recruit_cost add $this_item.cost}
                    {VARIABLE_OP recruit_count add 1}
                [/do]
            [/foreach]
            {CLEAR_VARIABLE recruit_store}

            # Get Recruit cost
            [store_unit_type]
                type=$recruit_type
                variable=recruit_store
                mode=always_clear
            [/store_unit_type]
            [foreach]
                array=recruit_store
                [do]
                    {VARIABLE_OP recruit_cost add $this_item.cost}
                    {VARIABLE_OP recruit_count add 1}
                [/do]
            [/foreach]
            {CLEAR_VARIABLE recruit_store}

            # Get average recruit cost
            [if]
                {VARIABLE_CONDITIONAL recruit_count greater_than 0}
                [then]
                    {VARIABLE_OP recruit_cost divide $recruit_count}
                    {VARIABLE_OP recruit_cost round floor}
                [/then]
            [/if]
            {VARIABLE_OP recruit_cost multiply $enemy.num_outlaws}

            [gold]
                side={SIDE}
                amount=$recruit_cost
            [/gold]

            # Increase gold by 20 per year
            {VARIABLE fief_quest_cost 20}
            {VARIABLE_OP fief_quest_cost multiply $wf_vars.year}
            [gold]
                side={SIDE}
                amount=$fief_quest_cost
            [/gold]

            {VARIABLE fief_quest_cost 20}
#ifndef EASY
            [gold]
                side={SIDE}
                amount=$fief_quest_cost
            [/gold]
#endif
            {VARIABLE_OP fief_quest_cost multiply $fief_quest}
            [gold]
                side={SIDE}
                amount=$fief_quest_cost
            [/gold]
            [gold]
                side=1
                amount="$($recruit_cost + (20 * ($enemy.num_outlaws/2)))"
            [/gold]
            {CLEAR_VARIABLE fief_quest_cost}
            {CLEAR_VARIABLE recruit_cost}
            {CLEAR_VARIABLE recruit_count}
        [/then]
    [/if]
    {CLEAR_VARIABLE do_recruit_cost}
    # End Recruit Cost }

    {CLEAR_VARIABLE rnd_leader_type}

    # Place Gold Chest {
    {VARIABLE do_place_chest {YES_NO_CHEST}}
    [if]
        {VARIABLE_CONDITIONAL do_place_chest boolean_equals yes}
        [then]
            [store_locations]
                terrain=!,W*^*,M*^*,Q*^*,X*^*
                [and]
                    [not]
                        x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                    [/not]
                [/and]
                [and]
                    x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                    radius=5
                [/and]
                [and]
                    [not]
                        [filter]
                        [/filter]
                    [/not]
                [/and]
                include_borders=no
                variable=gold_chest_locations
            [/store_locations]
            {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
            [if]
                {VARIABLE_CONDITIONAL rnd_c less_than 0}
                [then]
                    [store_locations]
                        terrain=!,W*^*,M*^*,Q*^*,X*^*
                        [and]
                            [not]
                                x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
                            [/not]
                        [/and]
                        [and]
                            [not]
                                [filter]
                                [/filter]
                            [/not]
                        [/and]
                        include_borders=no
                        variable=gold_chest_locations
                    [/store_locations]
                    {RANDOM_VAR rnd_c 0.."$($gold_chest_locations.length-1)"}
                [/then]
            [/if]

            {PLACE_GOLD_CHEST $gold_chest_locations[$rnd_c].x $gold_chest_locations[$rnd_c].y}
            {CLEAR_VARIABLE rnd_c}
            {CLEAR_VARIABLE gold_chest_locations}
        [/then]
    [/if]
    {CLEAR_VARIABLE do_place_chest}
    # End Place Gold Chest }

    #[gold]
    #    side=1
    #    amount={ON_DIFFICULTY 150 188 219} # *2 *1.5 *1.25
    #[/gold]
    #[gold]
    #    side={SIDE}
    #    amount={ON_DIFFICULTY 75 125 175}
    #[/gold]

    #{CAPTURE_VILLAGES {SIDE} ${KEEPS}[$rnd_i].x ${KEEPS}[$rnd_i].y 8}

    # Prepare keeps for next side
    [store_locations]
        find_in={KEEPS}
        [not]
            x,y=${KEEPS}[$rnd_i].x,${KEEPS}[$rnd_i].y
        [/not]
        variable={KEEPS}
    [/store_locations]
    {CLEAR_VARIABLE rnd_i}
#enddef

#define SELECT_FIEF_FACTION
    [if]
        {VARIABLE_CONDITIONAL relations.fief_factions equals ""}
        #[or]
        #    {VARIABLE_CONDITIONAL relations.fief_factions equals $null}
        #[/or]
        [then]
            {VARIABLE relations.fief_factions "Drakes,Knalgans,Loyalists,Rebels,Northerners,Undead,custom_drakes,custom_dwarves,custom_elves,custom_orcs,custom_trolls,custom_undead,custom_wolves,custom_ogres,custom_cotf"}
#ifhave ~add-ons/Wild_Frontiers/custom/umc_subscene.cfg
            {VARIABLE relations.fief_factions "{WF_UMC_SUBSCENE},$relations.fief_factions"}
#endif
        [/then]
    [/if]
    {WF_RAND_CHOICE $relations.fief_factions}
    {VARIABLE rnd_faction $random_choice}
    {CLEAR_VARIABLE random_choice}
    {WF_RAND_JOIN relations.fief_factions}
    {CLEAR_VARIABLE random_choice_arr}
    [switch]
        variable=rnd_faction
        [case]
            value=Drakes
            [sound]
                name="drake-hit-1.ogg"
            [/sound]
            {VARIABLE rnd_team "Drakes"}
            {VARIABLE leader_type {FACTION_LEADER_DRAKES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_DRAKES}}
        [/case]
        [case]
            value=Knalgans
            [sound]
                name="thunderstick.ogg"
            [/sound]
            {VARIABLE rnd_team "Knalgans"}
            {VARIABLE leader_type {FACTION_LEADER_KNALGANS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_KNALGANS}}
        [/case]
        [case]
            value=Loyalists
            [sound]
                name="horse-canter.wav"
            [/sound]
            {VARIABLE rnd_team "Loyalists"}
            {VARIABLE leader_type {FACTION_LEADER_LOYALISTS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_LOYALISTS}}
        [/case]
        [case]
            value=Northerners
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE rnd_team "Northerners"}
            {VARIABLE leader_type {FACTION_LEADER_NORTHERNERS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_NORTHERNERS}}
        [/case]
        [case]
            value=Rebels
            [sound]
                name="horse-elf-canter.wav"
            [/sound]
            {VARIABLE rnd_team "Rebels"}
            {VARIABLE leader_type {FACTION_LEADER_REBELS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_REBELS}}
        [/case]
        [case]
            value=Undead
            [sound]
                name="wail-sml.wav"
            [/sound]
            {VARIABLE rnd_team "Undead"}
            {VARIABLE leader_type {FACTION_LEADER_UNDEAD}}
            {VARIABLE recruit_type {FACTION_RECRUIT_UNDEAD}}
        [/case]
        [case]
            value=custom_drakes
            [sound]
                name="drake-hit-1.ogg"
            [/sound]
            {VARIABLE rnd_team "Drakes"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_DRAKES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_DRAKES}}
        [/case]
        [case]
            value=custom_dwarves
            [sound]
                name="thunderstick.ogg"
            [/sound]
            {VARIABLE rnd_team "Dwarves"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_DWARVES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_DWARVES}}
        [/case]
        [case]
            value=custom_orcs
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE rnd_team "Orcs"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_ORCS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_ORCS}}
        [/case]
        [case]
            value=custom_trolls
            [sound]
                name="troll-die-2.ogg"
            [/sound]
            {VARIABLE rnd_team "Trolls"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_TROLLS}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_TROLLS}}
        [/case]
        [case]
            value=custom_elves
            [sound]
                name="horse-elf-canter.wav"
            [/sound]
            {VARIABLE rnd_team "Elves"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_ELVES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_ELVES}}
        [/case]
        [case]
            value=custom_undead
            [sound]
                name="wail-sml.wav"
            [/sound]
            {VARIABLE rnd_team "Undead"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_UNDEAD}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_UNDEAD}}
        [/case]
        [case]
            value=custom_wolves
            [sound]
                name="wolf-growl-1.ogg"
            [/sound]
            {VARIABLE rnd_team "Wolves"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_WOLVES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_WOLVES}}
        [/case]
        [case]
            value=custom_ogres
            [sound]
                name="ogre-die-1.ogg"
            [/sound]
            {VARIABLE rnd_team "Ogres"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_OGRES}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_OGRES}}
        [/case]
        [case]
            value=custom_cotf
            [sound]
                name="ambient/birds2.ogg"
            [/sound]
            {VARIABLE rnd_team "Cotf"}
            {VARIABLE leader_type {FACTION_LEADER_CUSTOM_COTF}}
            {VARIABLE recruit_type {FACTION_RECRUIT_CUSTOM_COTF}}
        [/case]
#ifhave ~add-ons/Wild_Frontiers/custom/umc_subscene.cfg
        {WF_UMC_SUBSCENE_CASE}
#endif
        [else]
            #value=cotf
            [sound]
                name="ambient/birds2.ogg"
            [/sound]
            {VARIABLE rnd_team "Cotf"}
            {VARIABLE rnd_leader ("Bandit,Trapper")}
            {VARIABLE rnd_recruit "Poacher,Thug"}
        [/else]
    [/switch]
    {CLEAR_VARIABLE rnd_faction}
#enddef

#define DIRECTION_CONE X1 Y1 X2 Y2 VAR
    [store_relative_direction]
        [source]
            x,y={X1},{Y1}
        [/source]
        [destination]
            x,y={X2},{Y2}
        [/destination]
        mode=1
        variable=direction
    [/store_relative_direction]
    #{VARIABLE direction "n"}
    [if]
        {VARIABLE_CONDITIONAL direction equals "n"}
        [or]
            {VARIABLE_CONDITIONAL direction equals "s"}
        [/or]
        [then]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub 2}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/then]
        [else]
            [store_nearest_locations]
                x,y={X1},{Y1}
                radius=9999
                [filter_location]
                    x,y={X2},{Y2}
                [/filter_location]
                variable=nearest_location
            [/store_nearest_locations]

            {VARIABLE farthest_radius 9}
            {VARIABLE_OP nearest_radius sub $farthest_radius}
            [store_locations]
                [and]
                    x,y={X1},{Y1}
                    radius=$nearest_radius
                [/and]
                include_borders=no
                variable=src_locations
            [/store_locations]
            [store_locations]
                [and]
                    x,y={X2},{Y2}
                    radius=$farthest_radius
                [/and]
                [and]
                    find_in=src_locations
                [/and]
                variable={VAR}
            [/store_locations]

            [while]
                {VARIABLE_CONDITIONAL farthest_radius greater_than 2}
                [do]
                    {VARIABLE_OP farthest_radius sub 1}
                    {VARIABLE_OP nearest_radius add 1}
                    [store_locations]
                        [and]
                            x,y={X1},{Y1}
                            radius=$nearest_radius
                        [/and]
                        include_borders=no
                        variable=src_locations
                    [/store_locations]
                    [store_locations]
                        [and]
                            [and]
                                x,y={X2},{Y2}
                                radius=$farthest_radius
                            [/and]
                            [and]
                                find_in=src_locations
                            [/and]
                        [/and]
                        [or]
                            find_in={VAR}
                        [/or]
                        variable={VAR}
                    [/store_locations]
                [/do]
            [/while]
            {CLEAR_VARIABLE src_locations}
            {CLEAR_VARIABLE nearest_location}
            {CLEAR_VARIABLE nearest_radius}
            {CLEAR_VARIABLE farthest_radius}
        [/else]
    [/if]
    {CLEAR_VARIABLE direction}
    #[foreach]
    #    array={VAR}
    #    [do]
    #        [terrain]
    #            terrain=Rr
    #            [and]
    #                x,y=$this_item.x,$this_item.y
    #            [/and]
    #        [/terrain]
    #    [/do]
    #[/foreach]
#enddef

#define SPAWN_UNITS SIDE TYPES VAR NUM
    {VARIABLE fief_spawn_num {NUM}}
    # Add one more unit per year
    {VARIABLE_OP fief_spawn_num add $wf_vars.year}
    {ASSIGN_VAR_IF_NULL fief_quest 0}
    {VARIABLE_OP fief_spawn_num add $fief_quest}
    [random_placement]
        num_items=$fief_spawn_num
        variable=random_placement_location
        allow_less=yes
        min_distance=1
        [filter_location]
            find_in={VAR}
            include_borders=no
        [/filter_location]
        [command]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$random_placement_location.x
                y=$random_placement_location.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
                [modifications]
                    # Dragon can't fly over chasms
                    [object]
                        #silent=yes
                        #duration=forever
                        #[filter]
                        #    side={SIDE}
                        #    canrecruit=yes
                        #[/filter]
                        [effect]
                            apply_to=movement_costs
                            replace=yes
                            [movement_costs]
                                unwalkable={UNREACHABLE}
                            [/movement_costs]
                        [/effect]
                    [/object]
                [/modifications]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/command]
    [/random_placement]
    {CLEAR_VARIABLE random_placement_location}
    {CLEAR_VARIABLE fief_spawn_num}
#enddef

#define SPAWN_LOCATION SIDE TYPES VAR
    [foreach]
        array={VAR}
        [do]
            [set_variable]
                name=random_types
                rand={TYPES}
            [/set_variable]
            [unit]
                side={SIDE}
                type=$random_types
                x=$this_item.x
                y=$this_item.y
                generate_name=yes
                random_traits=yes
                random_gender=yes
                upkeep=full
                passable=yes
                placement=map
                ai_special=guardian
                #[status]
                #    guardian=yes
                #[/status]
                [modifications]
                    # Dragon can't fly over chasms
                    [object]
                        #silent=yes
                        #duration=forever
                        #[filter]
                        #    side={SIDE}
                        #    canrecruit=yes
                        #[/filter]
                        [effect]
                            apply_to=movement_costs
                            replace=yes
                            [movement_costs]
                                unwalkable={UNREACHABLE}
                            [/movement_costs]
                        [/effect]
                    [/object]
                [/modifications]
            [/unit]
            {CLEAR_VARIABLE random_types}
        [/do]
    [/foreach]
#enddef

#define SPAWN_CIRCLE SIDE TYPES X Y
    [store_locations]
        [not]
            x,y={X},{Y}
        [/not]
        [and]
            x,y={X},{Y}
            radius=1
        [/and]
        variable=circle_locations
    [/store_locations]
    {REPEAT {ON_DIFFICULTY 3 2 1} (
        {VARIABLE clen $circle_locations.length}
        {VARIABLE_OP clen sub 1}
        {CLEAR_VARIABLE circle_locations[$clen]}
        {CLEAR_VARIABLE clen}
    )}
    {SPAWN_LOCATION {SIDE} {TYPES} circle_locations}
    {CLEAR_VARIABLE circle_locations}
#enddef

#define PLACE_HOSTAGE TYPES X Y
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_types
        rand={TYPES}
    [/set_variable]
    [store_unit_type]
        type=$random_types
    [/store_unit_type]
    {CLEAR_VARIABLE random_types}
    {PLACE_IMAGE "$unit_type.image|~RC(magenta>red)" {X} {Y}}
    {PLACE_IMAGE items/cage.png {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [remove_item]
            x,y={X},{Y}
            image="$unit_type.image|~RC(magenta>red)"
        [/remove_item]
        [unit]
            side=1
            animate=yes
            passable=yes
            placement=map
            random_traits=yes
            type=$unit_type.id
            role=friend
            x,y={X},{Y}
        [/unit]
        [fire_event]
            name=amla_extra_event
            [primary_unit]
                role=friend
            [/primary_unit]
        [/fire_event]
        [unhide_unit]
        [/unhide_unit]
        [message]
            role=friend
            message=_"About time."
        [/message]
        [message]
            speaker=unit
            message=_"YOU CAN TALK?!"
        [/message]
        [modify_unit]
            [filter]
                role=friend
            [/filter]
            role=""
        [/modify_unit]
        [remove_item]
            x,y={X},{Y}
            image=items/cage.png
        [/remove_item]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE unit_type}
#enddef

#define PLACE_GOLD_CHEST X Y
    {VARIABLE_OP objective_goal add 1}
    [set_variable]
        name=random_gold
        rand=90..100
    [/set_variable]
    {PLACE_IMAGE (items/chest.png) {X} {Y}}
    [event]
        name=moveto
        first_time_only=yes
        delayed_variable_substitution=no
        [filter]
            side=1
            x,y={X},{Y}
        [/filter]
        [sound]
            name=open-chest.wav
        [/sound]
        [remove_item]
            x,y={X},{Y}
            image=items/chest.png
        [/remove_item]
        {PLACE_IMAGE (items/chest-open.png) {X} {Y}}
        [floating_text]
            x,y={X},{Y}
            text= "<span color='#cccc33'>$random_gold|</span>"
        [/floating_text]
        [delay]
            time=400
        [/delay]
        [gold]
            side=1
            amount=$random_gold
        [/gold]
        [sound]
            name=gold.ogg
        [/sound]
        {VARIABLE_OP objective_goal sub 1}
        [fire_event]
            name=check_objectives
        [/fire_event]
    [/event]
    {CLEAR_VARIABLE random_gold}
#enddef

#define SETUP_NEXT_URM
#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
    [if]
        {VARIABLE_CONDITIONAL wf_maps equals $null}
        [or]
            {VARIABLE_CONDITIONAL wf_maps equals ""}
        [/or]
        [then]
            {VARIABLE wf_maps "Archipelago,Barren,Cave,Citadel,Desert,Flood,Forest,Frozen,Island,Jungle,Lava,Marsh,Mountains,Ocean,River,Vale,Volcano,Wastes,Winter"}
        [/then]
    [/if]
    {WF_RAND_CHOICE $wf_maps}
    {VARIABLE quota.next_urm $random_choice}
    {CLEAR_VARIABLE random_choice}
    {WF_RAND_JOIN wf_maps}
    {CLEAR_VARIABLE random_choice_arr}
#endif
#enddef

#define CHAIN_VICTORY
#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
    {SETUP_NEXT_URM}
#endif
    {CLEAR_VARIABLE objective_goal}
    [store_gold]
        side=1
        variable=total_gold
    [/store_gold]
    {VARIABLE_OP total_gold add $stash_gold}
    {VARIABLE finished no}
    {ASSIGN_VAR_IF_NULL fief_quest 0}
    {VARIABLE_OP fief_quest add 1}
    [if]
        {VARIABLE_CONDITIONAL fief_quest less_than 3}
        [then]
            [while]
                [variable]
                    name=finished
                    boolean_equals=no
                [/variable]
                [do]
                    [message]
                        speaker=narrator
                        image=wesnoth-icon.png
                        message=_"Do you want to persue other locations? (Total gold: $total_gold|)"
                        [option]
                            label=_"Yes. (Random)"
                            [command]
                                {VARIABLE finished yes}
                                {VARIABLE append_hero no}
                                {VARIABLE rnd_fief "Fall_Guardians,Fief_Fall,Fief_Uprising,Hidden_Cave,Indoors,Raid_Fall,Raid_Spring,Spring_Guardians,Trek_V,Trek_H,Traitors,Underground"}

#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
                                {VARIABLE rnd_fief "$rnd_fief,U_URM_$quota.next_urm|,G_URM_$quota.next_urm|"}
#endif
                                {RANDOM_VAR rnd_fief $rnd_fief}
                            [/command]
                        [/option]
                        [option]
                            label=_"Supress uprising ..."
                            [command]
                                [message]
                                    speaker=narrator
                                    image=wesnoth-icon.png
                                    message=_"Do you want to persue other locations?"
                                    [option]
                                        label=_"Supress uprising. (Spring)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Fief_Uprising"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Supress uprising. (Fall)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Fief_Fall"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Supress uprising. (Indoors)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Indoors"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Supress uprising. (Cave)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Underground"}
                                        [/command]
                                    [/option]
#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
                                    [option]
                                        label=_"Supress uprising. (URM $quota.next_urm|)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "U_URM_$quota.next_urm|"}
                                        [/command]
                                    [/option]
#endif
                                    [option]
                                        label=_"Go back ..."
                                        [command]
                                        [/command]
                                    [/option]
                                [/message]
                            [/command]
                        [/option]

                        [option]
                            label=_"Raid fief ..."
                            [command]
                                [message]
                                    speaker=narrator
                                    image=wesnoth-icon.png
                                    message=_"Do you want to persue other locations?"
                                    [option]
                                        label=_"Raid fief. (Spring)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Raid_Spring"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Raid fief. (Fall)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Raid_Fall"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Go back ..."
                                        [command]
                                        [/command]
                                    [/option]
                                [/message]
                            [/command]
                        [/option]

                        [option]
                            label=_"Free beast ..."
                            [command]
                                [message]
                                    speaker=narrator
                                    image=wesnoth-icon.png
                                    message=_"Do you want to persue other locations?"
                                    [option]
                                        label=_"Free beast. (Spring)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Spring_Guardians"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Free beast. (Fall)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Fall_Guardians"}
                                        [/command]
                                    [/option]
#ifhave ~add-ons/Ultimate_Random_Maps/_main.cfg
                                    [option]
                                        label=_"Free beast. (URM $quota.next_urm|)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "G_URM_$quota.next_urm|"}
                                        [/command]
                                    [/option]
#endif
                                    [option]
                                        label=_"Go back ..."
                                        [command]
                                        [/command]
                                    [/option]
                                [/message]
                            [/command]
                        [/option]

                        [option]
                            label=_"Others ..."
                            [command]
                                [message]
                                    speaker=narrator
                                    image=wesnoth-icon.png
                                    message=_"Do you want to persue other locations?"
                                    [option]
                                        label=_"Fight traitors. (Indoors)"
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Traitors"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Clear underground cave."
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Hidden_Cave"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"On the road."
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Trek_H"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Down the road."
                                        [command]
                                            {VARIABLE finished yes}
                                            {VARIABLE append_hero no}
                                            {VARIABLE rnd_fief "Trek_V"}
                                        [/command]
                                    [/option]
                                    [option]
                                        label=_"Go back ..."
                                        [command]
                                        [/command]
                                    [/option]
                                [/message]
                            [/command]
                        [/option]

                        [option]
                            label=_"No, I want to go back to my town."
                            default=yes
                            [command]
                                {VARIABLE finished yes}
                                {VARIABLE append_hero yes}
                                {VARIABLE rnd_fief $wf_vars.next_scenario}
                                {CLEAR_VARIABLE fief_quest}
                            [/command]
                        [/option]
                    [/message]
                [/do]
            [/while]
        [/then]
        [else]
            # Go back home
            {VARIABLE append_hero yes}
            {VARIABLE rnd_fief $wf_vars.next_scenario}
            {CLEAR_VARIABLE fief_quest}
        [/else]
    [/if]
    {CLEAR_VARIABLE finished}
    {CLEAR_VARIABLE total_gold}

    [event]
        name=chain_victory
        id=chain_victory
        first_time_only=yes
        delayed_variable_substitution=no

        [endlevel]
            result=victory
            bonus=no
            carryover_percentage=100
            linger_mode=no
            next_scenario=$rnd_fief
        [/endlevel]
    [/event]
    {CLEAR_VARIABLE rnd_fief}

    [fire_event]
        name=wf_victory
    [/fire_event]

    [fire_event]
        name=chain_victory
    [/fire_event]
#enddef
