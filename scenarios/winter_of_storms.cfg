#textdomain wesnoth-Wild_Frontiers
[scenario]
    id=Winter_of_Storms
    next_scenario=Spring_of_Raindrops
    name=_"Winter of Storms"
    {NO_MAP_DATA}
    turns={SEASON_LENGTH}
    victory_when_enemies_defeated=no

#ifver WESNOTH_VERSION >= 1.15.0
    do_healing=yes
#endif

    # Less daylight in the winter
    {WINTER_SCHEDULE}

    {DEFAULT_MUSIC_PLAYLIST}

    {WINTER_STORY}

    [event]
        name=prestart

        {SETUP_GAME_VARIABLES}
        {SETUP_SEASON_VARIABLES winter _"Winter"}
        {VARIABLE wf_vars.next_scenario Spring_of_Raindrops}
    [/event]

    {YOU_ARE_SIDE1 yes}
    {ANIMALS_ARE_SIDE2 1}	# animals move towards your leader (effectively the town)
    {OUTLAWS_ARE_SIDE3}
    {BANDITS_ARE_SIDE4}
    {ORCS_ARE_SIDE5}
    {ELVES_ARE_SIDE6}
    {UNDEAD_ARE_SIDE7}
    {CALAMITY_IS_SIDE8}
    {FRIENDS_ARE_SIDE9}

    {NEW_OUTLAWS_RAIDS $jumps.winter_outlaws {ON_DIFFICULTY 4 6 6}}
    {NEW_BANDITS_RAIDS $jumps.winter_outlaws {ON_DIFFICULTY 4 6 6}}
    {NEW_ORC_AND_UNDEAD_RAIDS $jumps.winter_raids {ON_DIFFICULTY 2 2 2}}	# Ghost raid in the winter
    {NEW_ELVES_RAIDS {ON_DIFFICULTY 1 1 1}}
    {NEW_DWARVES_RAIDS {ON_DIFFICULTY 1 1 1}}

    # ----- Prestart -----------------------------------------------------
    [event]
        name=prestart

        {RESTORE_MAP_AND_UNITS}

        # Farms don't have any crops in the winter
        [modify_side]
            side=1
            village_gold=$farm_income.winter
            village_support=$farm_support.winter
        [/modify_side]

        # Every man for himself
        [modify_side]
            side=9
            team_name=settlers
        [/modify_side]
        {VARIABLE wf_vars.attack_animals yes}

        # Adjust map terrain for winter (not so aesthetic)
        {SWITCH_TERRAIN_OVERLAY "Vh" "Vha"}	# snow on villages
        {SWITCH_TERRAIN_OVERLAY "Vhh" "Vhha"}	# snow on villages
        {SWITCH_TERRAIN_OVERLAY "Gvs" " "}	# crops are harvested, allows snowcover
        {SWITCH_TERRAIN_BASE "G*" "Aa"}		# snow on plains
        {SWITCH_TERRAIN_BASE "Re" "Aa"}		# snow on dirt (grass grows here in the spring)
        {SWITCH_TERRAIN_BASE "Rb" "Aa"}		# snow on farms (crops regrow in the spring)
        {SWITCH_TERRAIN_BASE "Hh*" "Ha"}	# snow on hills
        {SWITCH_TERRAIN_OVERLAY "Fds" "Fda"}	# snow on deciduous forests
        {SWITCH_TERRAIN_OVERLAY "Fms" "Fma"}	# snow on mixed forest
        {SWITCH_TERRAIN_OVERLAY "Fdf" "Fda"}	# snow on deciduous forests
        {SWITCH_TERRAIN_OVERLAY "Fmf" "Fma"}	# snow on mixed forest
        {SWITCH_TERRAIN_OVERLAY "Fp" "Fpa"}	# snow on pine forests
        {SWITCH_TERRAIN_BASE "Ww*" "Ai"}	# shallow water freezes over
        {SWITCH_TERRAIN_BASE "Wo" "Wog"}	# deep water just looks grey
        {SWITCH_TERRAIN_BASE "Mm" "Ms"}		# snow on mountains
        {SWITCH_TERRAIN_BASE "Ce" "Cea"}	# snow on encampments
        {SWITCH_TERRAIN_BASE "Ke" "Kea"}	# snow on encampments
        {SWITCH_TERRAIN_BASE "Co" "Coa"}	# snow on orc encampments
        {SWITCH_TERRAIN_BASE "Ko" "Koa"}	# snow on orc keep
        {SWITCH_TERRAIN_BASE "Ch" "Cha"}	# snow on castles
        {SWITCH_TERRAIN_BASE "Kh" "Kha"}	# snow on castles
        {SWITCH_BUILDING_BASE "Aa" "Re"}	# people shovel the snow under buildings
        {SWITCH_TERRAIN_OVERLAY "Ybb" "Es"}	# Make sure fires get put out
        {SWITCH_VILLAGE_BASE "Sm" "Ss"}		# swamp village

        [terrain]
            terrain=Re
            layer=base
            [and]
                terrain=*^Wm
            [/and]
        [/terrain]
        [terrain]
            terrain=Aa
            layer=base
            [and]
                terrain=*^Ygy,*^Ymb,*^Ymc,*^Ymd
            [/and]
        [/terrain]

        {WF_RANDOM_PLACEMENT Ss Ww}
        {WF_RANDOM_PLACEMENT Sm Aa}

        # Make winter less extreme
        {WF_RANDOM_PLACEMENT Aa Rb}
        [if]
            {VARIABLE_CONDITIONAL wf_vars.no_fog boolean_equals yes}
            [then]
                {WF_RANDOM_PLACEMENT Aa Rb}
            [/then]
        [/if]
        # Will not work for CotF 3x3
        [terrain]
            terrain=Rb^Gvs
            [and]
                terrain=Rb
                [filter_adjacent_location]
                    terrain=*^Vh,*^Vha,*^Vhr
                [/filter_adjacent_location]
            [/and]
        [/terrain]

        {WINTER_RELATIONS}

        # Standard scenario menus/events
        # Note: workers can work a bit in the winter, but there's not much terrain
        # they can build on. This is much easier than trying to kill all the
        # menu options and then restore them.
        {WORKERS_CAN_WORK}
        # School is out in the winter.
        #[remove_event]
        #    id=train_units
        #[/remove_event]
        [modify_unit]
            [filter]
                side=1
                status=training
            [/filter]
            [effect]
                apply_to=status
                remove=training
            [/effect]
        [/modify_unit]
        {ALLOW_UNRECRUIT}
        {ASSIGN_SPEAKER_ROLES}
        {SET_MAP_SIGNS}
        {SET_MAP_LABELS}
        {SET_UP_RELICS}
        {SURPRISE_TENT}
        {SETUP_NEXT_URM}
        {URM_TENT}
        {SUB_INDOOR}
    [/event]

    # End of season gradual change
    [event]
        name=new turn
        id=gradual_change
        [filter_condition]	# done this way so I can do math on the turn number
            [variable]
                name=turn_number
                numerical_equals="$({SEASON_LENGTH}-2)"
            [/variable]
        [/filter_condition]

        # Cover up previously cleared places with green and create new cleared patches
        {SWITCH_TERRAIN_OVERLAY "Gvs" " "}
        {SWITCH_TERRAIN_BASE "Rb" "Gg"}

        {WF_RANDOM_PLACEMENT Ms Mm}
        {WF_RANDOM_PLACEMENT Ha Hh}
        {WF_RANDOM_PLACEMENT Cea Ce}
        {WF_RANDOM_PLACEMENT Cha Ch}
        {WF_RANDOM_PLACEMENT Aa Gg}
        [if]
            {VARIABLE_CONDITIONAL wf_vars.no_fog boolean_equals yes}
            [then]
                {WF_RANDOM_PLACEMENT Aa Gg}
            [/then]
        [/if]

        # Player should not be able to build on exposed ground.
        # Place farm next to village.
        # Will not work for CotF 3x3
        [terrain]
            terrain=Rb^Gvs
            [and]
                terrain=Gg
                [filter_adjacent_location]
                    terrain=*^Vh,*^Vha,*^Vhr
                [/filter_adjacent_location]
            [/and]
        [/terrain]
        {STOP_ENEMY_SPAWN}
    [/event]

    [event]
        name=start

        # First victims of the winter, Giant Rats get eaten by lurking wolves
#ifndef EASY
        [store_unit]
            variable=unit_winter
            [filter]
                side=2
                type=Giant Rat
            [/filter]
        [/store_unit]
        [transform_unit]
            side=2
            type=Giant Rat
            transform_to=Wolf
        [/transform_unit]
        [foreach]
            array=unit_winter
            [do]
                [heal_unit]
                    [filter]
                        id=$this_item.id
                    [/filter]
                    amount=full
                    animate=no
                    moves=full
                    restore_attacks=yes
                    restore_statuses=yes
                [/heal_unit]
            [/do]
        [/foreach]
        {CLEAR_VARIABLE heal_amount}
        {CLEAR_VARIABLE unit_winter}
#endif

        #{SIDE_AI_GOAL_TARGET 2}

        [micro_ai]
            side=2
            ai_type=wf_loiter_guardian
            ca_id=wf_loiter_guardian_animals
            action=delete
        [/micro_ai]
        [micro_ai]
            side=2
            ai_type=lurkers
            ca_id=lurkers_wolf
            action=delete
        [/micro_ai]
        [micro_ai]
            side=2
            ai_type=lurkers
            ca_id=lurkers_sea
            action=delete
        [/micro_ai]
        [micro_ai]
            side=2
            ai_type=coward
            ca_id=coward_animals
            action=delete
        [/micro_ai]
        [micro_ai]
            side=2
            ai_type=wf_curse_guardian
            ca_id=wf_curse_guardian_feral
            action=delete
        [/micro_ai]
        [micro_ai]
            side=2
            ai_type=wf_curse_guardian
            ca_id=wf_curse_guardian_sheepish
            action=delete
        [/micro_ai]
        #[micro_ai]
        #    side=2
        #    ai_type=wf_curse_guardian
        #    ca_id=wf_curse_guardian_pinetree
        #    action=delete
        #[/micro_ai]
        [micro_ai]
            side=2
            ai_type=wf_curse_guardian
            ca_id=wf_curse_guardian_piggie
            action=delete
        [/micro_ai]

        {WINTER_TUTORIAL}

        {STANDARD_OBJECTIVES winter}
        {DISPLAY_YEAR_AND _"Winter"}
        {CLEAR_VARIABLE item_xy}

        #{RANDOM_VAR rnd_turn 6..36}
        #[event]
        #    name=side 1 turn $rnd_turn refresh
        #    first_time_only=yes
        #    delayed_variable_substitution=no
        #    {FIRE_EVENT ruin_projects}
        #[/event]
        #{CLEAR_VARIABLE rnd_turn}
    [/event]

    [event]
        name=ruin_projects
        id=ruin_projects
        first_time_only=no

	# This event is called from utils/events.cfg

        [store_locations]
            variable=village_store
            terrain=*^Vhr
            mode=always_clear
        [/store_locations]
        [for]
            array=village_store
            reverse=yes
            [do]
                {RANDOM_VAR do_collapse (no,yes)}
                [if]
                    {VARIABLE_CONDITIONAL do_collapse boolean_equals yes}
                    [then]
                        {STOP_PROJECT $village_store[$i].x $village_store[$i].y}
                        {WF_CALL_FUNCTION "farm" do,x,y="burn",$village_store[$i].x,$village_store[$i].y}
                        {DELFADOR_SAYS _"The decrepit farm has collapsed under the weight of the snow."}
                        [break][/break]
                    [/then]
                [/if]
                {CLEAR_VARIABLE do_collapse}
            [/do]
        [/for]
        {CLEAR_VARIABLE village_store}

        [store_locations]
            variable=village_store
            terrain=*^Vhhr
            mode=always_clear
        [/store_locations]
        [for]
            array=village_store
            reverse=yes
            [do]
                {RANDOM_VAR do_collapse (no,yes)}
                [if]
                    {VARIABLE_CONDITIONAL do_collapse boolean_equals yes}
                    [then]
                        {STOP_PROJECT $village_store[$i].x $village_store[$i].y}
                        {WF_CALL_FUNCTION "hill village" do,x,y="burn",$village_store[$i].x,$village_store[$i].y}
                        {DELFADOR_SAYS _"The decrepit hill village has collapsed under the weight of the snow."}
                        [break][/break]
                    [/then]
                [/if]
                {CLEAR_VARIABLE do_collapse}
            [/do]
        [/for]
        {CLEAR_VARIABLE village_store}
    [/event]

    {WF_SNOW_PLOW}

    # ----- In-scenario Events -------------------------------------------
    {TUTORIAL_MESSAGES}
    {LOW_GOLD_WARNINGS}
    {GENERIC_DIALOGUE}
    {LOYAL_AMLA}
    {TRADE_CARAVAN winter}
    {CALAMITIES_MAY_OCCUR}

    # ----- Defeat & Victory Conditions ----------------------------------
    {DEFEAT_HERO_DIES}
    {DEFEAT_BANKRUPTCY}

    {END_OF_SEASON}
    {CAMPAIGN_VICTORY}

    # ----- Clean-up -----------------------------------------------------
    [event]
        name=wf_victory

        {VARIABLE wf_vars.attack_animals no}

        [fire_event]
            name=place_recall_list
        [/fire_event]

        # There are probably a LOT of outlaws on the map at the end of the
        # winter. So we'll kill some off (they ran out of food) and back off
        # on generating any for a while. Otherwise it'd just be cruel. Only
        # units that can't be seen are killed off, so the player doesn't know
        # I'm playing tricks. This doesn't seem to work in event=victory or
        # event=prestart, probably because vision is not defined at that point
        [store_unit]
            variable=outlaw_store
            [filter]
                side=3,4,5,6,7
                [not]
                    #role=outlaw_leader
                    {FILTER_FOR_LEADER}
                [/not]
            [/filter]
        [/store_unit]
        [set_variable]	# has to be done this way to use macro definition of outlaw_thinning
            name=outlaws_to_kill
            {OUTLAW_THINNING}
        [/set_variable]
        {VARIABLE_OP outlaws_to_kill multiply $outlaw_store.length}
        {VARIABLE_OP outlaws_to_kill round ceil}
        [store_unit]
            variable=outlaw_store
            mode=always_clear
            [filter]
                side=3,4,5,6,7
                [filter_vision]
                    visible=no
                    side=1
                [/filter_vision]
                [not]
                    #role=outlaw_leader
                    {FILTER_FOR_LEADER}
                [/not]
            [/filter]
        [/store_unit]
        [if]	# Unlikely that so many outlaws are visible, but possible
            {VARIABLE_CONDITIONAL outlaws_to_kill greater_than $outlaw_store.length}
            [then]
                {VARIABLE outlaws_to_kill $outlaw_store.length}
            [/then]
        [/if]
        #{WF_DEBUG "Going to remove $outlaws_to_kill outlaws/undead"}
        {VARIABLE i 0}
        [while]
            {VARIABLE_CONDITIONAL i less_than $outlaws_to_kill}
            [do]
                {RANDOM_VAR death 0.."$($outlaw_store.length-1)"}
                [kill]
                    x=$outlaw_store[$death].x
                    y=$outlaw_store[$death].y
                    animate=no
                    fire_event=no
                [/kill]
                {CLEAR_VARIABLE outlaw_store[$death]}
                {VARIABLE_OP i add 1}
            [/do]
        [/while]
        {CLEAR_VARIABLE i}
        {CLEAR_VARIABLE death}
        {CLEAR_VARIABLE outlaws_to_kill}
        {CLEAR_VARIABLE outlaw_store}

        {STOP_ENEMY_RECRUIT}

        {VARIABLE relations.calamity_type "none"}
        # Return outlaws to normal
        #{VARIABLE_OP enemy.num_outlaws sub 2}

        {CLEAR_VARIABLE item_xy}
        {CLEAR_VARIABLE quota}
        {RESET_SIDES_GOLD}
        {RESET_TREES_HILLS}
        {STORE_MAP_AND_UNITS}
        {WF_CLEANUP_MENU}
        {CLEAR_VARIABLE last_unit_id}
    [/event]

    {WF_DEBUG_NEXT_LEVEL}
    {WF_RAND_CHOICE_EVENT}
    {WF_DIPLOMACY}
    {WF_MISC_EVENTS}
    {WF_SEASON_DEBUG winter}
[/scenario]
